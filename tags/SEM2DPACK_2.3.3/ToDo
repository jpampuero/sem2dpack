-- KNOWN ISSUES: 
     + rsf is not the same as in Ampuero and Ben-Zion (2008)
     + rsf with v<0 is inconsistent
     + compatibility between dynamic faults and free surface is not enforced yet
     + incompatibility between dynamic faults and absorbing boundaries (see 1D test)
     + Kelvin-Voigt for inhomogeneous materials (gradient, etc) is not consistent 
     + Kelvin-Voigt for plastic materials is not consistent 
     + damage needs plasticity after loss of convexity

   POSSIBLE ISSUES (need further verification, including beta features):
     + normal stress in SCEC example is not constant ?
     + bimaterial faults
     + kinked, branched and multi-segment faults
     + plasticity with Newmark (non explicit)
     + damage material interacting with absorbing boundaries
     + damage with beta>0
     + Q9 elements
     
-- TO DO LIST:

  SOLVER:

   Materials:
     + plasticity with softening and regularization (viscous or non-local)
     + attenuation Q
     + "crustal-plane" model (2.5D)
     + Perfectly Matched Layers, split or unsplit
     + attenuation Q with coarse-grained variables (Day)
     + more smoothing and interpolation options for heterogeneous velocity models
     + Rayleigh damping
     + poro-elasticity
     + acoustic fluid 
     + fluid-solid interaction
     + non-linear laws as in Shake and other commercial packages
     + homogeneization of shallow layers

   Sources:
     + src_gen: add amplitude to input file for mutiple sources
     + broad band sources: Gaussian, Morlet, Berlage
     + allow sources not at node
     + noise sources

   Boundary conditions:
     + more friction laws: 
        . rate-and-state
        . rate-and-state with strong velocity-weakening
        . time weakening with spontaneous rupture speed
        . time healing
        . velocity toughening
     + couple dynamic faults to off-fault (1D) heat and fluid/porosity equations
     + dynamic faults: handle branching points
     + higher order ABC for SH
     + time-dependent Dirichlet and Neumann conditions
     + Dirichlet and Neumann conditions on non vertical/horizontal boundaries
     + spatially non uniform Dirichlet and Neumann boundary conditions

   Other:
     + critical timestep estimate based on reciprocal lattice stepsize
       or computing the maximum eigenvalue for each element
     + memory usage report for boundary conditions
     + add warning on timestep for kelvin-voigt material
     + domain reduction method with boundary traction data (Bielak)
     + non-conformal mesh with mortar elements
     + domain decomposition database, for MPI test and multidomain coupling
     + a few triangles, Fekete or other
     + sub-cycling for simulations with disparate time-scales 
     + implicit dynamic solvers (test pre-conditionners, blended mass)
     + implicit/explicit partitioning near small geometrical features
     + implicit quasi-static solvers with conjugate gradient 
     + soil-structure interaction (see QUAD4M, etc)
     

  MESHER:
[1]  + kinked and curved faults 
[2]  + add surrounding strip of elements for PML
     + automated meshing starting with a triangulation: 
       Triangle (http://www.cs.cmu.edu/~quake/triangle.html)
        -->  CQmesh (http://www.dct.ufms.br/~marcelo/cqmesh.html)
         --> QMPP (http://www.dct.ufms.br/~marcelo/qmpp.html)
          --> SEM2DPACK 
     + element quality metrics
     
  REFACTORING:
     + 'domain' object
     + encapsulate echo MSG...OK
     
  OPTIMIZATION:
     + vectorize damage compute stress
     + needs further optimization:
       v2.2.12e shows 50% CPU time loss compared to v2.2.11 on EXAMPLES/UsingEMC2
       Expanding size arguments on MAT_ELAST_f did not work
       (see junk/mat_elast_longarg.f90 and junk/solver_longarg.f90)
     + Pointer components of structures are referenced directly within some procedures.
       This prevents more agressive compiler optimization: compiler is conservative,
       assumes aliasing (pointer components can point to same memory) 
       and produces safe but slower code
       Can be resolved by layering: 
       1. procedure calls a sub-procedure 
          with structure pointer components expanded as arguments
       or
       2. allocatable components of Fortran 2003 (implemented in Intel compiler)
     + improve data locality: declare large working arrays instead of 
       element-by-element pointer allocation
     + allow single precision
     
  INPUTS/OUTPUTS/POST:
     + GMT scripts for snapshot plots
     + matlab snapshots with tricontour
     + seismograms: input sampling rate instead of number of timesteps (interpolate)
     + interpol/subsampling in all snapshot outputs
     + gnuplot plotting scripts: pm3d, vectors
     + 1D response: integrate Fabian Bonilla's contrib
     + update the 1.x tools (1D model response)
     + Nakamura's H/V method (script)
     + engineering outputs: PGA, PGV, response spectra, etc
     + Graphical User Interface front end

  DOCUMENTATION:
     + description of the boundary conditions
     + examples in matlab doc
     + guidelines for advanced users on how-to implement new 
       materials, outputs, distributions, sources, friction laws, boundary conditions
     + emc2: detailed example of quadrangulate domains for structured regions
     + improve self-documentation script: make latex output, test RoboDoc or similar
     
  PACKAGING:
     + expand test suite, test each main feature
     + create a SubVersion project
     + avoid unnecessary recompilation of modules (www.theochem.uwa.edu.au/fortran/recompile)
     + add compiler_variable to Makefile
     
