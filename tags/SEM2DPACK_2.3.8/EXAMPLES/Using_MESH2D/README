EXAMPLES/Using_MESH2D

In this example an earthquake on a reverse fault is modeled with 
a dynamic fault boundary condition. The crustal velocity model
has a low velocity layer near the surface. The fault has a kink.
Seismograms are recorded at the surface, along a line of receivers with
regular 1 km spacing.

The mesh file ex1_splitted_h1.mesh2d was generated by the Matlab 
script PRE/MESH2D/mesh2d_ex1.m, with an element size of 
approximately 1 km along the fault. 

With NGLL=5 this mesh gives an average node spacing of 250 m along 
the fault, which barely resolves the rupture process zone. 
This low resolution mesh serves here only as an illustration of code 
features and usage.  Production runs should be done with a finer mesh, 
by resetting the parameter h in mesh2d_ex1.m

A layer of Kelvin-Voigt viscous material is added near the fault to
damp spurious high-frequency artifacts. Damping can be increased by 
increasing the viscosity (eta) but there is a trade-off: the parameter
Courant must be decreased (reduces the timestep) to avoid instability, 
which increases proportionally the computational cost.

The earthquake is triggered artificially by imposing a time-weakening
front that propagates bilaterally at constant speed, as in Andrews (1985).

Run the solver (sem2dsolve).
In Matlab, watch the evolution of the horizontal velocity wavefield:
  g=sem2d_read_specgrid; % load the spectral element grid once 
  sem2d_snapshot_movie('vx',g,'Caxis',[-1 1]);
Watch the vertical velocity:
  sem2d_snapshot_movie('vz',g,'Caxis',[-1 1]);
Generate an animated GIF movie:
  sem2d_snapshot_movie('vz',g,'Caxis',[-1 1],'MakeGIF','on');
that you can then watch with 'xanim', 'animate', or include in an HTML 
document.
Plot the vertical component velocity seismograms:
  s=sem2d_read_seis; % load the seismograms once 
  plot_seis(s.x,s.dt,s.uz,10);
Plot fault slip as a function of depth:
  f=sem2d_read_fault; % load the fault output once
  plot(f.z,-f.d(:,1:100:end))  % one curve for each time, every 100 timesteps
Plot the rupture front:
  plot_fronts(-f.v,0.01,-f.d,0.4,f.z,f.dt);
  xlabel('Z (m)')
You can zoom in the rupture front to appreciate how many nodes are
contained in the process zone (blue area in the figure). For appropriate
numerical resolution there should be at least 4 to 5.
