%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: users_guide_sem2dpack.dvi
%%Pages: 26
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMBX12 CMR12 CMDUNH10 CMR10 CMSY10 CMBX10 CMR8 CMTI10
%%+ CMR6 CMR9 CMTT9 CMTT10 Courier Courier-Bold Courier-BoldOblique
%%+ Courier-Oblique Helvetica Helvetica-Bold Symbol Times-Bold
%%+ Times-Roman CMMI9 CMMI6 CMSY9 CMMI10 CMSS10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips users_guide_sem2dpack -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.02.07:2018
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: f7b6d320.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmb10 cmbx10 cmbx12 cmbx5 cmbx6 cmbx7 cmbx8 cmbx9 cmbxsl10
%     cmdunh10 cmr10 cmr12 cmr17cmr6 cmr7 cmr8 cmr9 cmsl10 cmsl12 cmsl8
%     cmsl9 cmss10cmss12 cmss17 cmss8 cmss9 cmssbx10 cmssdc10 cmssi10
%     cmssi12 cmssi17 cmssi8cmssi9 cmssq8 cmssqi8 cmvtt10
%
/TeXf7b6d320Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /hyphen
/period /slash /zero /one /two /three /four /five /six /seven /eight
/nine /colon /semicolon /exclamdown /equal /questiondown /question /at
/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X
/Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: bbad153f.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsy10 cmsy5 cmsy6 cmsy7 cmsy8 cmsy9
%
/TeXbbad153fEncoding [
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /circlemultiply
/circledivide /circledot /circlecopyrt /openbullet /bullet
/equivasymptotic /equivalence /reflexsubset /reflexsuperset /lessequal
/greaterequal /precedesequal /followsequal /similar /approxequal
/propersubset /propersuperset /lessmuch /greatermuch /precedes /follows
/arrowleft /arrowright /arrowup /arrowdown /arrowboth /arrownortheast
/arrowsoutheast /similarequal /arrowdblleft /arrowdblright /arrowdblup
/arrowdbldown /arrowdblboth /arrownorthwest /arrowsouthwest /proportional
/prime /infinity /element /owner /triangle /triangleinv /negationslash
/mapsto /universal /existential /logicalnot /emptyset /Rfractur /Ifractur
/latticetop /perpendicular /aleph /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /union /intersection
/unionmulti /logicaland /logicalor /turnstileleft /turnstileright
/floorleft /floorright /ceilingleft /ceilingright /braceleft /braceright
/angbracketleft /angbracketright /bar /bardbl /arrowbothv /arrowdblbothv
/backslash /wreathproduct /radical /coproduct /nabla /integral
/unionsq /intersectionsq /subsetsqequal /supersetsqequal /section
/dagger /daggerdbl /paragraph /club /diamond /heart /spade /arrowleft
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /.notdef /.notdef
/circlemultiply /circledivide /circledot /circlecopyrt /openbullet
/bullet /equivasymptotic /equivalence /reflexsubset /reflexsuperset
/lessequal /greaterequal /precedesequal /followsequal /similar
/approxequal /propersubset /propersuperset /lessmuch /greatermuch
/precedes /follows /arrowleft /spade /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 74afc74c.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmbxti10 cmff10 cmfi10 cmfib8 cmti10 cmti12 cmti7 cmti8cmti9 cmu10
%
/TeX74afc74cEncoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /sterling /percent
/ampersand /quoteright /parenleft /parenright /asterisk /plus /comma
/hyphen /period /slash /zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /exclamdown /equal /questiondown /question
/at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 09fbbfac.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsltt10 cmtt10 cmtt12 cmtt8 cmtt9
/TeX09fbbfacEncoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/Omega /arrowup /arrowdown /quotesingle /exclamdown /questiondown
/dotlessi /dotlessj /grave /acute /caron /breve /macron /ring /cedilla
/germandbls /ae /oe /oslash /AE /OE /Oslash /visiblespace /exclam
/quotedbl /numbersign /dollar /percent /ampersand /quoteright /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon /less
/equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash /bracketright
/asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l
/m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar /braceright
/asciitilde /dieresis /visiblespace /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /space /Gamma /Delta /Theta /Lambda /Xi /Pi
/Sigma /Upsilon /Phi /Psi /.notdef /.notdef /Omega /arrowup /arrowdown
/quotesingle /exclamdown /questiondown /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /visiblespace /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 8r.enc
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texnansi.enc
% @psencodingfile{
%   author = "Y&Y, Inc.",
%   version = "1.1",
%   date = "1 December 1996",
%   filename = "texnansi.enc",
%   email = "help@YandY.com",
%   address = "45 Walden Street // Concord, MA 01742, USA",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for fonts in Adobe Type 1 format for use with TeX."
% }
%
% The idea is to have all 228 characters normally included in Type 1 text
% fonts (plus a few more) available for typesetting.  This is effectively
% the character set in Adobe Standard Encoding, ISO Latin 1, plus a few more.
%
% Character code assignments were made as follows:
%
% (1) The character layout largely matches `ASCII' in the 32 -- 126 range,
% except for `circumflex' in 94 and `tilde' in 126, to match `TeX text'
% (`asciicircumflex' and `asciitilde' appear in 158 and 142 instead).
%
% (2) The character layout matches `Windows ANSI' in almost all places,
% except for `quoteright' in 39 and `quoteleft' in 96 to match ASCII
% (`quotesingle' and `grave' appear in 129 and 18 instead).
%
% (3) The character layout matches `TeX typewriter' used by CM text fonts
% in most places (except for discordant positions such as hungarumlaut
% (instead of braceright), dotaccent (instead of underscore) etc.
%
% (4) Remaining characters are assigned arbitrarily to the `control character'
% range (0 -- 31), avoiding 0, 9, 10 and 13 in case we meet dumb software
% - similarly one should really avoid 127 and 128 if possible.
% In addition, the 8 open slots in Windows ANSI between 128 and 159 are used.
%
% (5) Y&Y Lucida Bright includes some extra ligatures and such; ff, ffi, ffl,
% and `dotlessj,' these are included 11 -- 15, and 17.
%
% (6) Hyphen appears both at 45 and 173 for compatibility with both ASCII
% and Windows ANSI.
%
% (7) It doesn't really matter where ligatures appear (both real, such as ffi,
% and pseudo such as ---) since these should not be accessed directly, only
% via ligature information in the TFM file.
%
% SAMPLE USAGE (in `psfonts.map' file for DVIPS):
% 
% lbr LucidaBright "TeXnANSIEncoding ReEncodeFont" <texnansi.enc <lbr.pfb
%
% This tells DVIPS that the font called `lbr' in TeX has PostScript 
% FontName `LucidaBright.'  It also asks DVIPS to expand the file `lbr.pfb'
% into PFA form, to include the attached `texnansi.enc' encoding vector,
% and to then actually reencode the font based on that encoding vector.
%
% Revised 1996 June 1 by adding second position for `fl' to avoid Acrobat bug.
% Revised 1996 June 1 by adding second position for `fraction' for same reason.
% Revised 1997 Oct 1 by adding cwm  (used in boundary char TFM code)
% Revised 1998 Mar 1 by adding Unicode for Euro character
%
/TeXnANSIEncoding [
/.notdef % 0
/Euro % /Uni20AC 1
/.notdef % 2
/.notdef % 3
/fraction %	4
/dotaccent %	5
/hungarumlaut %	6
/ogonek	%	7
/fl	%	8
/.notdef % /fraction %	9	not used (see 4), backward compatability only
/cwm	%	10	not used, except boundary char internally maybe
/ff    %	11
/fi    %	12
/.notdef % /fl    %	13	not used (see 8), backward compatability only
/ffi   %	14
/ffl   %	15
/dotlessi %	16
/dotlessj %	17
/grave %	18
/acute %	19
/caron %	20
/breve %	21
/macron %	22
/ring  %	23
/cedilla %	24
/germandbls %	25
/ae    %	26
/oe    %	27
/oslash %	28
/AE    %	29
/OE    %	30
/Oslash %	31
/space %	32	% /suppress in TeX text
/exclam %	33
/quotedbl %	34	% /quotedblright in TeX text
/numbersign %	35
/dollar %	36
/percent %	37
/ampersand %	38
/quoteright %	39	% /quotesingle in ANSI
/parenleft %	40
/parenright %	41
/asterisk %	42
/plus  %	43
/comma %	44
/hyphen %	45
/period %	46
/slash %	47
/zero  %	48
/one   %	49
/two   %	50
/three %	51
/four  %	52
/five  %	53
/six   %	54
/seven %	55
/eight %	56
/nine  %	57
/colon %	58
/semicolon %	59
/less  %	60	% /exclamdown in Tex text
/equal %	61
/greater %	62	% /questiondown in TeX text
/question %	63
/at %	64
/A %	65
/B %	66
/C %	67
/D %	68
/E %	69
/F %	70
/G %	71
/H %	72
/I %	73
/J %	74
/K %	75
/L %	76
/M %	77
/N %	78
/O %	79
/P %	80
/Q %	81
/R %	82
/S %	83
/T %	84
/U %	85
/V %	86
/W %	87
/X %	88
/Y %	89
/Z %	90
/bracketleft %	91
/backslash %	92	% /quotedblleft in TeX text
/bracketright %	93
/circumflex %	94	% /asciicircum in ASCII
/underscore %	95	% /dotaccent in TeX text
/quoteleft %	96	% /grave accent in ANSI
/a %	97
/b %	98
/c %	99
/d %	100
/e %	101
/f %	102
/g %	103
/h %	104
/i %	105
/j %	106
/k %	107
/l %	108
/m %	109
/n %	110
/o %	111
/p %	112
/q %	113
/r %	114
/s %	115
/t %	116
/u %	117
/v %	118
/w %	119
/x %	120
/y %	121
/z %	122
/braceleft %	123	% /endash in TeX text
/bar   %	124	% /emdash in TeX test
/braceright %	125	% /hungarumlaut in TeX text
/tilde %	126	% /asciitilde in ASCII
/dieresis %	127	not used (see 168), use higher up instead
/Lslash	%	128	this position is unfortunate, but now too late to fix
/quotesingle %	129
/quotesinglbase %	130
/florin %	131
/quotedblbase %	132
/ellipsis %	133
/dagger %	134
/daggerdbl %	135
/circumflex %	136
/perthousand %	137
/Scaron %	138
/guilsinglleft %	139
/OE    %	140
/Zcaron %	141
/asciicircum %	142
/minus %	143
/lslash %	144
/quoteleft %	145
/quoteright %	146
/quotedblleft %	147
/quotedblright %	148
/bullet %	149
/endash %	150
/emdash %	151
/tilde %	152
/trademark %	153
/scaron %	154
/guilsinglright %	155
/oe    %	156
/zcaron %	157
/asciitilde %	158
/Ydieresis %	159
/nbspace %	160	% /space (no break space)
/exclamdown %	161
/cent  %	162
/sterling %	163
/currency %	164
/yen   %	165
/brokenbar %	166
/section %	167
/dieresis %	168
/copyright %	169
/ordfeminine %	170
/guillemotleft %	171
/logicalnot %	172
/sfthyphen %	173 % /hyphen (hanging hyphen)
/registered %	174
/macron %	175
/degree %	176
/plusminus %	177
/twosuperior %	178
/threesuperior %	179
/acute %	180
/mu    %	181
/paragraph %	182
/periodcentered %	183
/cedilla %	184
/onesuperior %	185
/ordmasculine %	186
/guillemotright %	187
/onequarter %	188
/onehalf %	189
/threequarters %	190
/questiondown %	191
/Agrave %	192
/Aacute %	193
/Acircumflex %	194
/Atilde %	195
/Adieresis %	196
/Aring %	197
/AE    %	198
/Ccedilla %	199
/Egrave %	200
/Eacute %	201
/Ecircumflex %	202
/Edieresis %	203
/Igrave %	204
/Iacute %	205
/Icircumflex %	206
/Idieresis %	207
/Eth   %	208
/Ntilde %	209
/Ograve %	210
/Oacute %	211
/Ocircumflex %	212
/Otilde %	213
/Odieresis %	214
/multiply %	215	% OE in T1
/Oslash %	216
/Ugrave %	217
/Uacute %	218
/Ucircumflex %	219
/Udieresis %	220
/Yacute %	221
/Thorn %	222
/germandbls %	223
/agrave %	224
/aacute %	225
/acircumflex %	226
/atilde %	227
/adieresis %	228
/aring %	229
/ae    %	230
/ccedilla %	231
/egrave %	232
/eacute %	233
/ecircumflex %	234
/edieresis %	235
/igrave %	236
/iacute %	237
/icircumflex %	238
/idieresis %	239
/eth   %	240
/ntilde %	241
/ograve %	242
/oacute %	243
/ocircumflex %	244
/otilde %	245
/odieresis %	246
/divide %	247	% oe in T1
/oslash %	248
/ugrave %	249
/uacute %	250
/ucircumflex %	251
/udieresis %	252
/yacute %	253
/thorn %	254
/ydieresis %	255	% germandbls in T1
] def

%%EndProcSet
%%BeginProcSet: aae443f0.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSS10
%!PS-AdobeFont-1.1: CMSS10 1.0
%%CreationDate: 1991 Aug 20 17:33:34
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-61 -250 999 759}readonly def
/UniqueID 5000803 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BDCEEA888D07B439DBD4E8B4C9
D198C03874B5E6F8FBF4922065A92BC3E66D05DE53971CB1424510E892442858
D69CE1F76E4DA76C87C763A4B2FE36321E54B1328C9155B8ED6361855A151723
3386AEA3D042B8D89C8C0E9A33E5DF3B466F7BB8C2C8A4ED4CDAFF55FC6D3EE6
0AF2CEBFC1AC3A6E6692F8BB81F82D86BAE85016AD62FCB05467082C2E5AD348
44D1439C2B59F65590E57CA0DE481A7A34E79931B1513C4C30156170409A4BB8
46D412D1DAF88AD30722F12DBCA1CCC6B4BCC28D06B0D29149DDEC520C8FBA13
6B82E2E1790F00B216282FF122EF0D47B70A1B29514DDF7C0435ED238C14BDF5
6DA243117FBEF7398F97EB95597707ED63C6797EBA1B46EA19ABB1DABDA171B3
16CD500F5D64CBFBE4F9CBC3E66A34427D3C4D0C432710289381F9BFD91B4FF4
1E3A896C3EEA2F3105C218877D6C0C6B763760FA364D00065E1CAE9DCB5676ED
286A9ED0D1C946DCA6A2A670EE0936FB4706CC62E234CFEED34AA615C48D2872
A087F30990C85E64BA68F3D5C117123467DB411C9F2D6F6858CC70C1E352C477
713097321B4C4FD4C5CDE305415F998E7245908EEDE6E056A736EA77BD8C639C
3A79FFD0B74B3D28F0494A115F2841CF8A8827AB5608F96FD8998A5F40FB3DFE
3AA0C7696DE4E1D18DC0D6E84B943175FC38FFC42A9C0CBB13A908978C98BFE5
034F88480F32B9DEB2FD228FF6CB0B89B045AB02020C82E3F5716DC640613185
9F597CE262729BC52132F43922B9E28BB71A30AC8709634561B22D13C4FAFE0A
12C4451969226B220038AD8DDA990A4E2CAD53DBEAB698898BBD3046234EB4EA
901287E71CB41296C431383AB85F18882F65BE36923F6C0FD6FADCBBD4E145D5
D05E3D5E41F855F904B169FBB66ABD9C6569C585ED3FFEE7929C33DF95152163
0C923EC65992F520756306B48699470302D11C9A933942026D1A7E184E596869
F71C01EB37CA04BEE06211D1BCFC323B4FF27CAF664A3B7C7F23621FAE5C4B5B
A906F2755722817D832F6FB52785AB507A1A3F6785AEE27D2534A575D952922F
566AA7AB68B3F8966D32C4C5A10D62FBE765F39C6AAA99801EA3E90AA69CC858
783B8E047D420FD51009C10C4E8F075BDCCD3DB60849C958FE75B95AC2942FA1
8B9F6ED1EFDD59320B5BA2C06BB02426CA19E3639864AD65F5097B528FC9E9FC
29729B450D545F0716DCBB3D0E49548423E145CC6ABC487EAB54B3C22A06A579
DAE7B35DDB25B0531B4FA610132511518791662FB2416340BBB3951ABB42C7F9
6CB03662A0D72BD07ACC03190F5FA6A48C87525B1885F5FD499088B093234D6A
428C1D50D855840EFBD8B78DC154A06428205E7A934B9F6BABABE6302D8FAAAD
29B7495148134A4E34BF1D13EE1E7E1B62EF183B87ECFAB97BF43F216E6484AC
877DB051E0756C95043E0784FC7643ACD8D8795EA3785E8185AB7071C42F5C83
2AD6B9D8DC71C837037CB8190B8F13CCF97FD2F8B375A16E32A9D2BDCA02C410
F18B9A8150FFBC95619284AB2F14F24B7ADA28266D0CAD4D80F9062E169413FC
9ECE2978AA6E7DA459B29B7E67DD35233DE4A5F67738F9C54B72426FFBEB77BD
BC107602E3E55F956E12062ED434E62C1E5FAFE1D1CE90318135E85BD56CAFB2
B0FF309D61CDC3B114BD0706E334B9190A984F2FC6A2F7C5159E9C15EF809B74
402BD272558FFD774BB1C0B5E27F9EFDF8748C2BF8E377D456E6A53A06F93A7B
193FC429B8689C8120100F8FC8A355AC57538E217009F5721E9B6D0CAA58B911
938B7CD87AAE0E8F095D097FB64FC43355F78D5C49248F7B312FFA2F22C9AA4F
476ED41689972AD9497CF7FD5F10CAEC003CB468101D0FE46D80904B9A3E1A0F
50482470835283E79777468AAF216264E1A67649A3FE07779FEF65A27349B537
610FB329DCC05C9152146BF3F4497ED152BCAAAB03BB904596FCD25656729615
4D21EF1F2F879918559CE19A7DCA1E82706388046629AD8C98869532AF5EA022
AC37B6815D83AD9049E762AAE1EE6E08C0D92848AC6FE45C864AE5CDAEBB6A9B
4C59B855EC9F8078A6BEF67721881BFBA35A50478A62A36309199FA940964C93
1B3C9AFB8FC56AE90548CFB302A6BC10F71A34962DA1F027344306874181F3C0
18A57B551A21C3F00137C6CB7F0C548AAA3112D903115027808E6EA3C13A9CE7
6EA79C89A7BBC218972949CCC0E9B50E4C7559CA617B3E57D7BBDBDC3423A0C8
C513F04859984E8127515BFC4ABF5B89757272AD3C589F0547F5EBD5E1E3224F
A448E65D12FC6D0CC33064E840F93C9BC44736F0E58A918E28E73CB3E6AEE1BC
ADAA46E01B4440A3E2A924B714C36250AF4EF9B2CDB2444CE5793911C29CABCB
AC90F2D28AE8D73FFB6DD4DC12B99B38371DE4EFA40255E934EB04C617B52F77
F093F8F205953B6CE9A49E8475A028FFB0FF707DE779CA79586132243568D6CE
D76D347D1220F0EC0A83325589C2AFC5B68C2A2735F1CB015540FC3E479C596F
E56160472ADAA9DACDF2F96002900FECD682FD59EFEAE7DC7D6C0E70FB17D797
309EAA3ECDCB409C30E5EC623D44F2B3A91EB0CD9A2D0FB533615B266A6D8A07
7D04C421D34F98D7241F479D41AAB92A79386AECB58D72D7B30B7F3EE257E2BF
ADEA1B3CDC8DBECDB644240B5B78411774DF29E5841577FD5EDBCB8AA44FB660
873DE3B017B7E0186B2CF626C278C9795AA24BAB1E01AA689D2B6A2B4243AB26
A91FE4D40BC2172E89269867623E2B5C9559161358364284E48CA9C98F0F7778
DCC9CD9512C606096D9E80D6BE4B68B82479BF0702B4E763E0783A1D9B41970B
1CCA45FDD29FC7C03FE0E808DC987269DFC0DE4E0AD49488241E701D6C8D4B12
0B8B022AA6F0802138C1431A90B45C5A8D84FB7F9B32F28163DD3EE2DE82CEC4
9B53C4341416193064EAB0230FA00A6FD42F7BC8CF2C70B4DBFFE03E60ACB953
65FC893DD70CD892ED398017C1BCD93A20B9630DAD59F31E6C57353B27DF9AF3
D01874FFA2AC539747845C12BAFDACA6AA809E1F9BBBBEAB0F5CB00999493AC9
97986C626D1A16A79113DFA36E2EB546A8C617E19BCF20F1044B6FCB0CDFDA82
439C610FA5610E8A8BEB7B00E5E567C26E8A2A20C22A4E9A9AE6824547F07972
3C9061F8AC192BCCAC7E9F950CC6960202FBE28665D0544029B972D008985E6B
0FA9285A2EF0A937FCA320D790F4FE3FF4C813FED83FBAD81246296B9EE3BA37
37F4C7A862502AB8FFEFC36A337CBB2C2D1516729BE71F5EF7CB78268EEC05DD
912E910D4164DDBEE1FE493172EB350154DE14905B745C2612966D370BCCF494
B416EAC26791A0DF57C3B65E0645A0FE980646F36ADC4219944955633FD1F585
ACD3118E39071042EFC18C8A772705B51F17FAA8DE561FFC8929C05995F48500
3664E9A43D97788F7C9E1FBD322BD8ADDB31C812B8F025EE9FF9A695F69DF94A
FE65B89412183EF314FF8DC21CFBA46BF20799465774BE988DD397F4976B97C4
FCE61093F3F1D1A34069699F0B75D937DD13B8EEFF14C61D770EAD74B831CA24
FC0C0CFDA8290BDE81BD08BC09B2DF868E655A8B12686584F21C4B98BF6D7A1B
3B61F804F39D714E3649E6A0D3DCF50799B2DE4D729D7E1361D03FA354DFFBC3
7B5E952F26C25161B6DEBD8A3636A3E99FE086E1FD284ADF92055BF2F1A22D83
16A6F16533C08A7D7162B43F30F866DF3505BDAFB701429C06809F6A3BEE5533
1CC31D86A7BEE290F23FE779C7692904108573CB5907E049DED4B6FAF23CB66B
8D8A4D846B3FC6AC6715D2CB520C748CD5E46CFFCAA0892FF00965381138D132
BA2BF66131CA397C7C86FF5BF46F6438D872C9E8166B755F47C5DBA7BF7CEAB9
E2BFBFE0ABB311307FDB48D3B6BEEBF72BCB04288BE0CC908EF6942E694D1D3E
9BBA2337FAA7B846D5B246487400E8C159A134323CA1EC460B05B1A635886EAD
D65C5BBB856FD47A2455602D63ED1379535532DA50A3675C39A6E25B0C940BCD
926A0DBF7C0DD26585075DDDE5862AF761DF7BC3C2BE55AAD95C5278DAEF8904
DF372F20A3E37952B72087B73A13BE0A0E7247EF914FE6EC8E46B3888D7E2B1C
1AF3D9124E0FBD5DFD4CF4FD05C0187EB1969857300AD6C84467C65A10BF9919
6943DC788315C890A09D0BEF90C72BD2296B303A40AEC9E2872912784CC7C513
57109E12F8F89ED07FD2554E0EE9BD63CC3E4FCDB932317C92D6C831F6D9C398
AB392D7EE95F73CE79F4DF48A016C4CEC616D0227901A6D9E84398B25D0FC1DF
BA099D1173B5262BF25A21E633709306108304890BD15E1B1E17FE6A6DB0BDC7
A797F70B745BDB53D36397260C4FCCEDCC60CEAF8B3923F2DF7C0D9E5DC278D5
56C4DBBA2B1542E533C2B5987943F6E7EE73358B9AC7D279FFE825D575069714
DF04FD96FB5AA52528234FBB9C555FE9D8DA056B0213220157B91FE0AC50372E
2C2FFC581C61842EF2BA194327D358025FED7F63252370BC27025C00CC2E6FD8
A156CB33CF62E7A0BE8ED6FB1DCFBA3D1986A954E0348E01A7C1D9724230209F
2DBC1605090CC627A2946DB452F8DCEDA9F1DB83CC0C642BB62DD3206000C225
66EF76A3D39DDDA4C399D1A3B88A9CE62C2FA3B9E5E7A1AAEB6AB8D8ED8E6684
1672B41D0595AA65B498CCA9C7F7EBF51EEA495E2267D61CC13B79958B825039
35B7C8F2A522B3DC754FF168D14E6DDFFAC2BEF9A96761DC25E75548C2DE52F4
B293EFFF8D43F26E5391F079936BDCF3FA7D7D67A1BAD1D627997E9D23A8D9F6
96C06FD54BBE434F28E83D1C132F89AAA337931B36C4A62E394F7986CD0D5A13
8BADEB162FF49A73B43391638F24F1A8ECECA922AF9E2E7FCA1DFA715D7D0834
84B15643CACCEF45213B804070BA7E8B6917B21813AD7CF990306BF6FB6CF138
56AA12386B595F557F13C3C0A66249AAA318E3913A9FCC58BC75A354E03EC0CF
9B3B1CBC0E6D767355C868A6C887E9A2C086ECAA6AC4D196BD3A06EAAF537723
BF5A7E224C37F277EF3F4BCA54774D29646132CF27E408A3781B822A92C425BA
9BF668C5405AFAB5AE69B22CD28D2C492C5C6D054A0713A20C716C50EFAA2839
B42F9C3BD172442E9D8DF667FF3FDC86BB862A44E989ED8093071929EE6763A6
5AE5931E8DD15315BF897AE58C3C6CF8140474CA71BBC3A60F557EBD60EA873D
87D831FA9CCAD06C1464F5A2FCE27CF34B974F5496110C9AEE389828CEC3BE5C
6A23182356698F32F3484E69641E341AE3BBC2F7393EF9885A2D76602514162F
A76A233D26A33FA1A4CE091985AE0B5D1CEDF12D84BE9D9FD7B642221C044CCA
025FC1029DB78AF392F656382B0AF1D0DFEAD253F9672C780821A988BBD91AAC
E4152C21D5F8A3A9606C53A99C8AA391145F79C28938F85030CD3FC4F6A6B962
9D6C05ECD69D4824CB4C032C277A52C8E4BBE649BFB9D120E5E6B16F8EB5992A
B1612859E564822ED0D620499A95A2E9945D11C3CAE26E822E8A8A497BA998F9
97BB83233159C40D42BB2429A5758F5A8AF450586122A3D2550220B2C94FCE87
30C4CB917AFA204D84D126FA871DF7181DD9DF1609D1FABBC814E7A501DA99C0
A5D567041EC15BAE1FE6CC15A37F3F03547128D91C5760472C1E2E41EBB6F24B
6ED0B3BD819692DFD3900EBA6433720E6C832442A3656C0BDDE3FB4FF3B40B21
2498DD7A904B0CC8B88D0C2134CCC2F7F64CFBD57CF78E9255E59F070228D6B3
777340241FE9C0268D7175292E0A9885C4B9FA7D5A65542406BF5E1FA2EFC906
B8D096D921769310152B757F2EB8EEF2A8D8263B5CBDB6B70C86CF50298396DA
FD96E01153C3FFACCE08120FFF07093F5100AFB4B1826F016E39A85A7CFA78E0
6A79E2805CAD92DD26D99D56552D4EA7C6155EC8742B744E293EC1E50B83C8A6
B9449EDEB715DFC2FB2935BE701C863146985F50C0C54E236E53FF10D20EA0A9
43097FB0DE86AE473CCC3165A8EC1B64605B2F3DE1E97EC55D3E4FFDEF9D3EE7
859B00F01D0F87384D2D974481B1B3BE0ACD5E8E2DC2600E65C0992DFEB4C30E
43EE5AAA58B09A2D35277B778246D8811DD4A5B762DB74867EEDF2557BD66374
329FF4E2D770A9A43042E6260E792CC29E033013058F254ED1CC8DE5B943ACEC
CD5858EDB3D7A75EDB1794BE55030D770ABDD76BCE7EFCA3B45EAA4BF02B3765
7B2EE7311B03FC97B89D0D666BD314EF62867CA375D079E0C2E4218D54CA7033
2B859763ECEF66AD6C9C6D63A75CACF329681CACD57608F7AE75DE883F5A5978
3421C87270A3FCA0192EC92CF24EFEE7FF27FCC0214AC6BDA69831B8D781318B
09DD4B761AA95412FC37E9361C93DD5E5006E23D91BFDADD16E0422EFC928FB7
49013FEF34ADB87CDA9E22898C2DC95747450EB9551F40A65605C0AEB863787A
A502D640597528B5F66168E1BACF6A6D06C1B242CF443DED95A67EB261601774
F1715B911A6B85ABF72A68301E3C4D459EEF0C9362B455F6E7BD234D8675C66A
5EABDB890DE495607CD754BB4A22A64F5DCA3545AC938615DBF2E93843B659FC
AE2957BFD54A71049FD7D354F426F4ECADB023DEE174ABDC939F2F7272826213
AB572889320C1D55C5A67258D683A01BD13E66B3CE413BE251BA21BD151416E2
37CF134BC85E3709632F610A0BE6E3D23E8B2F5D1ECBC5A53021F148CF79D7A3
537B2A8DAF223F48CDB4CBF8A8ECB54C9A52621E3D54F2430A40F37C0BCB6DCF
A6DCFF53B0DA80348E008D987F72D02ADDACFC4947E437721ECEFCA0CB9C7A50
B4AA1795816380EA84250B82BDEA410DAB486DA341E6A356EEB83109BCC6D5B2
A8B28C709022ECF9428BED8C81012E07A8807E44CC85F6C25C44B0B01E94F8C3
0C0A1E0B25C2BFD40BF943B9FB3E6EC62EE014B612685B4971CA9817BC2B8B0C
B29586402ED1FB55921E99FC8AE35FC95762C34BA5C1E14C997F227DC8D2F434
21C3AC321E449BA9E01068F7778F8C6339896CC0AF276F973BBA9C5CACB0BAFF
C4BFAADDC60D75E17DEF9959C8921E43D82293ABB72FAC48DA8AB1816BB9DBEC
F7A596B134856952FED04CC7AF38A8CD622F9B2C4CFE465B93552002BABF04E0
EC552D1441DDC847849F5D21EC02BDB39D1E027C8A9A352460289A4CBEC216A7
EAA3FD38B205FCDA4C2859302C6C452771434F661A570869A61BBDAE13EA236D
0A5F599F1BF9782A24A44F83C31DA717D6A9B3301CA997839989E3A5EAE7F0CB
544DA373968C02B0CD3C34AA93BF3B5EB022F3A31C2771FC851723C14391E854
5D6AEF8D658A4DA91FC2184AEAE534DE6A66EB357D6F5AE94509A666934B7D1A
1F70C38FAB8471DBD7435AC59A970F2031E7E9579DC423393281F1CA532193C9
964A15737280DB6CC2B3F81F27CE3F7BB8A9E8AC829CE5BB1425E5EE3DE8D304
CC3DB8CE9C1E19845C3E5BB671F46FF0CB25955F19C4EE88A63C9F67320BE3E3
EA607B211B767440369D8FB1C66D3393F5C0E6F66ED141466ADD8F0707E099BD
16DEBFE6C588C0D3130E28D739EAB1FAB1B825832E65AFC1DF69340481862EA6
83A382AA1699B480B34FC7F0FE7528DD039BDFA6CD39C2A0B15AB562E8A06E96
28CC44C2E7D1073FD8919018F3912FAE672CEE775EF07A1309F7AF81AA6F4C34
B96081CA11388ECE328B15616A7DF6973A032D4F01B9CD7F2E7133657F474ABE
FE739EAD4C268A7F2A135B577D136D7F145D7F58DCCBB202A162C1831A0DFE13
E8B9CD0E804526A7AF3F3E266DC741993739DB7F4E8E280000C27AB1F6BA7F22
CFBDEA5F24161E929FB1FCF05D310EE01F878DF1FEE5AC155A0D806C61E542EF
480D3CE194DDDE2938E9F9820F24C86F41641F7DB98D4D2445A0EF6E9E57E188
FA56BB95665AFDA7E20A2C722590F30137CC13BA2914631DF88FC338A62E7CF9
2A8064D6C1135C677057534ACD254F54A3E4D55730A9EC2E92C1A390EA665121
BE7D53B93916251D58FBB8AFF6AF82ABBF59818E5825CEC479D027B820CFE97E
B109A3F786A7E98AB562929B31F7068A1A4D07F0DA45CB4EB87D29C7BE2B3241
D6358D0D08BC5C975A65B4209E2634DD2DE357EF3E4EAB6FC3A911DD27604FEB
4213DE52BAC23D0260977B77B892B41AF074C39A060BAE31EB59AB8EA949415D
1C52EDDA0DC80876D2B4E960781CF4B34F212D8E2FAE93F413EF6B70F68E8709
A6D3725838E48F15F78AAF00CF73E090E2DA7E786C3C5B473A614F665321797B
466432D7EF25AD64D8453AEA4C17B45A1663F7EEE89160067E20405BE8DDD814
84F11A55DEC772B8FEA98FEB485026C2B414ABD744458C8AA972D1ADD8AEC12E
8368135D8DB5CD8804176C92656007BB947CD094BEF54433939883B9D9AA2B8C
16747D69B1EBD395F4B22D52A73C8F205A2B896FABA8A20EB480353432488206
BD3F1446FAF7D974BFFAD4A2F433158E6F5914B331BF3B97728FF9838BC0BF2A
76A5048995DCD15AD0A3F1529774CF66248B82A778A5013579966C5D2E67FC5B
DF6A62E074BC8824899CB51AB5BF7D07FB33FDAFAC9AC0349E8A95C5706676EB
92938A354C6E3A86A130B520102AE3AC6F2C2885D2F6A1036F82A9A39A2A193C
176C1A41F071130956DDEB7DC71E956AD19CF45AD98444ED6D67ADB7A2899FB9
9D31B181B80E13197814DB70F5BBB840D6D65ED6B5699994D3C6B1002674AE10
96E1467125BDEFB7B03583E1253627A66FFA3553E5841D4A8370EAD70B28E109
5891A580F1E576BFD886C40988DABA31FFF79B02520CB5CFE5D9D5E7DA940874
6EEBCDE46FDBD71A2CF9E391972BFFABCEBE8C4606A9471A5B7FB06FB37E75EE
A5437EEB54CF935CC6A2E7C04B998DEF6D37C9B11DA10D29C9F5E0F6C70B7D75
E292EF7877256500B222C73A5C1EF1651DD9864EEF365F6B123D37FC9D29F6F8
16B27A17EC206E8E0C544C5064DA8DF223A90693A1E62CE724A71DCFADB79E7F
652A31E558346EA0071CAC386A06528EC73A08BB95B93BB9F1C9B4A65ACB457D
4725C112E3428DC7A670CCDD4E33291F3F794761702206591C38F2CABA9862EE
64529FEBD64A6B4C07B43EA6CE09D74935DF8CC6F602963C4C06189D42F5808C
6E91095D1880A84776D3C169AC420FB42C8BE390F3BDAD24CE0D15C4772E08B1
8EEA32F42D8B48C8E0A37759CA6D1A79AF2D9DEBB5FBCDB3F50F0009819EA920
B834202923694D96A8F124F75420005C49C971B2CF0597B1C83D40BB386B15B7
571DA7C3C9BDC8CA63B25557751BB3A4DAD5C3DBEBFFF892F53654C709CE4C31
552B77AEF7C4570A441218F7D07A320961BEF80B7C08F6334CEFA3B6A9305124
DE01C0AB734368C0FF764CE4485A945FAA7B1782E34D1A90353E93FBE940E268
166431E7FAB2C3758EE33BA885EFFE09D0F3B6C11F96E53050CD0FB27E8DB956
63A9F03279E8B120DDA4919FD876AC29B16FD5114C9D99E88456E311BA98BCF1
FB575000EC20D3A6B26AC6CB38186FDD90F0D39FF2125990F436636D6FC9E86E
782E62F70CE0EE3A926C897FFB2708CBF25585B2FB0928BDCA569B6C98E40BE5
1161644B5F85C1C5E10B447501F7BDCDB2DD7A2486706167E282F71B1B58E362
ABDF55F8E87CDF4DE5C4EEF22B7A2A4EB5210C7B3ECC92F65989FAB0A88CF6C9
F0488AF0C700BB40A682EA84D609C2306A381EDF954E75E08F29569C0F3A5FAF
99BBFCDE8C1B239F7B2C8D6AF9F3C5238F4C89A5F2C206CA4D4EB3BABE011897
1C1369EC79E2F84AAD8BD37F9E7233304001F81A4054C855778D9235AF036F48
B08F63A25CFEA416B3C4A23EAB4E34119269002161CF338D2AD79D69DF06B662
4DA3A5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
9560176671A33FC55340CD04C2DE46FD812FC2711A85FAF4939F16B46A93BB70
A7CD5898B373984AD776D118474DFBCBC818D3963A6C2A1185E71BB2A084F1CE
8328306B64ED697B18A381F07C1689CC56F5D292F917A35B241EF3BE15AEC496
A455A0AEDCA95BE1E3167815568BF0322BF90D070C7213FD8DA2F8FA63273909
3F9A2C3092FB946CD70B336734FF8C98763E54E7BBC90A55D6725182B9B5CC38
24EC0AC6E49192C66425EA1CED3145C2CB822E5C700F33AA7781B03BD32E1A3E
162D5453E140174C8532CDCF5815D60A0FBB1A498D56162A5AC83F5DB21D28B0
BF2E2B04660810E2B6C505D3AEAB4E0508BADA891D24B8D6C76093619BFB1A51
47D651161196B0C9C0146AB8F7EBCEF2C3747A93E6C4E19D60A01CB2F2FE7E90
89341D416F9DDF55089C9FEEAC1FB85145A15CBA37AF7AEB43C5D055BADAE112
FC1E24AFBEA485C8F8BFE388D8A534D78D9EA70871D8013BFE15DDFD409ED7E2
55A54BE1EF56A0BC63F66CC903B2DE2326670EC52A2FD17AD9CEA9AF05BB05CE
F634A95194D534BA868AEBE97BC7B1CB9596AB5B3C2891C2852FE6FE9FDAE946
7F6197B049495C8D4D62F4D72197E2453ACB3B3D1572FA536088B135D8D62996
C4491D4DA356FF5EFC7B014303BCDE5DF93272FB5C6439F13661DE7BB5A969E2
B2997F1D998442A3CFFFD4403C382D6A9EA71A9CBBA3FF06D07159771F6AE6F8
B3E277BEC048837B84E317421C3A56503462570850C9EBC9935EBA9776868112
446811B97676E83CB0B30CE5929A428188372939B158679C0E609221A588B531
F8EE37BA518FE78DE8AC80D8A25E850058DC1101861911743F472920AA77FCE5
72C5364C4A7A58C810B247D7AFC89CA13C291D64AF2331C32EB2A46C20EFF79C
6A712D941201B124D675B9DA40BFBEFC82D961CD0993B84AC71395DA3930B99E
EF837E65CAF7C7FA1F4260A563ABEE685DD830F0DCB167F4F750BFC929E18088
DFD7557AF6A3412C2E2C9D69D58CDD79954E4AB55FEEBB3BF633556B00506F66
C7406210E880A4984864D7C0D8B7322B7C45480AAF32C51C08F6B34D10634EE9
946F835703D92EB5E6359F60F1EA44BF96C3CB6B4F2A5BEB43B0618292B29333
D66EE41450A54C0B6A52567653167962BE92ADB2BC754631F04E39D04245F9C1
4686F8B00677889021EDA3A683EC07F5CA2F3D0DDB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueID 5000769 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2F30C4D8
78C1869C689904D52738802ABCCC869841F8EA466427B3C606B83CBADADB71C1
018A3ED85F8FE87592DCAEC7505D81275C97242284FFDC579F0ECB47C1318724
96CFA438D70D9E93264E579308844D34B06C39D3562AEFF8AFFE67E76F95C4CA
ACA6B842614F35D6A6210792E01B7247755D312F570656F59A13AE52299B6477
3C82B9A5F597D99D4BD7A67A7EBD0B1CE8E17720C8CD4E91B948900679263F6A
F7254CCEBF925A747FD6455215C2CAC5564BC588FF0070DF694C313A65575B78
F7F7BA149D221EBE04EC2BC86FE9F9EE6AADAF33C85DF03287AD1FC1168D8700
8FA7302776BDF8577D8A2B10306D8F650DF328AB94B209A2B8655108B632C9F4
736CECF42AF7B2AF2E96BC335F8405B4FA5EA70836570B591044D22C0A60B09D
3DF5B09F4C89232D5219D1F5F1912457C15807D176C9C43C22A5506FEB662CF3
97D82D6A5B2EEEB5FB73CE729EDF8A7D6C88EFD29882B2D8DA463704E63BEF1D
CE768DDBC6888BEBA967DD7190D61F470AA1E5991122271B0DE0C4E46E032650
8F5ACDB2862B31C2EFEA074FE494D838070E519E745BF80DF447B64E9CB1D5C6
00987D5E09E3538A2D83D628FD46A4C4CF1D41762F40C90F15F30C1671CB6566
C104F2665230B2111AFF2736A44B153384E6B98282E6EB2EE854E04AB9293FAA
2A55660CCC218CFD9C07CAE64BCAEBD3B5BA4459FAC24B1C6B49854337E5DAB1
B89B5E1A48CDEC1D351B93348FE89D368FE626F0A4E1A2BCC25F7786B8437BCF
AAB696439F27E9EA1E6E3C4899E5776AA1422E55FCCC47982E0760806535527F
91F5F2795AA54F6FDBE504578C9D6912B38E817AD95A15CFA33AC04637892135
BD0D6F1F1D0429FC0D5CBD5353021AA76FA264445CD03BA09805B7B9A874B947
8B0F67828B51EA711A4392CB79487370FBCDB10CEC73B7DCA9C45DD3149B7289
C272DEC263BB6732A539288796CE2E5D4FBA2D9B9E7CFBC29530AF4D874BD7C4
2900E9A9EEA503C8EA0ECA517FF6F098283F1E756A4CEADCD01A0BB48E3FCE05
08F79F1817898F322F1E1F09BB343F5810DC728C7627EEBA0AF84DA63E55DC99
FB8B571CD025DEB49FD0FD0A5A743D7AF34EF8071959EA736E756C233B292321
3713A588A26E05413BBE924E9B444CF62B8092DED179234DC7F60544608CB262
9C78104A025331BE355C84E1B3A0B281638AAC331FCDCBB2B942A7C46CDF11A7
C35FED35571DD0B4C0D318A6EF08BCA1369525F7D669C5BE81B4C0250935AE89
C29CE5613DEDFA9FFC12102170CAD48A9D2397DBD7628CDE9D44ED6101C95B36
D1B72296430B934E785786D0B8949E44BE2EEA73CA79C9E6F670593696C14A9C
79B22DA70DF5762DA85B81D64EBE7A8B298493A2E5C9BEAF35B143EC9362E9F5
C72BC9AFC95D4A6C560E2E9DFC7202BF4A8582AFC76121589D4DEE2F796FB6F7
BE8C40E8B310866E4FDD3C3A73CD800D15C4FBCBE893D2B4A0B741C90323221F
1C8FAE357DCB4DA5EAA9DC097EC6DA8F8ADE567771B0B5AB3A904ED72D5BCD4E
9B287F0F8372CB7EE16779AD43C58C3BB9D68FD78E3275EA5D754D633C00C398
4763723EC59A0BF7F2747F19FFC0E9A4A518BC5A18BF48FB272AF4268346D392
0618DCF1673C03555A10195AACB12A4F27FDC40EB497BE2FA97C4888423A60FD
98BC0CD82FFBA585E13467CE45A1CB9CE956B7DCB26EAED962EAF08881992108
B80B03AEC4CC9E4020E8A189B0C9CD84814AEB5961941C637672B39317F7634A
D3FF085B1501B996065D6AC1E971F5F89200FD19D9D9C84D646CEEA18F54B46E
3C3EC5FE0EABA572C02AB5FCD7F181B290D1C341669C33814CC02ADCBBB903ED
CB17D3B0E060A271CAF197147C0A83B4CE0BA43FD3C0F9416B28CC5F9246AA5D
6A480016B6C530A4ECB4723F91E00AF72373CABA41A3EA129A7D9C5B0E33F146
19B2FA4A83D821307D8AC43B427F73D16A49FA5A944E45E3E274288982DB6B62
B97E9D4DF973660A856726640282E85804347BB127C20C87AC231D09EC4AA0F2
91E177005984B3039245B28E8D42E9813ECAC5DA19E9C6F51220557FE154715E
B9E7FC632172B7FEC83E3978B758B1E6673AEAB61E4A0F9452D1F78AC9172900
83068136D61A331A1AAB88E73CD959C41075AD79DDA8C70F8E7A55F518163B03
20579B83FE3036FA11E0B71F4195A1D3447A4FB53DE455CCC8EBEE48AB2D015A
960F6D11F17D6759724D887AFA6CA0212FBBCA2A9983A2EFA53AB05A5B659C3B
5FAF023DCFB59F1455FE6B7CFFC72D4AF02562407ABEE5C2DAD21973DC3325D5
C092781639E43154CD81263C769A767CA1181D8B0A0F9EDF45B3C1FCF262D403
2E94215E8DF7EC2051E3BB4608A58FFA4900660953DD304DE01F32A52E158585
31F02E2456710534DC706DBC7015E8BF38EEEAA5BC5DD8C93303A571FF95A9F4
7E8BF331E3BE2D4AB97B3D8C995574C3EBCFC34244DC56C604B4535FEF55BD8A
D84E35F59946C692E944B0D33792F1192907D31101BB7EC09502305B2BC2D611
8D5A280A7BCC8C6E0C3E919379928A0DA51848AD08578CFF1802FE3250A68119
403CD22D44B65402673E1C8ADD0FE59E7846CF4C53FE6AAF42D66C373263659D
D3A7392E66079024A76519AFAED54272665453AD3CD71F6C461CCAFFCCB07921
A82D7EEFA91DA679EA043C578B2D4A0CEC0FA65A14D5FC56F15151D3610941DF
B80F67A3F274A224E77BEAE832D396C41E706CCA78BBC01062A92761C32956C1
CD067CA1CC2EC684C3CD702241CA89402CC696BCF7461A60223379BF50D76A3C
1056B3FBFE902C1C85938A40598273E9077C9C8D37515580E57C6C107EE7EFD2
9ABDC0F4D68D7304C6517BA042C6C2F9F6068288B29751A6B76E6269B51ED883
C5C4202B660E22B84C5E336A027C69942C9FE38A43A301F2B4C109C6F93C7552
BC4D93D79BA6EF51E4240DA3BEF5B5BFBF1EFDE3255E94327B22858AC9E6D472
6A1516C28BDAA41DD1B9598701EC425DB54FB264CBEE009BBC2F235E5749DCA0
3C46B2C8AFEB7BD8CA29457AB60BD8B5E54C90B54E266552316C401F706AF0D4
D5C6233873EA27AE1E6C69A507CE38FDCF3AC400E2AEFCBE5A2278CC6BCF1DFF
C8AEC75B197784CD008DB4C5C1EEDB4E16FDA6B8BFCDA882488C6C13E0D1F997
2DD36344967A4FCDFB339E96D18D81BC28E0D6DB22FA6027D29BB53F1B564B1D
55E7DE5228E5E8E21E0BD58AA1460F0BD43EDAD3539207517452CCBA690E4653
1A85107E9993265B31E9356C016A1BAFADBAAEF2BC6450DD76B400A7B92403DF
AFE479239F1AFAD6F9CA2CC08941F4851EDE51CD74F0116D1482132F8D954EDF
29590AEDF38AC48A87EC9C5A8FDC5FE07F6414DA380B66F7E4B7FA232A093B3E
74AFE2AC66EE12F251D2E4B468D0971C3F9C1FDB22C6DA4BD14A2485AD90E121
C9A818977220628664F16B3147C079153DE1D4304AF7459AA8A5EF1893226B88
08084987F6A127BAAEDCE7794ADCFA5738FEAA3AF0C64BD542AABE7D381D1251
AC19A0C11FA1FA28F802AF4D9752B401EDC3F62AEDDD6B88103995F2C7960251
3E835C4525CBA97ABCC4FEC5C28658BE2BEB5AC422BE9EC1863DAC5D74306902
BDCFF02A07126DC1228F0277A3036BF3DA0B54F9D3F06A44D495F68C15E1EC82
57552A40F4BAAA6EECC25E633F646D128CFD47DD2D02B96B22A015F4B418BC2C
07F38DF55D241CA1E9AF5CCD70D14094BD2969F41890FA24B88DAC0D65EC4CDB
6A8F56398713FA193B895DC64912562E22B646D52077AB994EE1F19437AB792A
F697FB103A646C75EFD234F1F6815A6C98F50EFC8746851EB202FD48217F12D4
943A568DD63468E36B1CBECD6FD3EBCE193B90600D4CA98B28E3F46E45A2E0E8
13D337EC8B30AADB6A725F7071DE97790E0370EC21C9C93907971536CB70E8C4
476130A11830B87D31D5D39E7471308FAFF2081C12F020281A039A5CCA77D169
293D0B07745DF8D4220DAD373C4CAE66171C502EFE7A1720D7A3589575575CDD
0A7ECF803A3644E4C33A90DCD71CD2E49FF2E5A9B86326765FEA187D42316437
572AFEEB68B681A65825015AF550791FED89BCF6C0FA8B129F5E5ECEEE96274C
3F7EDC503808BD71E6E13526878D759BC85FD6908EE4CFA1D78372347E799DB3
AE3B11107A2C240988975F3ED95D8275F7042A6B2613CB0F4FC82DA807AC49A6
0BBC4827225279D1B316F62C312583EA3F4711C1AE8AED6083882D8B9EC17EE9
CACF8394746FB3A4DAF4D80CABD39DBDCAAA3FDDE1881B750505CFF89A10A096
E9606E1F0384660384C4D3CC46F3D6C4756632D53DD8F8871578FBEC699AB356
1DB5A109D50D1F8B23F594F3D1EEBDB2D59C31651B8DD6FE4A2209DB2CC2634C
5A46573AB5F74A5612020AC872A2ABC75DA432264275044DB7C9D3514DB9E318
0F1C974FDDDFAB62B07285876C720F677247FD59E8A6185EE8E5E7033663A172
2D1713F743DD86768D2A438FC4B074B8049BFDA8DDF83E944D870624AE9F0894
25AEC0FE848297039A191504D9A84360DCF4A782A2B07D08982AAC49438CA5D3
6EBC71393A088E1DC573FBA6616EF0D219ADAB2342134745AA2542DF960CCB7F
9E0D78CE9C0CB47D19B21A410A6B97B72E2E1CB1EE7642D8573FDDC00523A219
EC178DCCB9DC1C84467F0C4EC1A5BF83147A665FFCF45697E74F7270E6EA7D66
C524B185CCC2D228DDE7178A905B6BB8751A0D383F5D8F9D622E48E7B9B76207
23013F3BA1870C3A62CE5AD2C969A7DEADFCF1C258553F3F8AC6F0F00B1B02B4
DE4CB23526CE78EDD07A9B8A0C8285E8B365ADEBFE7DF451D41B9EFB85D08E77
4AACF1879DFB94EE4E1DB404B5FEBFCE11425DF6A371F4AF2342DE71F205B6ED
92DDB62335581689932BDFEC6DDD7A2BB044A701F30C892B433B6DB37E30F2C8
A402162EFF6F19B2DF41D45FBC2B8BA7C483CDA2A6F5A5DFE7FB9115220145AB
D92197490317B232E21F06E9775FB761677BCE61811E4133CE29B2F60D4CA066
AEE7EC8C2EF8C3DB99B7861D0A8939394A93D1082EF15D47CF0DFBE472F6F277
D6F74201291E8648E7EA1E8E231F019B06A66C11716E155E60BCABDFB04B8EF4
3ECB787C4E43FDCF624FFEFF22765DF9E02EF37D6E77E2BA8AD689DBC651C8D4
31FBA35BC9B2F57B59350F1F332320AC31CBEC44C5042442BBB75B3061B5192C
9B700980BA1F09A57E0DE514BEEC50DA1AE9FCBB61953BE06D27D037D2A137EE
0C6E5BE2B38BCECFC78E508DF59E38628777F2F8492AAB39076E2F0767036ED3
0865AC4BA86CA3299AF7F00638818F556BD5FE577FDCE207060F06D4F48CFCDF
F81C6102998DE6A448DEF921DCD070CD3E8775EA186C87D1769833033DFC791A
D7199795A1ED8249657F0A9BAC2338E7F5C8C969C4E877400F1B09FC9E6CB518
BB474A9142D55A1259BC9CC0C8353898917C0D3A9A20DB4C9E06ADB2E3FEB2DC
4FCD67135D43B2309C8113DA08BAF867A2BAE595DEDCD1FE615E5F83F77C06C9
759EEA28C6633F91D98471C9D34673E4FCFEAA96ED76C11380566BCE7D4E6F66
6747136A5DFDCE9B62DBF414181BE983E530467981DB97835238102CC7B04833
8BBD96DB13D0E8BFE9BD8B6821A887AA0960EB532618649B9A6E6CB26A2B9030
056269591AA99CBCD452105386B91B1D99F6A2A180C4CC5EB5E3D7252ED046D5
AFFEA45697FF2A41B935E843AB086CAA9EC638A2668D873EEC38A9560E87AD43
3F9DDCF0D85F550DF5EAE4888379EB0F0C901F2CD73CA6BE6F0A5AC904335413
6ACD682318DF66D6ABDFF3BF6F5507199D04E62E3FD49BC58904BB753906971C
ABEAD2BE432474DF2EA8021184B823098DA63FC52054E3751427AB187F571EBB
BBBD2AE238425BFE24DC9EB9E26C11E11924074ECFA22E0380F2C3275E8DAD75
6BC819697D2F2F61A0459817384C07AC1F77B39FA3131745929E259447EAE251
7528AC492B0FCE2D32EF6FB1449CCAC0A4D1CF7F9397CFE88008669BEE5EB49E
CA8727C533E9EDA3F1F6F45320F625F7F53ECF0B839FC219CEA487749C4B3BF1
AAD3892FD4FDFBADB5CA9C3CCFA14CD670DBD8F8C0DAE5CD2D6284D8EE5D1F09
52BDAA2935D508455A3527347579FDFDDDEC24409FEC0E97DE1625356236A45A
CB2EF189CD5739CC73958805D907E5059D0FF7E03E0DBE1B566A8E62D01B2642
5319EC96F0FCC5C76DC7E787414675C87081166AF50E81E01EAA38B1322F983A
FE1B410FF348CAAB428AD4A7A7F9522C4033F29A9BDE142385D62A067D26B3F0
BE2F1FD8200EE980C064BAD8C9F68311103BFF04AD11BC48B6D2DE54771F4B60
E9868ED715841744484D25FDB03296522CD6E3A7E78731EFC13FDA596F555334
4CD8EB01342E5591520B613911CD774192CB624C170E60F1D61CB8CA2F73B8EB
07718CA2C0C141FA7302F200055DBC99019AF67CA4DD6BD65C07D961B2A7B839
CADEBCD8F43EEA917FD62C2E3EF867EBFE54D87622EE8D6DAB4BEA1FB74F53CD
257CCA0DB5C77E6C97137A5ECD21C8D5F3CBEA7BD0F4CA227434A0EB6C6F93B1
0E81D69E25CB4169420A62A0CD19761691D3D34E6ED8CA5C76AFDA360C8B5561
021BE0935B9616AB0498A9B39B3732E28461CF2EFD4656A4FF77F581ACA5BA9A
C5ADCBFE2785DEA730344D01B41FE6E63A7546A6BF2407B97318C9A8528878AD
1B810FFD0A1FE90B9AA385E66DC29E630750C70CBCDCC3DCCCE7331F8B8FA96D
2AA9230145F072F12481291E89D47682EB8D16258E8977BB1FD6C77B2E9A84F4
1BFB3F335BCBCC2FDDA5C74DEEB4D1435CF1DEE90B369985124843826E5AB8C4
F4A14D1BE906FBFEB52A6AC33C2402194995B59BFBD19DBC17DB9D2B3BC3EACA
26F7704A0A9BC13544D0E44037CE863E4AA332041E680B5B0C428CBD283E07EC
E9EF502E6422DFFF060E515E60C95453F7020867190799D3381FB370FD26D969
A8254F653AE38FF83C73B714C946C3845F0733372A5B68D8681D8AE30D15670C
20F66BB23D7047161D7B86717D95A3C32FE857193FB6963C22149984F0062442
7AA43E8244B120B629FCE192F465886F6E421B8DF22A97164C6776F5F5F6D08E
F0CF061A6A91EB73F620229AA02868C4838164DBAAD77AE60C45C53B6F2D927C
69972792437D16949BF581316E70F6791FB2E06AF94BBA9273221E6F15E42C82
660A4FE442AB41E17AADCDA6EBC751D0D8C28377C5EB91DE9684D6613B36F768
C76C3020AC7C5D4018BEC8A276BC843B2D769BBA7683DB293BA3FB7171C09D01
4B6C6441C8340B5E7A6D297D4DABBB1458AFDCF780D3D387136E71645F266166
9DDBC983C931C9C323FBA0E54F0A2B8CEFBAD0D270D5454D42271878C5CA8610
DEA742305C084C74BCAEBD10150ED776A3519083E77B7882D9915048B43A8D51
59D67F7CA6F4D5F39BC06C2DE37D6D761FCC6BD9B32F2C615BC6A7429DD6B39F
4B08C463F6C39D4853B03F81EB0ED4FDB8B98336CF9A8ADC9B1152511AFB7FC2
00C3EFA9C384EF2E77D384709656ACA3B1E0D21F59A0CA668C390BC4544C743C
7DEF4FA9311532C860E81AE95FB76FE32D400098037D11E9C24BC17B751B6FC9
97B64ED86EA8B926E5509CA739AB4BBFCC9CEEBACB6DA34CB701E0484B3148A9
37FD9AA3D8E6122E7572509A4FD337FCF6A19A7A6174C83F329D1CAA312688CE
583AB9AF808D0C7AE7C8624415DC5BDB700649F023FC4F5A50D26393E428722F
CC178188B95E8EEDC83A5FD48DC28813A7EBAD1D7A832EFF2BA3CB5A46C2EC2E
E2D950CC47BD807A061A11EC9A641F95D0C0E87CCB6AB9DA98FA865D564702F9
3679224791502B1D9084F436AE7DE913738B072756A16F6BFE97BD2D71BA52E9
269546C306F3D2690B7C360FE9837F118873932EC3C0FAD94ECC43488EB4438B
404740F0F585C817E97416E07EDCA8CF832FD1703E3201B9F753E2096C923F6E
28EF4BAF76519D443E643E43749DD641E3F6865F0E31E7E0CE161BC2623BAF78
BBBA61EACBE36B893E01932BE1CC07B845D1BDEE6C7C17EAE07B558A62E8A029
4E3010726C66FB9619C511516584FD9EBBE5D53151BDDA0C9EB3BCE174CE7FEA
F63DA1F39503C9FD1E8D1B82AE6F2007E139DD9D6A138180CA8ECE4AFE5F8A6E
5239C3EE09D2A56059D84AE5A5383064DC803F9F281EE535D7A0C5AD18681F05
50D0BD566B208E93FE360F9AA60F38232CEE3DD1F826983C3958BF6142BDBA18
6B449B43469DB1068D814CF77DD2E2D98C0D5081A47B474A4CB010F514627C77
F09A57291D6EA917231945C8D65B0AC58BC92AA0E4E9CE4D0C1C68885E809772
A535F8139EEC1E01E74AC893E4171C6253D4276A8A5E2EABC854008ED8520864
989284047085B988BFD20668591D5B3A816D9D6748FE08D284662304A3F47E16
102C8D9C0DB5CA701F515F0D87E3F7FA3081F5F1BA3D781AEA8119214BD8478B
CA78B58C0E5B31B53297188909C1B268EDBF84318F3B6A809E4546F00DA8B8C3
332968E8C84E9F4CC930A8DBBEDDBF01A7C88BF9606BA37E5C0AA0B96C73FEB9
BFBCEF0DB9685EF0778502F046DA4B43758C2B3D1CCE06A56815055E1DD8DAF7
93B7D5A2A03E7EFFEA46022D37411C481719E9AF9ECF18596234BAC307992485
900441F91C8A3D0114C74747538DA742387B87694776EE330E99E61D1DFCBE7E
85A7FC34DFBD3899D013F33F839E637BD3FB7D667221B2B111D1D083EADBAC6C
24FEF3AEEBDDE7015A81F5B006E7E28F17AF22DA395B0181E0436BD8D71D6072
BBA14134F340DD7869393C9435BA3E6573F1B4A52D8442B1A03A0CA8478F4ADE
AAFFB7B97064EF27CF38593BE39BE333E59A52EC47B80800027D7B586FB99C53
05D5F47BDAE1F326F492439854DBE1CDB0330F75AC3C18D49079C57CD004FDD1
EE8033B65026313F37DF002D9441D10689381D3272891E412880E88A504F781B
761F80EDF4BB8D86C664D7870D86EF859A8871945846F8C8AD19D853D05F6BCB
D43FE470EEC5977142EBF8FB7CD7E9CF71EBDD00FA2561AA5347FFE4B2130C58
532373785F4C9AAA5A66A76949F98A75289664829F206DFB919315941D28352D
7C4BC4A33AF31944A60352E1686D329EAA28DAA0C1557A8BBA35956786606CF6
27DD7920F869FFAC9CFE9A0D8D3F6DD59D17307DCCDD27A202F6BFA1A7E54C45
C7D0E3103351F5C71163F90CC57A79BCE376FEBDE3F887DF91F3509F9C3BB452
3EFDCB5BDED0C86929579725402FDFB0AEF80AE2A1EC44F4CF806BA72886F4F1
562333F990D811493CEC347D042CF30820DB5D6118589BA339DD3B066BDFB88D
56DFB2919FBE5A9AB3A4E03B355E77A38C0FCF83014ED47BE33507D0FEF0DECB
B9B064A9D9361645C987BB8078C89A32D4DFB19815EE53B06C7276633953FCC9
0E1350294B4A624747E114908141B5B17250A12F62BCCD9880E0259539B651D0
F9873D3ED1A6A4626943670177EDFACEA5F28E514D2E77FFDA8BEE9B946BAA95
116E385F7FDCE2BB5B1410526B54ACDBFADACE69765120CDC5AA8ED45EFDFC9E
635540D40646E2A0CB06341944777780ABFF617581DA006B749A81DA068F742A
687ECE061D6861A60199FD077E314A0775F700CD70F24B9BA3FBF3D16674E3A0
81F348B1FC8819813DEF656295A6279C76CEDE22327508E61363FF5BD02C671B
CE3413397FF23887A1824B0EE5591868021E0C24A91E9CD9EE8A218EDA83B3CE
8565E226761F5DA186195CFF47088BFEEDD001978BA77E56FE9AC4DB02391060
DFF1527A5B5FEF3D197A7EA98704D99B31447C4025722DD4AD59B2F5DB63EADE
16ACC286FD354036DE36498254F957FBD80751C3A9A64042CFD96309D175FA9D
983AE0517186382CD0BA0F070BCBA469E0FBE817C2C16111A3332976E6394E0B
B5FE8B3FE516212BBF20DF71889295823E3090F9C06DED2E6CAFE354451100B6
954CF2B4B6D619912DD9158B6CF996C9F944D4BCCA91B10CB54594F48DB62F73
0001ABE88CA2E8AA6AAD632EAC83BABEF885C221DE094E628D1399A963EA6A4A
89F4F4C1EE555799018818D7B1D92365EBB699F8F27227F9EFAA12515B49D284
F6EF8C1EBA0C677AEA4FAB6E320D3CB0D344B591A7D9FC41DA75A004953798A8
EF1E5A49FD0091544E69CDDE0A1B2F490CC598B7001C5C9D4BBA544C1B635161
C89CDEC7AB2377C3394593B037EFB98BF159BBF3FF8595D4B81941BDF2BB940D
4D91E9E6111D5DA8BDB260BA9304C288A39F3C2C6FFA37169D7E022DB46DFDC5
F783EBB0239C13FE567FF6B968F8717215F4AE64665DC31C4D5E5AF46AF38823
F2B830215590DADAF1BC2E5788C8C5024A6BC9E031F046C4B826EC383AEAF034
B1115FD263AA5847EB56E962CB8417C1F0DF6B06CECBF87B34D551E082BE6788
199B061EACA3D016C35255CB8FA906F765C9770BC58A01525199A704B128E3E7
919FA7E3A58780915F645B272EC0A89CFA9C6F6C4F6E6C95124964B1E236DB72
D6D272AE5FEC4C82BD48F5330173DB433D0E234373412E73F90837E54383B133
1EAB1A7CD7CE686B3CAB82F5A71F8750F732942DAC7A7C6877E1509F77664CE5
E201B5EDEED4BC7E2E62C886F0F8A9F83A1F41126D7E944974DEFE9991761518
3698071D63D862CAE843C959DD8E3A837D29928850DB4FC057C507234B5B7DD1
1861151C7BDF90341B8945D1D26F53F63D4845DEBFCEF2CA4E3F7CA493576476
ED99C449C552E70202239676CD48A851D4F9E7E5589D8BDDF2BEE68852488662
5D8C0AED28D12238A5E3DD1761BFA2C3524FCA28756B021E1A10D96473155181
657028016D677F43F032A90F2BCB9A6AF881CBAE71F7A9EA9EEA183721A08C56
8A14DF7AEE5D4F63F534A7571CB1AA906F76182D0FC07D4D0CAB0048BFED5330
7AE98D02F99934B8BE2AAB5DE53ACF73F6A42319B4532CD6A68C14C1DCA50510
DF2667636DCCD78837D8F9B07D1C0AB485887DABA455BAD22E10D3BB35179E7E
E021E77D0CC1D1E1DCBE5060D1A6407A98A38AF473399F9572FE5B5AAE6D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
/UniqueID 5000819 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D0037D33F24E2FAC2B0009AD3C8350CDF8CC
65BCA87979C36D14CB552E9A985E48BE4E88ECA16DF418749AF04FDD2B0E1380
D281BB2476BB45FF30946B247DFD7F57305FA87E50CA338121C71CDFDF927A9C
77FF14CB4A1D6D80356FB1171ED38C37702350497B44E42CE31DB2F493807DAA
15B887C671199A54C4C1294BC520F5538C15556BC43C9F62342B121C6DCD6C5F
491DA47FF360201EE21C08A781ED0589A6DF91B99FE118B9B29E4F068672E52F
1A06C514D91C4C937D4E642503392B1CD1BE8C2F499A1AD3753691F4D1DAB520
BDD769B4725E54B97B25E08DF55F95BFF0ED7787A14B6439FF01F908DE06BD23
E8BAED620B7AF677BE673618EB87F4B4C548B83330C1950926289552F7F1585A
992F22A2BF651543D2CA6A40FB68C2A573BC1251399A7ADF9090AA4DD870B949
3A0905465CA06F952AF6E815AC38CC1C57C4D4BC7A3E83237B12D77F7E9D6FC1
F498C3B9F59BB8B87379CE69A70EF25AB6D567D44B3FE916B3F841630F3D27E0
3A57A6DEAC39AE792433001E424DE29CB4FA7CFF6FBBF075BEF4C85FDCAF9F6A
344B6284F406F8BE260E1316E5D4070F8DAE2D1A159962DDBE62BDCBB5C5BDB3
FF6F31E5396C4DC9525DD9740FEDE7BF8CB83B405E9FEE270AAD31A1063324E8
55041982956FCB0B6EBA7FA29DA75BBAF2D410A5CC0189F38934DD32AD5E6892
574796
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{11 -250 1241 750}readonly def
/UniqueID 5087381 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF0342CA1080743A076089583
6AD6FB2DC4C13F077F17789476E48402796E685107AF60A63FB0DE0266D55CF1
8D0AD65B9342CB686E564758C96164FFA711B11C1CE8C726F3C7BB1044BBD283
9AA4675747DF61E130A55E297CA5F0182A3F12F9085AF2F503481071724077A9
387E27879A9649AD5F186F33500FAC8F7FA26634BDCE1221EC0ED0E359E5EA5E
6166526FEB90C30D30099FBDC1BC2F9B62EFEEC48345160804AA98F8D0AA54B7
A480E715426651865C8E444EDB798C7E11040AF6E5A7ED1888653C6DBF5E6169
70BCD9C063B63B561EF165BF3AF11F8E519F37C6FDA2827685739DE2C48B5ADE
EE84F067D704D4511DBFA49E166D543CFD9ECD7417055D8A827F51E087CD2927
BAFC7E6CFBD70B0FE969F890A11149D3D44D422C3370495DA9951AEE7253A49F
3A9444C8CD9158D84117299F7F2332FEB0F94E6ED8BC7AA789A3219BC2F227D3
3B5BC75FB53B55D72AF4A6A7BB613FA235B11BB37D059FD87127CEF73D5B3FBF
9F91ABAD78BD9240BD9525EBA78095EA0BDB25D1A19E876F292882EAD5619D46
D20317A345D931F4FF4EAE6216C27044CBA525E3B917CEA25A04C120466C4B93
FC720E6BA832A06CCA0A3916CEF0968D49085AEBD243C41A448289A6F05CE3F5
79148DC112A3CC7E8FF810B8C1A09E05F496C0F1EBA334E42E05C376C98F5F69
C06C71BFC0A2F3AC9951CFBB143C66FB84F9C4ED27DF70869352D61BD5E11508
0797B87C7BBD9D6B4435A339057C62703403E5F5AB4222449ADD1B7D713F6CBB
3B558218F67DF8F1509AD9669200F9F396F84F2EB79A2BD39982B680317172CC
DE473F3EEDCA2FFBFEC99C660D1809F187A547AC3D3E0923AD155F74779B1714
D36D5167C3795A87394B143B83CAE484AD7A042722ECC5C7FA0BB8A20FC4771E
F035804D1CF9C5CAD1D182B6EB1CE0B4E5FB632CD74FA914EC1C235A188A630E
F848D1254D3E07BCF536334B5737D3114CE3F5B7CD2F04340AC5385360E6CED2
CFA9617148F359AD1D0DA01AF651EA8506B9279669C84FE86C8E00AA4AB33738
00B0646035F3A149248743C9025BC503EEDB36AB86FB171ABB2CD36D76676184
0A31695F44E3AEC945774C11E0749E7B6E9B71ED12EE4900773A40F47B6C0E1B
E4DB7F5FA380E054CB630BA607A1DCEE30394DE6832C60A605E89F4F18AB9B4D
D9E327AD6EFC144BAE0B84E7B2ED21CFD0B4A0470C28ABD82A6A8CA40B79A655
8310C6EE2E8827251DE9F853E4F91415DD4890025DDCA71E0403FAD9F1203902
C4D68DD8E5458190AB11A4F960F66228AD42D6B0122785424E21CD582E3C7EDA
6F1C3B97359792078D14594B8DC2691F1DA11967E9A9F2175AA37D717FFB7E8C
6CA95773D8408CAF09940A9EC269C9C8365AAD220C10F2894ECC5616A5710C3A
0C1864509375A7C3883FD33BCD1C226F568589228B054D49528B95899CC54A17
17356D08DEF618CF7A67234128FEBA3662F8F31BBEE2B4085CE7EDB2C5CFA741
C28338B5CE774DFF03603BB201C95FAA0086B4CA6885CAB8264950C0076F164E
9CC35BC5386AB5CC33B155D8625D3C1057B453BBE6CD424B388165975630AFED
B6A3E117953E0A01DB92E84B5C8FB19DC4E684A9B6E14E7BB7B1C277BF71D9EB
0D9154BFC92B7F140CE4196FF43B49BD97A853E47438366B0861A0727ECAD5C7
21DE65C577F948FE89F1AB153E569B8C53F28443E84A8510BF5868FBEE538F54
0203DC04933FAA76D03FFE929FD171C7BAFDD26C2C9C171AE7330FD662EE6A77
391490BB77201364B82E125BDA2ACF49EC8E34CE52D249E5219D8BD6BAE13C65
42F45C70046E174F078FE62CB750FF6EA7A66B8406F48514BFB3CBCA82240E03
CC718D234F0BD2CC21E26FA48858F472F4DCE7FBB7074EBC60A0E1C4E12303F4
E47CC960E07BE894B2603E5F8CE8F2E784D9DDCDD4EDEAD5C3ED233B489D2F75
8EC45143F4F0A0543435A91DAB54F3AF7D2E731A46A11EE7BC436B3401F4F10C
1F23C25010284D2A3FAF4B6319FD624DC9E8F1EE4F12DCD23440BB22C9A3B8FE
7D83BD09053ED922D28FEFAF4CC14217B4B313B8A55FC7F5C20F6C23E73C9434
BC8512039226DFE0D097CCAC4F5B3C75E6D99097A50CAE3B242444BADB7BCA03
5E6FD1B916217F17708B9E1A6E46821BE1526D686EC5C29CC0B9251CA8382371
39E38C0306FB6CD5002DB6BD65D79B08D50ACB8DA4970E8D52C635870D1AAAC6
7B32E1946154D781C70647385801BE3DD643F4EC36891F28847AF38E6C5FE071
85D318AC85BE1218079E963D77A1403CF1B577A875C77046B2BACD7E49E7DE41
9FAA988CBAE25E2EE5D17E1AC9B2292B79CFE5F70F426CEF4005D725282048CB
BE7DAD5AFC407531008543AF623711112E38DF3A06C06827C2ABC250BB98BEC6
3806D99D6C5E2F753A18F574D2AC6B95895127187320CF375F87FB8FE7B76B83
74168B79BD1AFDC79538517368EE90EF7CC3CCB8BA0558D757455E4AD1670E51
59D894A2EB2EEC08CD78FAA11B8A36EA1981DB33D83BFA0438106982714570FC
C10A0E460E73193A84F309D7199412FB72411C216B8EA4DBF1797F432861E97A
8AFEEC17B62C93B40E3E31AC447B2B6E333457B63C38F70A0902CFFFF2FE6DC0
565782224CF43955A08951D6B84DE0557CA88DCDFBBA5444D70DC378932F76E8
A412FCAA5B110CCB33D40B8D03DBB73AB24D857249A0BB1608FC24FF278C6719
58248DC70BCB4BC1A5397B40646E362C79357737681AE9B14C687922DFC8CE47
DB9C26294CC603A0C25D42066E5824CA8D9345E6DEA892EBFC306B7BBAC98F97
24556606CA7F56BCEC512B40C07A033965B7905B9A3FB232B394F3E3BB3310F3
21594FCDF8DEFD6F041A9419F7752D4D9484FABE5787F358ED5D488B12509152
369575C127FCF932F01F41A4A69FAAA31E34C824481A6752AC6EA2E3320488AE
E72460961F7F01291C6C69CA0C01C62CEFB1A82150C7D0A4123CDF0EA106D824
596B106FB3821C0CC131363E2CD4F4BB49BD7F1988D9B2498831A4876F6D457E
2F1765502EF478020553580639B7EB81BA155F78B57CF2365E94C720AAE257E6
468DA8A76A7ED7F199CB25F13A4E27BF92E97A5D9033A3A748D385D61B2A7436
D65AE854A0A05531126DA4296B6B26E4B3D6B53466D825114AF8CE7735234828
87EB9431AD65B789E6503721CF9B3B88D1654C597914EC76945A75B2524B7A25
9FA1D6F80EB14243F671899D60B1F5B76FCC4BEBEF55FF0511BADF7E125EFB7A
7AC3FB652E71F51D6CB129E1ABDB76E9E48F87E18C7E934ED0342CE35DB247BA
6263AEDB5ACF26B77E50840686
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
/UniqueID 5087384 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D6F5CA5FED4F9AC9ADE41E04F9FC52E758C9F45A92BED935
86F9CFDB57732045913A6422AD4206418610C81D882EE493DE9523CC1BFE1505
DD1390B19BC1947A01B93BC668BE9B2A0E69A968554239B88C00AF9FBDF09CCD
67D3B2094C11A04762FE8CC1E91D020A28B3C122D24BEAACF82313F4604F2FEF
6E176D730A879BE45DD0D4996EF0247AEB1CA0AB08FF374D99F06D47B36F9554
FAD9A2D3CE451B7791C3709D8A1DDDEFBD840C1B42AB824D5A0DFF0E0F15B0B7
22AEEB877FF489581DA6FA8DA64944555101EB16F7AB0B717E148B7B98D8DBFD
730C52937E226545CF8DC3E07C5BA30739BAFCD0F2B44275A6D503F582C0FB4F
449963D0AD2FAFDE33BA3D77BCA9D1DF878DDAFCA2E22CC4BACD542B282164C7
97C2BDE318AF9D501CA21F6E662E7AAB75A5F24D2C182E598D175D44E88AB19A
E7CD59584F95B389183EE21B525BF52A3F23C0FE5383A5565A19361D716F508C
AAB78411CA5A4D27552CC1C435760D5A89D535B71C593E755C616661363308DA
A683F54ED0C23FB2C225A008392B0B719F66F11A946A090B7C00B662A3C69599
B4ECB0CC70C85C4BBBF207E0026F6C7A19F2ACFB7A60804FC98A4BFFD7BFFF2B
9529E6D9D4238002BBC255BC62959D6F3381FE06E0621B879D5FE5B541D45A1E
759A6E7DC32B1D1632368D09A97039DF255B6492B1B2B7E2C1434E8306ECA7D3
5A79B6D614B4979F10988BC76ED53A5F45315CD7DA216221F842FD0F3E050DD2
BAC23C984D506D8F7D614BCB6B244F5F41321549BB0BD041FBF3053307168680
3435E9C9412FA65674DD19A6D45FBB08AC58C6431C23661D4A208549C1B3E6C1
5B2C1393EC7DF43DA10BEBD5D94FA3C9CE057B7C8E10CCCE969B42B983374084
4A8DA341EE9930DAF1F95A4562BC6A526B7324CB8738E603BA37EC8649896554
7F7CC8CB5900F6D95ACF7E541E62FA3DA57FD0DBD10338FF6B090CBF785EB30B
B4CB365DCCBC5DC9FAD2B4A4987BD436ADD42C85B547886BBBAC8CF3FDDD07DE
1BE80A00DBE70D2F1E52AE1E97E7D42F1D56B351E887558AC44551D33FD623E7
18DB1D864B218455125A66722DB3D3901F15BE99705650F63F9649B7CD215432
A03F48BE28FFDF113087843E66E3C3986CA0834C71CC6D81B231762B13188D87
336980EA28D426D7D230AECDC965993A8FAB147838ADBC88797F8F6E3F64D4CD
F66FD2B2C1562B669390BE55C9042F63BBAA1377F4513CBD8259137FED81808B
417D7C371A3C5CC3C918775CAC910406A2870CDDE71D8D3F70A6CE6B1CD701E8
8B0902CB71195E5E8A4560FC6C552E1F66079079A3A8CC00B2BE45F7C0A4954D
E3E00F031B87ED18B7F3A4886F34003D2F25B467A09E0A6412CA4D3F63450118
3CFE081B183D6E139BA429ECBDF9B9A7192EC7C3992F901AA78B393B7117BEC5
26CB8F61E802014B5781F1696D39E58816A425D1036F92158287896B73C883AC
BE7FC5F1D15C5B3B6E435BB44D6F2BB623E7A8031E67E3A9570983D58963FDB9
1B0F21A3DAB95C52B20E15C5E1FCAD076101A1E37FA1B1DEFEDE6C76B4F0F36B
0A531FFF02A5DFF3CCD7C6D7511DE5F6E169247CD8B6E115B4D6F1E09A1AFCF6
D34F38CEA18EEF6D9226D754E6EDCBA6CCC3D64630EC3B0F03E8E9E0247000CE
78D9924B0BE6728BAEFB9800865BAAB3EE968436F83C80187328F9CC01BB626A
6B970F3A824859D4FD755C8B4CFB2CFA8F25A2ACCC3D86D67327F4B49529DB3F
4E05E6EEFA326A522FF2F5AFFF7B23D3AAFEE36A5C87A63B8711A850D56AD8F1
0C2C38CF39AE271A771ECA0E85965B481B03E340D223F6A622144D27DF60323B
1584B40D1176BDF8CEE17DE95ED6CA98E1A0CB96D986B05A14D128DFDE08EEF5
8A8E1DE3A899662E3BA18B62C6E6017BD2C12B3A26AEF5C56C1900CE7FCE3F8D
32238958FD80759B971A1C8F0865517595851B2859C35BD565DF46573B280FF9
E020C07C6D8421BCBCBB2A0B44AE8BD1F2CD581AA472E264EC4AC492C9D8195C
3B598FB08E6BC81FD6FBFC1ADA98AEF5358AAFBD771027A6D452D4E42103F7B9
5C826601E357DC25C588D088E039CCF6DD9A2ABB5EED44CDDF285B33445F71EB
B8856B4792B5DF464DF538450F96C2398DE3215E23E9E08B4A05C3A55B1B1C40
FA6B39C71296AFCA86443D132478CE16131F3E5EFAD2B620123BD97B6F88B103
08FBCF4C03A3DCFFA749A4808D2409ADE8290F568874EA931E5FE5AC4B3ABD61
FF5B8053015BEBD9B940D1F547E70FF8818F354C1FD61F2BB3A3067BC4D82E60
2290DC661795F807DDB9C716D08EA10D7245CAB549A46E411A6169104EB2FC2C
0F86FA080C54E491879792ED0C853837D82207F18B099931B6391FACD2C77C3E
B7A553CBDCC4CD87D65208842AF33260C07BBE70575AAD295C85F55ABDA9A634
28BC2B43516D86A20E956C0095DAFFE68378E54B6A804549748F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.1: CMTT10 1.00B
%%CreationDate: 1992 Apr 26 10:42:42
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-4 -235 731 800}readonly def
/UniqueID 5000832 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D19
38DD5C4467F9DD8C5D1A2000B3A6BF2F25629BAEC199AE8BD4BA6ED9BBF7DABF
D0E153BAB1C17900D4FCE209622ACD19E7C74C2807D0397357ED07AB460D5204
EB3A45B7AC4D106B7303AD8348853032A745F417943F9B4FED652B835AA49727
A8B4117AFF1D4BCE831EB510B6851796D0BE6982B76620CB3CE0C22CACDD4593
F244C14EEC0E5A7C4AC42392F81C01BC4257FE12AF33F4BFEA9108FF11CF9714
4DD6EC70A2C4C1E4F328A1EB25E43525FB1E16C07E28CC359DF61F426B7D41EA
6A0C84DD63275395A503AAE908E1C82D389FD12A21E86999799E7F24A994472E
A10EAE77096709BE0D11AAD24A30D96E15A51D720AFB3B10D2E0AC8DC1A1204B
E8725E00D7E3A96F9978BC19377034D93D080C4391E579C34FF9FC2379CB119F
1E5BBEA91AE20F343C6420BE1E2BD0636B04FCCC0BEE0DC2D56D66F06DB22438
452822CBEAF03EE9EAA8398F276EC0D92A7FB978C17805DB2F4A7DFBA56FD6AF
8670EB364F01DE8FCAFBAF657D68C3A03112915736CEABAA8BA5C0AC25288369
5D49BD891FABEFE8699A0AE3ED85B48ACB22229E15623399C93DE7D935734ADA
DA7A1462C111D44AD53EA35B57E5D0B5FC0B481820E43222DB8EFCD5D30E15F9
BA304FA879392EE0BCC0E1A61E74B3A1FC3A3D170218D7244580C7AA0DC65D19
741FA5FE6F8CBF60250ACC27454BBF0897CA4B909C83A56672958752ED4B5E79
E18660764F155E86F09EFA9F7685F2F5027EC85A775287B30E2069DE4E4D5712
E7D033481A53A2702BA7542C71062173039030CF28D8B9C63B5596A9B42B33E7
D922944A38713383D3648A4AF160A3B0C8F3379BA4372BE2E7EA49AABA75AEEE
C5DDE1D8BF68483C3D21271280ABB91D54CC819680322EAB72E1250A760BC8DC
FF798F2ABFC4F3539392985C4CB324B0007229586D1E0321559F67C057FD7902
194490A4C133DA7E04E7895F3C8786BEB6B449472C32E3AE702291DAF51407EA
86DB7DA1EDFC73D7697FD45E3A2928734E97E8B9F0D038F0D0A1DEA7A6C19A10
9DA7CBCEEDB8AB9B5B312C64A1B56DCCA040C9F83A0E50B4F8ACE22418F08755
BD425D00D1D5B53BF96B6269B9FF37AE52A69CD0911FF6D0EB01319D99F6915F
34CE9FD88738AFD142E5D7C3FFBD41365DFDE3512B667AC78A09A780813B1FF0
2AA967B12AAFA894C30092559A898DB72E4BAA59CC507F8CCDACDEEA4AA38587
F5A616D2589ADF63FC20CEB298993C38B94F70D6AD3E0F77A0F9A48C38B48503
4EEA67D623AD61E2E8CC01523B39588401E902D11CB4A6025A8F4D5EA33D81C3
6E7B44EF621339A5FFA2435A2F1E3CE75E56143C3D8F5C9DB40CBF48992CAE17
B1F03D21129B5E9F361F17E3922F1CD02A8F4C8C39F98BA43381E03A894C95E1
FBEA45E4A55AD2EAD722B5F97A2016CA36C8A625988BCA75503476CCE640D2DE
0DD9E8C1271EEDC47D44D42DFAB9676A91007C741BB587B8CDC9311B5928F572
5979E4BBBE14518EF7198BE600267815C6C4AE59FC2A788EDB101CFA95AB8D39
8A3F14F7713C27C68A21EF83DD2CBA5620A7D626AFB6B18293DC4ABAD69050D6
4014F263F1A200ADACCABE13F161D04872D76553ACB0C03FEE35AD9BFDAC9D4A
8D91B8ED4D53F09DE9BEAE1ED295693AD4BAFB36601F73EA74AD463920DB37E0
4533F3398AC31F829BB1CBDBB72934DF7DEF9096D27D3D6EF3F24DBA3A772601
79470E8E848777A845F6E4F585CD50541CAAFFE6871A2E3E5B27D78EA7FD220C
442310AC65A6C16910FADF05085A8791024AA39DBD1DF991AD25E6C793053277
F53F8BD6AD9BD936E2C71B7483C42CF582343250BA953457EF71E763614142CE
7391D63182F03983D0EB8946AE6E1DC3CAEA2BD21F53F5BB6FE307C63F7EE74A
B43F6ADDE4231FA59C764E67047AEC27AE1B7790A698A13CE17EBA2352DE294B
803D0A53FBAEC84C4D10FEE564021929779716D3229902F6C5DCFBB4058028CC
E6999E7FAAE79C3160A9F4490F5653A11EA16011F98339F9BEF153F408B679C9
ADBF5D627009402AD7606F0B46517A1F3CA8DE1B67180BF9F88B8F956A8E55B6
2422E247D5E71B9B0BF85824327A4AB16F8DD814DAF6CB69DE8BFE909CA1CDAE
BFF7106C5F896623C6CE0B0F8BCA286439665071C4517923D5168397D35C2810
FA292071F934FC1B4C30A662396C5DA72FF59FEE88DB9E3D76BD171CBF061AC6
E4EFA73D5E88E80EE6B7E63A391C4E670C783C1398C55E6487F7747215E3DAF5
9CF61186CA3B3AEA838D9B1C0C39E33E12DA10528F332FDE029E18F830D83FDE
226B9E86900F306DCB4485E608105058A7323CDE00C1F3905F782520CE4AC299
84AD39C15A34AEB8AE0335ABD6AB8D909985047385D7E1E236C5291B38B293E7
849EE95C2D426F9D171C0BC67C183CDDBEC3BBF4B2EA7CB4F29F4E14414BBFEE
EE70B92DE8ABD27960C9CB07ADD96A2FCD3CC5CEF9CEC8E4CBD9DEEE696DBD7D
CFF261C7A6C4879EC76B56F32E91F1A3BD1BDBAD413332A51554838E60EBA201
DABBE4F4F51F1159DA6C906A5B22170EB78918288A19FD088730159112603AED
7CCB15B0DC28505E1FDCAD08EE24ACA1F4BE3B8B8D182BF89CE21B84C64D4722
CAF4F6291F92D54F8F5DD1655A9E670D1701D41BF8391F480C41A1C3CCE358C6
BEEAEBEC950868F80D7A6930A9041A5C722F0DDA4E2C5704C3FB394437022129
04AE79C072E89E8EEB766455E192EDB5FDE1865A6F27CD767A72FF33AC9DD31F
F0382FFD9270EC04AF7400DBED6B9E2F4545CA9578F2880458C92A82C1FE0BCE
13E8D3B24A298B0B47EA9A3BFCAC9BD6FA621A51902A5FBFD7A598A50B8504F4
C60D740EE2930F0211BF010FBF9D16E50744EFF1428A1BA1930B6CE1822413A6
1D0BD9C4A0EFA4269448854518667EA1940E660760B2061EC5283234C1436515
A6FF907F9BC87A19DBD68D8B87F363DA51A7E24A9D48E1FAE583DAA9EE64EE9A
BD422A3D37BAE37E99FEB63E4E9AB305BA97F0B2CEB59202D7D6295F5E4D944E
7DD9B5371DD65B5E7E9492636884FB069ED483AC965EF51FA09077B6BC5138AB
3271AF944C6A186FEDBEFDBCCA2E754950FADE67342DFB9759FC28E488DC4B59
BAC88DE2D6ACA07CA6AFA1E3B0498BE6287E42AD6C3FDFEFAD21A2629D802D14
EAB6DBC1F39175AA78B264CB7BA5E036B7683947BDF364F268C3FAE9CEB1309C
E2A14187089FF25B5C96391EA7B2CA758D3BEB5C7CAE2760CEFCE2D47FC76E9D
4762F1D3EC378EE239C520E36124DB5DA6889DD769F030E3DA3CB40C42719E0C
13DF2C107F4990AC10136750DDCF99908D01243A603DB605B8414F95B76CDE0B
26A025366E85BA8950D5FB541A2B32CC67D4750DCFEC0C272D95DFF88FCAA298
17F71F9E212D0EFDDBDA38394927D2511186D13A2C8FB38D200E36DAEA1154D7
48FA9562A2CCCD839B25AB9855C1CCC9F1F2F1444A8B3741F24CD59119EA67A8
D4C01C5B8F29069C692502C8ABDA805D399FF004ACB235A684ADDC6A77A40159
B115055FE01C6B24C35DD22A84103E7B79799F6CA27E5224242113FFCF7242B6
0DB9734C5742896A9FFEB8B417742216ECF57AC5B05257AFF4B72DD35A05B2D3
5653D91043D2C46D59555270596C9AF34C7160E364ECBE2B85C82DA9DEF46D7D
92565C7B089352A22485B2D1F6D99AE737FDEC914D1A22DCCB04B33C23CDAF11
28969D6E0EB1C78EF182F2F8F15D05866051E35FDFF3E4ADEE1261E06162D357
ED701E5C4F76EE8F7C01A68C0EEBB66B348EF7F1E19E033583FE290505B82320
A7AF1B7140BAD284A0081B363CB4FBBBE37E164842F1D2DFFFD8C7EA067DA9C1
285536F664C35A5DE3F1823870AC9EE42DA7D86E92019602B372B94DABA9BC48
1364AFB3EA64687F7B8D926B4D70A287963513DFC242F818B69B0DD989EC750C
0B0A861F2708EA12052BFFC86AA604727FF5B075B8779CB5DD676050A7D47421
95FABE6B14743214389200FA6BBA4C826E3BE99A139DC360237F753F757E76A8
A8FE426732AAB072D927F79472025DB0691FFEFE11386BF5566BD40FF25769EC
646A143A87E6779938114C1C8A0797495DD67D83D63C09FFB2B55C897AE88298
7D4111A70ABC15D02FCE164EF310EB1868EF868AEE6E1C038A41F04D9407F6D7
46D427BDEDE884D262E8E5B05DDA7DF7F3548196AE490B0969B299CCB55A66EF
3EB2591C6BC74142D828372082333D9E7C2CDBB72424B4E2231954227BF20A87
15046C87AEC76373EDE81FFE1B95026DF06D91E34C3CBE3709EF57ECDC0DB884
EFD269CDB7BFAEE40E8836E9BDC3C09F1F4CB1973ED6D11E4BABB60449858861
44FE1E8D8EFDEF731D992F842554AAEF8D17F1A3101991A90FBB035D77B3FF65
F64CAC866F23FB3F3252692DD84FB4F4DAE9E2B0667B7C236AFC823121FF97C2
291C09C6C37F96ABC83577A5DDE4151D06BD211DAAAD8E8ADCB2872755B09E99
86FB947585E6840EC0CE84B93E7B978A604964259A5A3B48F4ED2F19E93E7557
6E93FA7CEB31D7E8DD61D54166FE2CE5C8D65CBE51E2CDF684A9D8E78A92728B
C0AC39E0DB9E6E7895FFCA9BECE7A087C42FC5EB986E1CAAE8E9822512D72BEC
168EF727580293327984E2B62976631C7EC8E0E5766813BDCC75B5900BD07E48
7AC4A05579587174697B16E4E8A643F4C4F349F7C72F31C36FF9D904FE0B0AB2
3AE8227F7282B448A92F9528B2DEB8730DE7D68CDC55E7CA90F49A657D6F3697
D73E81CE99F95E237C7EFCAE465AA90422A3683B97DBA8511E966019B9F05A90
A500548D553D2F1CD618D6114F689C0B015F7C088A34FD46B4D282EB5C2FFD43
764E25C031A1858CC0D18825D2BF902827A4AD6B095CA821FE71FBB5ACC18901
895DFB56A7B6FD81285B201F58D23D09D4D31A0C93D9834B6100C330A33F07EC
73E5D3AB5E1AACAF61901735C357480B202F6DD72D14A322A91AAEAD4CA76D59
FC7A56B4254971CF159008019EE3C7DDC8F82DE2A966BB9F3B10B7766AB6B003
113F395755CE01BA4D07C6B769C0B43E62F4BC799B17FA18E56E7CFB1CE14FB0
E0DACF98B1AB3CC8F549A85B3B1667D6F44A5373D756DF8EFE497AEA7CF17201
6472133BCC42692BBBF63E23FAAFFB1777D85A86B222AA1C11200060B2C3A4B1
11FB26DB0FD77C61DE45BC6C746DF8CF7D3E0F61C1F48D6DB573E5DF04785CA8
C31D61DBC04B3CB93CD1714993053C3CB7C883329C6D3CCE3FD5DAA4DC92BDCF
2DE3FBE90A40D2F78E07395D8DD859837274E08137051CA168901CD829CF844F
EE225DF0A027236FA1B59495AB6C3740E7DB53CE266203471DDE61F907668766
0F4D4AA3CE9BEB0C274BFB6F813C7F04EC0A0958C53C1B2C4F05B5A6C5778C47
EF2D62CE6C9EA619098E2A66AE81D43D6C834FBC4EEEDCFA8D135D5B37E4C611
AA8A41C9FEADAB227450A42B6D6F1D37A2A84EC4F040B74E0E752B247D359E87
A689ED14D69CD182C5A8F20C7722167157E99D5D44267850427E271C5A226A31
DF1F9DF546E1D67DECAF2E1B2F58421FD602CDAEC24A9DB63AC0F299606A8489
00796F71C69940C00457707FCD29EA22AAE28B5D293D033554A889098F125EAB
E2661BAC39412232913F1C82B26BC44AAE73CCB752EF7542312015A1D4C2E1C3
75A29C5DBA1B60C91CD99085A53C42F8EF65D6913383A347E3DC3B3CA665D11B
23E27A839A3A7321D447775C7FB2A4CDAAC9FEDC5210BA9D7BFBCCDFF7BDB5E8
8097F9AFAB8AD153F116C4801A7FAB3B1C4DA67E9F5E62375F77392D2D2C713E
32623FAFE4EF4B7E5CD57E83D4166C28F2545E0A5D215AAD7A3EDA7B2C1416C9
977D5D0B9F0D5649877E7A6500F7E86CA04CD5A4BFA14C8AE8E4EDB312DE8593
E59D0FA8026DCE9101631E8EBA94307822CF952B17B124E607DFDD0679964368
F94F6754F725C8056B061417FE3913D2C9BBBA2E8338324B3FEA1B85AB94EA69
759D5AFD32C214A4C56AD05C393B44EBBB9C006B154EAD4B105DB18428D1A521
AA87CAEEE056060ACD96B511BE7D4C82A2FC0DDCD5898B320923DF41BD5C25EF
ED1D7BBF5F3252EDBC05E2C713C276757A2C677D12D2BD20C7AC37867A0D54B8
F1669442F74F6696CA0DC2370B867DD29BC66D6617B2128BB03F1C0B36702DC5
55C230FAC95572DA34BECFCEFDCD9372567450F2D39273D373D40A34C8C845F1
5BD53BDDBFBC6CCD4A368B637544BE18432110097FB9425ED420A972FCB39485
E30221E315B99ACE370207704AD0191D9559C6857F2FC5A4FCAE536B3D919DA1
0A31B928525C5DA934231D439439E54E226911AA1D3FCB711A8BCD05AEB741B1
49752BA02088BBF5207C1C2D89EADAACCB2D09FFD0C64F2E456C065716610F18
E4C42F8C9F3732ECB62F4F108F03C3CFFDC87753502005CF31EB26D90C52A45B
9E5AA0580125A562C399E1FBE3B03A30C528C1A5E1C571F0EFC74D62F64A175C
B9595C35C20D037AED0EA7A7BE649E6113BD40557817ED81807EAEB6FC0A1E41
7DD3A733A36EEC7EDB11366A4D054BAA20388CA6B6E08B071B35AC8451AD45D6
F62653061C61D72831B744AB05C48981578D2D3BFD8B8EFC0816407382E12633
B6ACD4BABB47CDF199DEE62B4B96F43E7537EA6AA9266209591181418B539170
CC3E1685317B5F836B0E7FA0F297BF99376E1AD0DF491C7BEE3445FA33958386
CEDFF3915767505DB662489A56AE8AFCB111DCC04590D874EADDA1A7AA5EA7E9
9DB3A39A2DB5F633FDF425CD10F94CD4666584EEA4EAD286A679671783E443F5
6804D1B0D70C6ED62A5EDA3BD523FC7C61B8B4DE7348587CCB8376FD522D9CE3
2632105397A39A5C685FD7C016F095ABC69BE8596201F4F36A4063AA3050326F
55B912A46CF395967DDA03652DF379544930A2D7DAFCCDE197611F94D656A97F
03F05745107E18CC4A77D3C3B5B4D32128542719466349AD6630EC2A3267CB43
038A7F57E4C4E2FFF5E1550D29420FAED248A1183222F42317F269E3DA85F880
3E57BA51C4D60BC191871B02AB5C5B7975F4C2160306AFC2977DAC98504B3ECE
C8CF22EFE7FE0DF8283E79D72103AC96E9BB73B5C332A64770D6E1CCB667030B
B1D3C7AD144BD2137BC2502170E0DB208B5A223C902C991CB102BDC67D5B375E
3AEFAF7A18303672E8E53AF5735CBD0EA8DA2C3ABF69E46F645D22636E37C4B8
CA6FDD0A72DD4CB89C458FC34E53DA080C150E0C6017676B35DB66A6BF6D9C29
553036BE99636828F3B685ED6EE0F3444886247A83B2F85AAB966F2F2210D8CC
50EA61B99229E77638D6783710247BC31E80FBB049F8F2196BBE0AE26EB9B00D
897F8CB4A4F83C4CA8C8B0E0A2601BA16F5BAFAC3BDC0769BD3F0418EB90F83F
27BE01571ABF4F83908B002C4EAF95CB755FE8F6F941E184ABA79556F041E47B
E96986570723C3FCD0D841AFB011F38F4ADFF62C030135C3A49CBEEEFD0B3BF7
A7DD214F58FEC1FC6D983C2AD7ADC824A8C7BEB3ED93A291F121DBDA732D7C75
008FED84FB2AD2B9FDF4BE6A6D1D8135A63D6171D080DE0901B0A4F537881C4E
3BBA3340DDF2EA5F402C87EF8E75DDB9418D8D012136542371FF12768538F458
B87F84518651B19BAA856EF007B6964D31B213D049B0BFE68248B218EDE23618
FC640380A72C3D1FCE5C3F95F7B01FC3CF3CD4FB304086EC59138C10AB7E6B2C
60EFED64CF6CAF7C443D35864A283C246E5DA9483F4269171D4D87562FE8648B
DCD22F0FE7E7256204D2C3E6B5E936BF22182F8A4E60BC0BB04BE4E5FD19808D
3D2AD9FCB4C95E49E047E85B023D9699B055898EC4A37DD6C5D9BD0C5CE0087D
76590BDF568FD69E00C55F875985A5F5D78FD7CFE2782938075804ABE6297C02
A26C453E690484F959B749002F873589794F7F081BFDDE0FDC21EDD1117F2D01
F583CA2E8B71179EA32BBEC88171B37D8D1572C8E341FFC5E8666861DAD2B913
2C15F4462E114172E655AAE481EDB3F127B83AE849974A1851EAC42150EE7A6D
729A227122245D756AFDB0D52D013A90B2456E50B120FCB18B9A3C0538DE6056
1637D92CB2C30DEB7CF7C60C33E5BBFB5B8F4533761582F2046807EDB98F417A
9E4454230EBCF21ECBE46C4A895C69B94245CC5F871795399ED0412FBD094030
B03BD86DE52A0A9967286F0DD5E441214C76CB0B83015EA8117196F6F3155C16
A37A7592E8FA6C0113BD84EBC68960DDD98489221908F7120D33F4E244C1D554
62276097498F3311FAC4B00EBDE396283C8BA18057B76A4F5CBBD5236F80DAE2
2DD38BB637B4316A5C576BE317295ECD6D9D9088A0E10BEB6531A08FFCC96883
3E91B4956F86E2025C73A757F6C752A4D3C9CFD718C89C6F5B139B24AEC01366
4DD3408801A0F0208F3D98C2942B44925525C0C412CB18B1741915A672FC8048
74B0BFB15EFC65380ED6CAB82B7D2D7058C5A37C6EF8F0316ABFBDD62D210643
2E868F65FEEC4BD1D781A704751DF551A9F1C906EC7977E9A7A3AB6A819496C2
1D5B91A227B83249EF8073B66C3FE8984F20BF02F4E274932CCF5FF7000039EE
7A4E23D86FAE7D19EB3A149F4C83275841A464492FBF416A851F81A512EF3B2A
D620A0E7CFBF507D96CB22124D7BA106A5D2DB034BD6DAE0CC2A74B8C12EA207
4EF64C60B253F79C831FCAC3AD91F048E89D3DB7B0E6EA9B6C9F9B592CA7CA4F
613F8DB13D47125595AB9C4E3B6BCA1448AD7C8A6D14C6025839ECB17FA64C18
52C056CBFE38B9D15F6A11982424695BF26087CE75CBBA8D326A2DC3A90B7123
569D55929EC5B78DF010B546BFFA0E606E66B0994D7757417BD0F2563B9BBD2A
49BAB8C8CD061985170F68043D31552ADCE6DE051B8142F6C2250CF9CB487E0E
0BFE04C4B68B30D1A22BEBF68A0E86959569FB41D0BA948B232C834AB230B849
7BA191C77EF098EEA069F07F2A1D399D071E8914D2735933EFA9EA0ED09D76A6
322E095D3003C78D50C86FA024FD8A5AE82BE08362368F996314CCDE4A6EC35B
84FA231DCF69002DF0B86D7DED5437DBD0F8BF98CFFFC50FB44A1B44A7B86BD4
203426556F659300DCDEA0D0CEE443F5C7559C6489AF4492FAE579462709FF3C
AE1E056B461F91DE1595AFA6E0DB741D8FBFC216FBAD4029F5CD5CA21B468B0C
3CADE94FE84A2B84AC2AE8E518153199463B88DF1CE7EB3904BCA9CD57002923
3E3C936F2129883FBEF9E49B89D65F37998C041B5CACAE94CA757872C9AC4437
C8B35A256F2712FDE947FA0E121529995314FA564907C8A5CA0B89B91E5D2DD7
2FB75A1CE87BCE585A24370905C0540D816931756188238037523BD782F4AC06
0CAE1E5F72EF7E7787350F37FEEF8AB7C9DE7977FE78CD4E5B90CC2E4B2EAB32
43CD5F70AF2EE64B560B3EBB7292A6DBC286AFA5EFFCEC14329192EFD4AB856B
B21C9A1676FF1C7F646226C1E23F4503D7586E7802928D89CF65C13C2DB4086C
C25BBEA03B8219E57F37A30E5894E8F6ECE535574565CFB4C8265C0A6A7F32D2
F42C5084E58A9A60523EBBAEFF4B5F3EED7C12A9B645158A2DE347BEF70C6DE2
8B2E2592CE246C43F03DAC7A723F5C97BDC1B75167EC38907E3E12992E51643D
804506A8A0B96E8486ED9CCD51C42E147E0A756E3CAECF2E20FC2F8EAEA5D56D
C60BB05EE708D92049AB866EFEF0117DC4EE3255C7D5B1FEF8EAC68D0B28E2F6
72855A5F93A3190CABAF8E1DC8436A7D266B1163E45FC0518DAAADFC199668D8
40E61BC4A5773D90D7F9E7BBA8A15BAAFB74063A983BFA755E030E4A2BE6C7B7
1D5361012AD3D7FE7970F929157E00F5314B3B5BEBBA0D0EE9AA4415B52BEE67
12ADB79291A1AC4A663D1C69CA9E9212D39D8BBBA36B37AF7464B4226BA46BE0
FE0BC979E494462D7377D3000738C1FAF9272925964DA8F8302FE0070ED213AA
56770130C157144E5DF3C93D7F5F4AFC8967AB0F2B47A59ECACED35D99F11063
645E9B59549E895BF5AC9C5E6F69E7B7995D09F997A427BC711E53795868C9C9
8B8C206CA11B59B1A2CF0CA18C8E88874724197FE12702F0F4DE9C01BD9DEC90
20E295DABECA3ED0300193A63B52805C9AE962AEC993E37164088330B913F99B
A5625C9AF783971C34FDCF991AF88245545C97E55D9D9BA01B695E844E5C4785
E7B2DCF7AB0358BD7EA29B2CC98DDB5BBE4ACCC89969CF65479679617178BAB0
E7D0FCA6A1855B2B7695340026B186736190DDFF510121328B84C4762E948E77
21744C3709F5923302BD42BDDBE104B9BDAE146ADB725A20AD4AB4A5EC5FEC13
E72BD14572590144AE47F4CAEE2A278ACDCE980E99AD6B5A0906F70858FEBECE
E7B4550CBF5B93C56CFAD116D4C96F85D8FF4FCB5944073397BFEA94828E38D9
AEB5E37A96A7D93033AAE6923C414E2724D2C05F3595D0247ADBFCD53C3B6448
4FF62ABA952688546BE38FB50156E3E90AEAD17A5ACC865DF4464E5D2C3D374A
99DF4F79A91D6019F3327E2A5E0C50C4B3AF1C606B27F5FF7084D7FBD592991C
6A94209A93A1B3DDEB1951D4C7FFF7D9E1E3630EF6231C6A5C55A96BAA3BC0C2
40F193609E663AFE95B47CED2FF376385ADB68BC6C5A4CD887A3F82D531D1E5A
2869BC6B77DAA202F474BBD38E50C48C62C57608CB4C4EAE8649803585FA1030
B1BA5EC77A85718781799B5429E86DA0CB8714764972621E8FD78D409BA4B850
D72C1910E790FC6C67AF53E7E053AF114FA91AF9972F32807B08F2701A629AE6
0EBA8C48CD95ACD024A2AF9AF96E0018E72A9DF76EF9D7AFD8FE800724E0F532
BD6406D2F1DAF4AC91EDC16286851066A451E66910B488AC3B1D86A8851D890C
327F707048C8A673C5E1CCC043ACA5C842090DE8EAF406848F0EBD1FFB8C4545
CE41456747967E8753960626FA2504E6DD64CF348A7D9C8603BA1B11928B91FE
24073D8DC8CA4D77150DE42643D08496F7D64927BBC014670F06294F5E7F00AE
20CE3A3E8687EFF5C268E0E014814A36F7371C96ED81B40C57708CAF4DC3E5EA
56F394399970C898BF4067F951054634B910A9343E384AE60BEE622843DF2706
0A1C77F0EE6AC211F4DBE1B707736E75EC88A681A1991F62248C4E71B995F64B
240C1E7AB20C2F238E33C0E9D419BA02681BFDFCC7CE94E80FF803179CCFF557
55832DB03F7886E13A9BF1B8F2A51DBD4A1D394A5776010BFB392AB6BFF46D56
859147EFE9657839FA6A34A8B2221C2B23C9493CA9482733B3A1AB41A42A5D92
7C7328B7FF1C3689DD0901D19DC4653213D62A18084C83D7B2EACAEB9BF55E3B
D8E5DF7FCB4143D0A09BF7539FB2E80CA12A491B84DB82E151D38BDF98E5B1EA
DE7076B427494E34E6A921052605236F4587B11FB822EEB92CEAA10F2F43BE24
D02A904C30E5F4252FB44812AE6E6701A4D07D56816DEB969141C807D8BC1755
9B30C38E9D937C0E2DBA6C0FBCB2D0EF9B1D1D5E54B73DAF75ED375E2F6F4B6E
504F7919FB243E87DEB94638688A4F283661C6F6F799365AF7BB34F590BCDC9B
48D8551231C68633D1419D0D4097787DFB11E4CD45913BF927E6BA8F9D62A874
4B8F7F653D7DC27CFA2FC6BAB1A274EF09A9B4E55D68A9C8DB5283A9B5C5C830
1899EF3865976289B4A7BC9DD9B2B28EAAE4BD839862CEA05855E7F838EEB36B
94502F6148DB53DCE5CBAE423EE31ED93D1E145DDAAC28631DBA703A38CB2AD0
071233B72035669D63F046A98989245A19CD9D52D521193ACA8E30DECAD07741
C29DC9FC33B860905C73BDF3BB5EB2A8C6E4D7474A18A6C4F3707D13C9226044
659480117BA688598633DBB6D1BC1956DD43A0D0F19C0E9880612294B2E8E6A2
0D5DDAA636B5AABF9487992D7E0D906EBAF1C92007AD1ABABB573F3FFB80D1ED
E68B2CFFDC711CD23C1F0180ACEE6A99A2562D5DDE175BE968E7371FFF19CCDF
BCFC665D56A73113B80D6B05E80BC3382F1041784563B052C474EA8F26F39216
1EBB32CDED60EB7A888AA0817BA32C747B9B44F6ED73277C0CA7431B3B117CE8
B32EB52B08A2B7688F370359E9F16338405F817ACE5C6A7D3B40567F4274E38B
87D31EE9B8781523921CEC29D562A4463115F511B9B810E4FA8BFFFDB56BB5E4
24B5E98B712DA74B199CCC480395C244DDDD8399F637FE48C92BE9570E2F7478
9E161FBE46447135002D9D95F79F427D176003B8CA4393D46088DFAE6B460D86
108E9EEFE19A68AFD3A0596C3EB944619A37CE7EA628574A0D5C8D49DB3262FC
6C37E260C2F08F8353E3F700CA42B32EFB9C90FB008453B8E4DCAA68554C28AC
C505EF31B14CE937ACC268DF312912C6ABAF0981A9E01122DE06002672EFEA8E
E3687421CC1079AF991CD03F9D2303745EDA9403050F9900194C98CC711B9964
0CE5B772E73C1C69AE71729B7991B9C10F0FA1FAEBEDDC7D503259B4D66D4A4E
52CA77B666EA53F1FBC62BDDFA69A2A978F1C94DF20B37E2E8839935DC481AF1
A031F86B0BE444FAC5B1B075697BFF5D16244DFD5AA7EAAB04C0484291BE13D4
81AC082C64241A37ED5312D6ADA56D36F4BB50819CF88DF7ED5D49937425E2BE
2F007F3C022132BE2B351CD65F79189E9291AACFE060D0A41E18ADAF15FAD12E
BE8C0A93DAE7621E9B570A9805C3DE39F19F4CC7076B4730EA1D4743167CB961
D03F7C83D3F5FDC262AC0607C8373C7FEB98FD31931EB39D96C132DEBBA483FD
A2C8047AACA3E95032E362C265EAE0C186C68A2EB56E57EE56814A2B9F4B9123
E5AB1CDC9AA2DAE71DB69D97FE0E7143E9081CD485A06FAD66A0F840E29225B4
C5C48C18A7207B82C5D83553412B29C72FFEDF63C67EF78CD45D06D73CCBC1B8
76CF9130CFD7FF8FA25F094C0C10758CEF2DEE22C10C9D292FDC705866FB1301
3273422AE94E685676E7C2B2F01B8D1ECDB27BFA7D0565E4D2EDEFDF7CA7FB39
1E960B262B9C493466BD4FDF96D64B1BAA94F857960C4F4C6FA3243164DF0D7B
0383B36D3BC523F41721FD22D55E25E537260C9516D8C2A4AFF4BC4284C82C31
C830AE8B5BFCDB27891BE9FC18256A4C8416EDA4D6FB17E7BC30AE9F1ECF7991
E13C371F396933DB13EADFAC3844FDAA194049B0EF78E27830BF7459599B3ABE
A0EA9A4F6A791138486992845CE6CC53CA4613C510A8BD2F1FF9EABE22414C44
F19F39A0317CDC412D8719B84B8EB73B80830308C33964E2382F71C38F15CA84
6D961322575817824D6ADEA3A7693629F7FB3A01D4F67B4989FF1A1734FDDA43
C4A278CA0ABB72D7F0FD64F98343E485536AFD60A87F3DB22E27C6065EA88E37
2BC6341D9FEB9C63DF00100EBFC66898DB737C7A0737686F845887D6A4FB4D9D
1AA19868AFCA7C936EA40B69B8D008A2D1195B4DA82777B76B6BB25BB840D4C4
0B075F874CE3CE52A7BA52313A3D78C6631B5299FD080ABE7BAA60508D70141D
07A5BA1FFAAF175F3BB60A602C20131A56F3C1AFA9BF29C3E517D5C6E8B83177
2A785D2943A1893948830CCCC20CB234EE18A5252F3BEC275A1EEB6B822DF1B1
9E9B6DF4E7420103A2FBF9B7ED3384621063B40E0DCEB5B68ABA0E96B8865857
24E655731CBD49CBE75D60E0867D34C0CA87D844B218DCE408BEEDC36FC24A86
5E52A090730DBDA3D2BC819CCDCCD286796B76D0542C33D4487544EA050B9860
2FC07BE482237FA8E03675D8551ED55E8B2804AF846ACDDF3DBE4F690E85E1D7
B80979C1DF85BA6F18DC10D51868AF4307707990F9C14C48DE03C648260F8AB4
0F1A59C3C8D0B941B405E12A9EF9CA34735CE980D44904D6E165B8733D7897ED
0D738919B1B37F7EB71501007C14CF188BCD5301A890DAE7DD3D49DF0D7CFB7F
424E8BF941826BFC63192F1E7EF03E2087B9D18AFCAE9460765999BBCB8A95F3
97BD8CC6A499B890EBDED7F57C70585270666C9588202675FA92224E61A43E82
81D9A975A3010EE25C29C9751A7D63F88EBE99A6C068CDDC0F906C6E2C771F26
CAC25D177654928D72364D411EC29C7D75DDDC0580AEF71EF7A1E335D5E202B6
7F5AAC7A875D4FAB4765D4E4A85685A147A381DC72BEC5299CA0DD859D2B71F6
E46DBF8F3AF930DC6FFBA37262CC58159F29437365A7C7F1351774BED7F787B6
A8049F4B20004DEBA29B71EC1CC1B6C4D3649B3785E15A2230B0C5D09B32D0A1
00FAEB52466D5A5F0BDD34B7528CEECBD35BE3056D06EA16B035459FFCFA5B50
1749EB045CB382574B6507E95A816624A9D37EF26916AC9F9A9E7E5155752D26
346E267679C55885C02BF00C9ED5E80FAE01DC84369E292F81306CE4DB6BECD0
6488C3CD4B226758829EED14C04E28E59256ED86EE73321AB5192111D0E09B32
2B699BD46CCA6E2850A341BD8D5B55AB403F1C145A05728F7962F328EAD40CF4
6C7CCC02570073A4752F92EE444917A1F31D97F2F3FEC9E9C4091B1628D4A4ED
45DCACEABB212A215A2C1DEDF386479164419C88A824D690FAD6F8BCB43D4B4F
842EBF807734E0C7328651C7992C3FC2C340A5915C81F658723D2B81AE563189
3E01CA29CFABB9D482D15FF770B3E3EA90C3C398AADEE9E3BBF266390ADC97A0
16191795033C8AF7BFDD4BD581F68F15C58196B7150991622FA2E67CCF93554F
48B5C4C1E54E1CF3BE6DB438A3D8FE460F001E734E3D8914FCE910A54CEBC13A
B4D8ABA8E45B51A50675C3D9AF8EE79987CBBF72ADB37F94AA23FD03D4B4D1BF
8ECFE18E8AB44816ADC9101B009A53435854B759F6754C1E148A694BC8FA8374
325CC23F5A3BEC79AC3BC134496E7DED74C8E593A9B70CB0769415BE713DC0F0
BEAB1B882902E22DEED3763622FF3C3E10C46FD2F0C4E913DB951D12EAF0C036
A954295D64E5022305265F98B97E28A5E46BB5BC61DD7451F4E18870F78FB1F7
D05E0038078DDEFFD101C354C693BB88B9574551477DEA608D775265D54C9168
A624F8CBA597AECF61BC1F195D53F95952919FE3F9AEA1CD7098F1FAE27BB3C5
04979573C46F0FA95384B89D4A8DE3611F1500D7EBE2859874FACE1B95F7F560
91E98312923F58FAE2142F64419C91629AD76ADEACDD8ADB77FBB22760687AFE
BD7B6F3DF4D6C712C21D31DE74337AC169931105ACFD329741C3F826C00DB84F
CD5E2E45BCE604102C488566232308D5388602AD35A684A1D198AB22931BCD8A
F6A5912A592788CD0FB63D7C50067CEFEF29D66577D0B13BA93BB2CD1D794B87
F299067C461A8063ED3FB0614841E59A774F519E5D744AF2BFC01F94F1EB640F
D396D0474D1E4626A872333FE1CF388F917DC872188A53C0171F629DE180A84D
299A367331C705BD0C1C3EB51913C21711D27E67E57D5CB06600CC0485A0F7B0
95F31EDA8E0ADBBF5B728C62DCB3B44915B108985F346AFD27424230ADD855BB
86DBFF0A1F0182B56DBCBF6576B4E5D32F0E2F7854278122AB9433CD9C2B9243
B5CAD338F153FF2995FB3D1EF9EE3642191443DC65DD08D3998ED18A504399B4
C14110B3CC872003968505C098233F6F7EAF0828C328C495B23EC2CE538CAACD
7C8C4A357056D90F4A325D5A857F2669C353BFDCC41A1C6F62AD790A086FCCD7
7068684CDCF84DA685C9B2CD65A517E94A88B4592668CCAA3A122C7505829502
1AE9213CC3BA745CCA073717A2B2EA196C500FBDFD833B7676640320E443980F
AE98106C34A22B90A381F3F7FFA8A43E54A956E3947D0FB661DB16F86BB79C74
7E46D0289CDB1E3CEA35977A5F838DB828C3C2DF16853BD9EB27AA1DD5797EE0
F78655541CFCC3B7BD2DB44C24F035A788CB80EE6C4FA6D63B04BEF62FF74CC4
466EB3334D5E267CF8DD75656B0C1B69D62C0AC7EC3896B836056378A6199D06
FCAC017D40AEFCA2EAECC0A977000955162599009E1A1D9324E7E79849253308
F2E850BE9A74A93CCD04EEEFAE5BA9D6EF321C9A208B1AFACFE4FFB84C3B5F8F
499C3CFF4A8644F6A8FA268FD9C75FA2527D533E117EA977B025BD58D56A3795
6163AF469D4A0A0B94ED15F757D2522FB632405D6431E66CB5B0ACD35459AA11
30BC6F315291EBE8C2565B6BD6B0EE6E3F26B67E1F80
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.1: CMTT9 1.0
%%CreationDate: 1991 Aug 20 16:46:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-6 -233 542 698}readonly def
/UniqueID 5000831 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D1E
2931CE5F5D18C658602059F07BE66E6EFC9239D7AB2FB8A4CBD41675B8ECF279
650C29E53B14AC0E392A664848C1844B1CECBB2D5CFB72D0916B675C9A9A1E35
F12696A6F628473C604A95376468E06E295AD6F76CEB939D94113532050B9D5A
D2F41A9EFB9424D986612313B89EFE9C8A71313340B248F6853B1EDBF02B7F9E
F447220FE131D7D54CFB8AA1281DBAEA73E665BACB1F164552CC0CEDB63BD4B1
4A9AE8AC6FA02242DBE8DA46B64B6BFC11762F0784F216FC8B9120D688D1705A
438B14F5E5DEAF2A98408B3B64620DE3732A4DAE6D08D5D97E34C75DAE19EABD
BA0796165C1151BCBFB1DF8D29A63A8300DBDB9E3323CB82D0337598B83F4F2B
A97CF5196D4D1CEC1EDB8966E548C0D9C194C932319610FB43EA1B86322FE641
AB48770FF13BD475A7267E142388563D1A400419C585B22A9886074687BEDF74
D905BE8EE440BA2ABF28EAB673399B7F129B9729DD5564C681954621903B84BB
CAF89AC5ADB2932472DF29ADA2BDBDB4D05F65F28F5F4C529613D61858E0074A
082A852710A62A147C966F2B85B51B0BE85F11D2057C66FDD61F6C5755367980
9F4DE680601D4DA41B46F8D2148450000413C27AA39B586B74B977B25F0FD3C0
4BA1EBFAFDBEC531EA13DFBD6700E53818CE04D23886B8AE75DCC36BCD3189B1
0D55FAE27D0D126E82AEF31D7B5DF27E58C30BB0867D6D7AC1DA9EFB8A2DF095
B5B934A68EE122DA0A83B36C952431586B957990206194E89339048AA6EE4C53
703763505ED57C494DD907D0EEA04F6B1D4C8F3BA778F4E7AA832AAB4D75F024
61E91C6D25FD6823CB24FC863AA7E80C15BB542E4BE0532A46C15455B106B5B7
2A5C5A288274B68D0843451E225563EE76A89AA99835842D4E09EE3AC1CDFA7F
CFFA1C25A7C12347755D58BFE0D4A73023028436E2039203EAE14D8959DE9DF4
A0650F7A2EF5ABA20101CCC34D3C9036B6807C1820712AABEFCF6B2C9DC831AF
ACF900937993D9F6652C3E7EB3DFB555CF09390769C463C780F8DF71DFB5C62B
D54FB8A18F1B52BE675646EF6FEB09ECA1EFDEE89AC8C1C12122796502B38710
CB2B6CD56FE6541A416F6CEE265142FAF0D625D9D51FF1AC3DA84E874930FC3B
D72782C67F386C94A8BCA342DB7E088C7B619D461BCB7960DA664535D3A0DFE5
06050D19E36CE1A15F2986F4BB393C82EB2D699CED60C4EE92FA68880BA5E702
205DF0EDBF9931166F305F1C651453CE161577AB040B3352B75A4F4969DA542B
786667F36AAEE9462A13A5124FA940702A58FE9D5E72FD1D3A05D9DAD765722A
94C9915C604A84AB5B3137FDE88719EF18114BCF4F034ED85E9E1BE5AC48898A
FB25060AE8C95D5AAA4F4C66B4A90AB65FF204D8C9208576ECF2827852F19FA2
5330C88D7FEDB5A180C646CFB807DC61F5A147376EE04654E48CC86EBE5E3551
E9CCFACEE45B5668E58B932E5E2A90C493AD2FF17BAEE14D9EC4E9BD2B10F37F
654EA479F70B309B927217F172981C422F7ECF1BE5B91D6B4274A86E22C686D0
9722F5018FA31041F0FB88434D578CA469B5604934E91DEFE2F439B8603F44EB
25692D2E9FB332096C06A244486E0ED822FC89A692F7A271ADDF07E80F0BECCF
4181C632362159CB31B97B26439C68B1800FB5762B8F4A0EF3A6737CF70CA400
FF16180356917638D9BF243C00EED47E6A2EF92AA276AE2E8CE1DA37CAC2391F
AB4F091D8B5FD892AFC07ADEEE7B6E1304451E0D57855F4B1C0DB22E19AA684C
E13075DABA55656BC63E459543E24FCECEE432066150F9685B88B371152295E8
589F7BCEF274441F1B4C9705479BF40302FC1FF00FF44B635FDDA2E7A9408351
EF32826F49A5EA8BFC447B614BAF690AF074C33BAFCF630836C189FFCDDE08E8
A0E8E4DF66633C36ED8BBBFFF40F11D8E06DC0A1757C27D5336590CC641459C4
54928D9D054B6E80D3F8942465BFA1C3467F3F2DE144E475415D9019B4F0C30C
2100E85274FBA2039595809B737D2FBB8A3A69F8D42AD6D55FB87CC045C2A22A
3531CC75D1EC1633B5F4329301ABA9A95A847BF78F7071E2B29420EB6ACD7512
9B3158E3427D975CC41817C8DAF64119419830D2DC5E571345F6E69AC418325F
EF41CA104359CAE41EA27063917F779F312081CF73F4725A753A6F2EAEF48DDF
CE28A852818636B855E553B3A071BE61EC7866B1F06031F7FEB501527FD153A3
6A61D02D4A6C81CAB76552E28456AF2F049479E5F8FFDC5B834D067FD9949AE7
565FB05F05D9690D6B20EA206174807B19738072395B94ADB67647B93A99AC9F
C254E70F0B143A83BB2D400FF8A627E8A1076B3CA54B2BC694628958799D8ECB
C2B10AEEEDAC9B0E57DE2F403C32A5DA8A6B8802D149610A6016492AB674B9DB
113CEB06449B4F363AB56C4B85A9F08E4F54C5F74C65F1984B0A930D95225714
AC080E9FECDD21B03740FCEAD2D464E95C72C122C845BABB9836F6606F04CA25
9A08A72D5EC87A646CC84F8F3DC7ED023E85C536370A8CC683081CA505C9AF4C
4614C4101979ED387C6A0E4E4D8DA83AB63079E4E320F4DAEA3DE3AB9D58DA0D
3EED027D694B20BE6A3319CDF3D9089F3384031ECDEC121ECA35F453D6D836E4
D225A5CAA2ADE8120FED7F825399028AC68975C5CB071788CE9AC083FE1D6432
76FC316E3BC8783BDF0D4462B390F54BD04DD0DA13836F1EE91A0AA318906DD3
F624B6B9F84D9AD21CB450EA60EAAA97DBAD6117DAEA7DEFFB1D36B56518DC84
D61F45C845189BD8E19628DA591D9DB5081484CFDCBBE6B78E208E4D0BA6AE99
65F2C1624F023EEB0BE9E3AE93E8E1DAFFCCEEB75510F731D89A7624E7C49A0A
67E71E634ECBB3AC8464D0DA5C0C81AE141BC13980ED28C803D91A8144508453
DB84810A4DCD6F84A353587425ACD54C0783E053FF7B9CFCFDD098D692392975
F65F914B086D4719B4FE2F7FF817D147EA1977C2F8CBAFD86A5139D909070A58
AF5D83995D3BC26C236929C39624ECD5DA6D865A7E5280203A8D0B763005C03E
3C1694D96060C188E22316D4BABB1069407C7B724B8144C7B7A07FBFA33FCEA1
7C16B8EF230882BB28FC0A2DFB89DEA14B387BCE1D86C09D1E31FB48965D9C7D
A1651885E0B77AF5FD01EB3BE0EB837D9FAC7F7F993C207F8D35FB607AE86268
A80318B3821030125BE832D4DFD83CBB05C270D72643537E7E4040F642345640
4830ABDD83F791A5562897CDEB1817C886933F2C7487C37D2DD7C1D4B331E9D8
36944CE7EEFCBD2C3C6E997BAB66F7E69AB0FCE4D0FF7C3E0CA9608C42C4AA95
1D3CB6145745BA174DD92053158061A07F1A26005C03651AF4A07BA947CDEC7F
856A185342A908783E87B27C318041705200DD07A688CA18925BDA3DC92EB89C
7597470C5CDA43E910E1E598517A75A00AF23AE41701172A38603FAC9B121506
298D7516930D03D6B40720AA164BEEDE6670525E4D00C18CDCC7CC945DB2E2BA
3AECC8431A16959DD199BFDB7A39884E419B3AC7CFEE3A91C6447AAF346B6481
2511207CA3B2BC17BD6E24A6DDFE864BD9EFE2723ADC5EF054FFC8FE7B7D122F
1BA4A4D89A536274CA8C2457CCC8A121EF52CD8E2F65AA9BD8D6BD2A75177CA8
A2DF2566A4C6613D03E52406C1831C39B3C1563A1EDEFC0A03615B12A694163D
839659955A0993AA891BBC9CE742EF836507FE8472767BF9BFA2E4A9C42A9412
8C194AACB477FF516340C88D4260A2B8E52C82ADC47BEF436529FE5272233F93
AB2E07D50DB18925C16D36079701CCECC3CA241F002FDF3C53CD3B2FFE133AE6
9BE0D6E7C942AC468C65528D922251FA185FF263139976DFA1A60AF628289DB5
15E35B7DB32BD914D51A53FE494287E8EFDB48BE849CF1876F198A7CB3C3C1E3
34746A45D08F1E05D62463CA4825B51A9E7B360FF543E68CDAF9B87DA635DD13
9405FE9B899BBCB6E917255B45317102C3ED683ECB73DECF6A883935D2850CF9
4537A49D205C5CFBFE9F4226BD723C691C04FAD81E3187B84090D5F899F7D990
C46AA6C067F08B867AAB3ABBA7EC3A8013495CA711CB066513CD4F1F22083BCF
F2DB299A8910AB4EDB92FB196ADAA9469B9EE59D2002EFFAC3955B1F3EABF289
799F6BA778BBEF0E600E06093E028DD3E3C914E51F2BE42A139F2ED077A68486
3BE8FF1901B5F244F01D9059670D7CF3DBDC19B270A045CB111CF2DEC0F9BFA9
41F06774448E3D181FCC338C1F88A4AF6E565D5A5A10AEA01124E3B24B189BC2
EF68E72E3F0D6DB3402548173878E0EE2742EF79FAF174F7DAAA46AE57C14B1C
85E8642ECC6EF62FB0A8C12EE66EBB9A910ED8D3823A21087CE118F2E331C3E1
E11D910765E014B13CEB7EB99551EC7FCEDC7C4502F6077E792FA5A67C0ADD77
D1E3514D42E6FCA40F2B93386EF8A55D6F6B8865FC42DAA1A0573FC6A583C286
F226995991B43C8C15F6B420DBA6D8D8795EA3669B79C03FC91205A9A0917B6D
6CA560EC4B6CE85BAD8659C407C93FB571BB01387EB62E393F572386D94FF8C0
ED127B03DA6B975B84B7FA47932BA90139794FE18373624A5FE12888E3233D2B
6EF787C9FFBEF1BD967323CD208AED1BC463C6785CF202693EFE54B65CC5BE4D
5024D7332D434DB7EC77CBD8AF253420C516F7CEC7066F4075FCAEC29F26C1BF
33330FC29BEEB8F0736F826C9576817AF354A7F8149BE91C36933952A494AF3B
D9660F86CEFC18683A06B4144372583E42B35D3C9A42A4C04668F92F429D155E
0EBDC4C9B0BA596FF9152A5EE342D279F4C272AFA2762678B3CDCD4BDB9A393B
7091215DC32B1285EB2DC99F5B7E847434DDF7371BA942D370174A1A6C3112DE
098C93956CC8000CDCC011FDD56D8E79B11494590A984EF4F24DC4F06FE0CAF5
82DC5F9152FD43D383326A2796647A7E649818297A54C2992DBE0747A782846D
BD7B71D654F69F4BC9D26CDB19956122817A60F4616549716CECAA83059F5A11
AC5EC4AE1D0B9A0D8878F6A8A3130BCDAFC0B51D5F2D8E6473F3760BFC746C4F
BD355EDAC937DE6DA9B17C71670BE58A8F9AB58D017CFE97B07C51CD2433A2F7
40FD41D111A268EE2AA3BBD28770F426202DD1B5CA734987B3D77770B6C54A0E
23EA371F63B59B1BAFA40233C722D4D6DE19A44E877CD46B084FA120D1A756CD
4D55EB10979D2CF7B4BD774D3C31543B0E89DB25C59B440975BBCC6BD676B12C
7E014241D64FC8D62FFAFE76C1D8E9C0A42B4A977674E357787995B6CE0742A4
5AA6A798B802D9F0C22D14E7FAAC8DF01CDD2AB07BEDC4DC5E255D2EE08FC973
041D938C44126149F44C277B401A27AB54ED087C97BA70FC53A1DB5863D47686
9FDD6F566FCDA6E7FEF659861BF8DDBA6B020911CB0D85241106DE6D8759377F
8FB3D1B6DF8B2E78C3EE8BA6C07A0F47C063F2DE1A028B70CA50B794B101B3B9
325134D7E5E5C8B3509E75D93F55BF26161EE77F2AAFFDF6A029780B03001542
C248838C7FC6FD5C7721DBA71C081531FB62B6C487A0CCF150039360866713F2
4238F4EEADCFA13B2349121C1FC80336ED0DF6D1759A06E20ABDB5FDC9083C41
69328B8FA39D5C807A4B8C9AEE309F52BA7E3DD50DE855EACA560CF28B77FBA2
346E3EDCD86CE231C798559E77C757018BAC4A7686B440426B78B1E8F4BB4F77
353911FD034EF9A3B1921CFE8A7D093FDD407B104E2F2F6D55891AB858BD0922
2704120EB55FB8EF58D9DF478EB1FD2ECE38E44D625A475AD68CA514743A0328
06285EB69C11FAF6418EF9DF23F478F141CEF42E28DB755298ECDCA347056B87
5C3BE19EF04D00EA624C0F47F392AD952F2653E387E12DF311DD8B29C52B646C
135BA74EAA4CA3485CB5587E563D59595E25E8C77A17764850D1DDFAF0847451
5A975DBBC16C010048699C7D05596800521BC10C7FB4DD61802B941E45BE30FA
B19095E238F25EAE98257D913CDE22B79D01E826EDB61CE517A2697DC4B1AE6B
0A0CC1037EE9668953B596CFCB9072414865CF27DB0982BD602B758E8C10DEF2
2CAE9F629A19E1E5D0740073A42AFB57B34E2472260607DE07C19EFAC2227D3B
7240E56B04BDE3C0C9CF0059B8B8768ABC7EFBBCBABAFFA53B0BFA70B3E15517
030C0E4A512108A8412CD90B32667A83916CE0AD827E7BC7C6F11FB883F5E511
5286F27C6EBE370DB4AB21DD8210AE18EAA642D8FEECE96F1B4C9C9457C67EA0
6EFAD5FE569D948D2B9B6E2FF9EA8BE19D24CDEFDE7FD068427B436BA55F9B11
CD16E22226B0FD4E4D06A1EBA3AD9E0FFBBDDD4AD8D6F12CE946E674102E6E9F
14F8DD6543F4AF32F34D5E2A9727901B853FF6AB1C5D850DD44F60A0CE8265F8
941ACA9776FF117EBFF2A20361E82CABB0806747BCDD4129011C74FD731BE897
777CC89757E69B3735887B6C5E75B5A816EF1DBFCD964EFF1A458454CE1F9826
4773DA6B443F50D573C8A56AAC4B8B41069EAE643B8D82DE2EF7D6FFF7F8EEF0
9F351BEAF5599B2EB88AE89C4E981267D5620363089201EEF81C450328AE16E5
FBC15D30A7B073F79CC53774890C2C12B0DE2606AD22FF59CBEBC84C33792494
128E8AD41E764EF44201ECE632B30A2CF310EFC82745E2FC66AE35A7FD9E740D
697868ABA80A68C95D4B2F1DB09E06878017F3895D92BD6D29C3FDDB00276E9B
4F150C90A9C40E284594ACF2FB15F3A05B39E6E2B88BFB339B6ECA880AF1C123
630905A4051CDE218A2EEF6ADF0070105FED44F72556117AF66616FDEF116785
26DC0DE31B6CBAA945913BE197370FE3DB5B9139A222908FCAEE9E1E8DC5E507
C27F7FA5C6FA401F8D526C9ABB3A716BF3868A61FAC8B2BB40EE8F9F83CB6340
D9F700EE756FE9102AEEFA46C354635E5186874D80B69F082391C5496A293803
CB4F4B2D7151E811F8270083665F9CB4417263C99974C882FD6B05AC0B66F173
4B4712AD93F7DB14F66FF5E4C2F6A0304CAB75B3B1DB544D0A6104ED258D402D
CEDA48E922283A201F784F1FF9C1CD47295071212767E56E2ACE6E37B46BD3FA
6963E775B3BDA44320E462EF6C8FFE213A41D266E3AD1608FD341E50BA04272E
BFF847BF48C18E2B1937EAD14B16E2C05092B59B8ED0FA4336CD2DCFDACCA0DA

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueID 5000792 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FADB679CF58BAFDD3E51DFDD314B91A605515D729EE20C42505FD4E0835
3C9D365B14C003BC6DD352F0228A8C161F172D2551CD1C67CD0B1B21DED53203
046FAFF9B1129167921DD82C5964F9DDDFE0D2686875BD075FC81831A941F20E
C5CD90040A092E559F6D1D3B0E9BB71733595AE0EA6093F986377A96060BF12A
A1B525CD9FA741FE051DD54A32BECD55A868DD63119A4370F8322CCBEC889BC2
A723CB4015FC4AA90AE873EA14DE13382CA9CF0D8DFB65F0ABEDFD9A64BB3F4D
731E2E1C9A1789228FF44116230A70C339C9819676022AB31B5C9C589AE9094B
09882051AD4637C1710D93E8DD117B4E7B478493B91EA6306FDB3FA6D738AAB1
49FBB21A00AC2A999C21445DE3177F21D8B6AAB33869C882613EA6B5EC56476B
5634181ECBF03BFEDB57F079EACE3B334F6F384BDF9D70AEBD592C8ECF21378B
54A8B5DBF7CB9282E16AA517E14843909339B5E7C55B038BF3BB493F3B884A1C
C25F9E8FB912CBE23199AD9D2C3E573727701BA301526C66C3617B9514D6F11F
11930B1D97C17816C85B1BFD9B973A191B33CC3B391815AD14F1CBE935942AEC
D4004E6BEF379066FD72209DC88D2E634E79BCC2B98C766CBD92C561F2703F8A
109E6C6CEC7B866F2FC7ADF646BF492E520319F3B949AB5D84AE990B33344A40
3971F58DFDF8D8D67FA0B8F2A0D884F8C09A5A721319B911DBA0A35903877343
C37BC36C5EB32353272D1E6ED5FCA611BE319A7E1E842CB7576E7B1B38ED6617
88B788365E7B2B5DBD538BD97E117E2ABC44C9C3601FBCE00465AF234E8BDFF4
79CBCB735E4EDBDB0E5CE0B06B6CFE66F68FD8158E5D20BEDDE1B979B339D562
E4268A0BEF60453E91ED21A18F3C0C675A33CCE8B474808C5D8B0FFB45607CCA
58630E921ECD16F91FD5BC60C159B17CA3A302851B8EE339BB2E964EEDDB3786
602DAFAAD6B6BAF1E8D1B98D500DE3C8A8C780B6159417447115A504D3FB61E6
0F585DA5C69199EA72796DC23CAA69964E23AE701947807A1F38F359CAF07516
659483B3002739E1CCD3D61FD0F9F3A335A70BAB3C6464BFADD401331EED8CF6
11B1D3154E0A5CE1018B3E1732F3B6302105571354A79E295FEAB25F46E20C11
85114248355BB97C6895F761A2836C31B6780DFA3DB5159BC91CBF5DF7303C8B
D50C9F5E92F7FA0AB297AEB1C61D6A4D7C2CD7399DDF1C719ABA590C5662F91F
708022B2D385E856E47F15C059E6CC2E54C9E367541DE35133732E0A21AB6E5E
C470A42CC0752B55242010B8C1866FF161358C7C819319F1CC31B938642EB321
C2BA5AD5FD8782768609BA0E66FF742DDB50BDBC3F43F57230D3E5CD250626A4
50A008B7B373A057C3E1C4D44E241A48865EBE339E6F9B6569727D8AA14EA739
03FFFC7A780E18A494C7C4983988B1E5FDA7632E6DF6CD72ACE4AC76C5F3EA92
AE89A239FBAF6224B59D405D5BBD06204A088090D20BD1E45A36F679367E1572
AF9C61C4FF391D8AF63192E1AAC8EA6C4C70C63605C86F459BB6B287FCE718F8
6E81FACEC264FD99E21F8D88BCD88EB7944DEC5A7BC026474DA433AE40CC391D
F07EF2C12B91CD393413C7D90AA1B9F10E9804F356D7D7C4069DD2F6C573B70F
E063F5E13DBD9C284771DA14C71042AAB9469F9B9ECEEB11931A4F13FDBEB4B0
DF1D75F31BC2FBFE971B1ABF136ABB9359369EDBA4BAEC02567923691A0AC59B
19865A3C7C1898943FADC22B326274B75C3288BEEEDD604A7397E185D27C843A
A41FF221CF1004E42AFD26A2C3B84B06BDD1F1666688CDF4017029CEE387A749
8AAFAB77B118BC6301233C12E6D6D835DFA8DF3ADC17A72C59A2BD3787DAC463
A502C60CE8C94A2F248C2A6CD08B4AA777F4AFC003C3071CB9B2E68434F70921
6C2B5EABC7A3D77E6234C5C2A5C7952007395A5D1C4EA26F470FB8253FE50869
19DE121168A397BFBC5660FE249E11C3CA3E185FA0C95EAF95DFBF444B970AE3
F2FA99A23A2246687A9304C34ED03EA58707840CEE376408AA6CD07D99ECC934
887BE006BCDF464EA3312259DD4D3B78F89C5065231BE6A05E27A6CE461B79EA
657DAED9378F732791E3A269D91991C706AABC2DBE04CBC47638746DA8852C7A
C72242E0653D004BF878FD3B7F179F3695EC06CA8C8AC92F26FE0B34ACB368AE
997B51F69A6369B30586B18958D6AD76CD6D1A5C3F554F321F31F38677207C15
E9FB842171C1B58B34D4514827EEE878DE30A5475413607320927415983C2C9E
1CB18817AAABFD93A9F063CB749646D8606D5722E95CD8AFEAC73FD68EA3494C
8F936C6A199EF4E62752AF190C5A324C539FBC930C8A15AD97EAF7B5DB2F6AFB
0BAEF21237909471936460F8178F91603CB0F5E746DF1623D6E16C6D87B3A272
A1C36F3F1127F81AE643571F922E040AF7DF1F7FB2293C4972994D773057A4A9
A752DCE2B606DD50710CB32A63DC0B265FDD32935CB2743EBF4FAF1CE4EFD3C0
A7A735E5E19D1F8E8D63975FD185DEB49B0E4F8E4C30E50387D245EFA0EC7D2E
AEBA4369B32B413C84B3AF4AEB4E04E63E6C2DE93EB12B5D23BCD887C53A3EF6
A19BE4E8A65654FCDCCB826E2ABBB2FCF7A4DEB5263CFF7992A8B1DBF2581031
42DCC81E8A9D7C36EF4614B16C80ABBC06116CF1F90A8489F43FDC25C746A25C
853663E15EBEFB2AD166914AE1A133D7FF784BBA3DF637F812A8157AB3512A6D
BBCDC17597901ED14BF2E609876BF9A4E9255C8FF355D9A4CD35E4AC1088462E
A70CC225D6C0E9E8E5177E4C22CF4077E28EE09535FCC5E0ECC72E00B29D6BC2
AB8BB8F5FF4AB169292ECFC1CCC6B2B69D676E7D7A691BF5DF54280AD5065404
B31787FDB575B97ADC585C0B0444A931289D16AAF60E79DDDD52AE41B8457B92
6BD7532DDBA4640DB1E96899BE893E32460FF9CF1628E6E145E62E3208841BFE
E39FB37A643620A3B099DBB415A752C16313DB0D187072D2F90781832339D704
2A9EE21C5EBD43655C5E478D5ACD09227391EECFE8D3F73D65191F1C11F7AAD8
0285E1E8AFE2363C46F87EED8060C15E766E259C740043C40EAB400A14A1AC26
0972852EC18ABFFF9477913A766946C2FB233FF324F7F75702FA27579C0F0B31
EC5B4148400E24C09C93893B9D410B507B8022F5FB093D44F09111CAA8306EF2
8CE12F10879819E0964ACD601299D137B49E75C066554332BDEB30EEC7A67205
4EE6220480B96F499E812679644D3556FDF4239C43D164EBEE87C54865891E84
667C920EE342EFBA35440C1A2EE93FBA5D36D4D5DAC850AC7EB0F5938655DBA7
09C7E493D7F17CBD881F9B29797A6E0A1FB39EC1B1EDD8C0AC821F559D7981B5
4D10A021741017ADCC7979DEBE76193BB5DD29D6BBCC9344D3EB7392A28E6FDB
90363FAC8008A2CA11F7DEC99FD03F95539BD1DAD38149B35DEB76B254D7E9C7
603C6DD1FF9162D470082FDA09D64DB855574032C885E5536E0C76659F524416
06FE5DA5017840B0D624F051031441694B81E2AC3D350EAB784D1AE985676B6C
D875D0D8F20A4A01D351F62BE7E8D318D83B14471D0B6F8EEAB74D12C18F8FA7
C36E95A4F3B2DE843A192DF709D00B06A3212CB10A29F30F53693833D261A4DD
13846DD4B771462A3CC3EA4AA1BE47A7CBCFF66E13CC959B0E9DB5D6C79EC19B
2CBA3FF9007F7771C3112CC19635F41BA72989F43755141B54C1B9D6192B933B
191D6B816FA0694D43563E32104317B4A5DA823710CFBED577CA3C3AFFF49827
BE9DA63F7B5B9AE0FA54EB2A5DFBBE748C451F9CB129533EEF95DEC6008F8F98
931A3B5BC9F037B797FD800F33FFACBB9180C8A051946857A206E15B1BFE331B
A296B365D51BDE2B174F5FCB429DC14E53595A1AAAFF10526E4BB9AAEEF3D847
A8F83D30BD8B6C8D98794B0637D32299BEDC95D858F3937E11F15AD30D48659C
41A43ABEC0534FF0D20F04367F10383485976AA110C10F81687B3B58C08C45FE
77866C00C288FCBB7438D9A11636562730AF35D74AFC28953254FA75E572117B
BD628572139B72982E57418A52D1288325AE398CC8EDBE651D36D2978CFA978D
00454D6D2D73135A01FCA499D941E9C40774BF1B8F1E93CD79288A06FE17ED8D
59AFA26A7BAA772B7E6D51A7AF6810573E0BC842F972DA6AFB09A501283CE2F7
AF55B5FC2CAFA59F5020F1F4E4BD6A9FA9CBC672DAA8AC6B498CD8FB7EFAF38F
6C6334F6B825A48D7E1EC0B1065F5B04033A1C82C305B0BC82EBB7AE6C08E540
ECB1761AC1C7328BBC903D663655290E06D9E8CC44D6611D8107B0253E109F9D
EAB1A81E736530843471A8930AE9605C92A3002F8EE06FCDC7E8BFC1C606DE15
6C9E6138B7557251B83D05CEC0C3F2FF28157FAE18EC481A60FE5D2B5E5713A9
D46DEE0BE5EFD50F46A1E3AAD1A10C48BE1CE776FFCBDD2E77A10A760DB65854
B4283A15F1FDB0122B071F2D014D1DA3DAC65DD459C737A962DCF0C4CE6753B2
344A8964BE9DA4D4A56E58068F5D5E6C616FF4E0B84C0EB2BFB0240FF7870CFF
358EF7F2C54A1E4DA7C32AB5717CE2817CA40BE2113ACD38A0BD9A819970CFF5
6FCBCE65449178D49D95CB81EB8FA75EB4C569ABE7F1EF86488E16432619B372
DA6AEC785C7EF862777F893949E7C0823C919875A00F1C8F0E107974D558A887
CA4D9A2970A5C9DF9D83B7A7D16CDDB6037F3CFA1CC851BC700DC490BC843E1E
EAA37B02D04FB3B052FACC8359849A554F8DDD420B09E1D640471EFC55A025E1
6D1E0B71130D196AF286F399DAC5F34B145E76BDEDDFE4BB7005FA23AA534C89
B473D63A0B7F3C78A5242064A21FB6404596B157EE4338EF8BEC5DEC3976B903
4D32F0861AC11080D22B0DE1F2A229D598A0D359CE02D45566321629F4E2676A
7ED90901D12B5DC66B57D220A1709EFA8CC09AF417756F7496C4BC7B3AB48CFD
D6BF0739F1540F90E54123E332544F92224C287F3B3E40240D43EE36775462F6
B5748A05367A3F6B2AA3F6AB18B1CDB48155AF171A975CD1906F9814195758CE
99ABBD8A7636C91C8765C04171E18BF963E0E7F0779F2BC1F77722907AD6A243
B1A057E4FB4C45C01AB2C9777854F77ADD8094F4085A0E1DDDA769BBE2CD582F
4F35B07BF6F84366FB58EBC151CCDF4F976CC869FCB9F6F9BD0572059087EE2E
8F09B8395B2213D9CB30FD644DE04B44996144BB20E16D9E757224A1E1328769
00633D47BEE8A1E3EEE75A2BDAFA1FED4C36E86ADE54F3ECC7C25409A8A8A214
C08C291201A892301D21073286EFE4C15A21AA004AF5DB9BE1F33C9CEACEC534
9165468A049B23776AA7D8E03F9599A867F209A6EC1B7CA465FDCD1C523C8587
E4FF737DD529AB503B3EB19657EF8BF1D438D6048B50461D73047B8BC1DB1A95
9C33C447CE8DC1E6C603FC4CAA0C7508A394183CD2414655AC2087FE580E08E2
1F3F6A4A7336010F5476AA121603E7BEE2B34BD1124C668CB362CBC348D83FF5
622607FDA9B1CB1C43ABF0BC21E1F35D40658CAA2CE1D71B577CA4AF5ADC315C
C695D65285B4CF78540B95EF990894887D282C90C976FCCF605C6F5BB5C1C1AE
E47FD1CD712FA3BEB25A5A362FE9E70F75A6FABF922B30F9AD724A9B69BF2A4F
26A677287B7DF500DA65CA741939F7EDAA6B4709DE81ED06680CA30E1CC8535E
E09FC2919C3093A18BA53675A25F2B3D440C6B2FE4B51136750716F403540EB2
15F7D264AA87D30282497D2AAC350D69BC8657212A3C3906B3769E7F22A0B7E2
A7CB662C15E21E9A9ECA3DBB7E22F813939D80D7B664BECD194F58F44CF2B6D5
FE1390830A90E97F51E54E6B105A5D6AD1CFADAD61AA955A2F53A5C4873DD639
6B6CE641BD05232EB6B56A6BB4DF19066FEB67430DCF853531136820B2C5F379
A3D0172A87A08F8E95D1DBE14FE99E241FE7BBB5B5B8549AC498E094C469E647
83CD0ED5C362976989D9CAD5E31BF43D4F1141FD83267F634DD33B72209FC972
5986CAD28BC3E1538A7180409A9C479A2581BCA358377DEFE3E765ACE729B17E
10EFB39168FD71CAD22FDCF9F32FD3C26314EE37C55E4DF9A17B72E562D68A5D
5EFEE5F23117BD85D28EDDCDDD0DDA5EC73B956CA7EBE298C0D504D3B8038BEE
8DD9BA694CFE566289B8E859A5496D22D1965413D81CF1CA096E2ECCAECD0755
6B66B00132272A163DC06ADE59158ADC24C06D3345541BCCE865EEF003DA1060
789F72A5C597B3489FBF5000C0D2C52CB25449123B7E3B3C0295B6C714B6F42A
61B3B69F3EAA2F504BD8970D32DA546B93C18CF3C98876B636164228B3BF9A1C
04D000D341FABE7D47F9433CE2A93415C4917B5AFAEC7D33629A9BA5E858E248
B7353D7A650C03FD46646EB2730F643AB3E60BFC3D4DEFC23D3505A855C519E5
7B8835FB723CA8BB32F9777B8E50996E13CEE4F759EAD8E02475CC53FB772E98
652D1B6929ECBD62826BA411A2E1F24D007056B820D9CB3E343BF73CC18E9892
1FE9463C3C77F8B9AD84E02964C513F6BFD57C81BA829DA41AA33D8FE50C9E05
8EB436A6AC44FBDC58E2F6CA818A3AC015B952C8BDB9E10C12FAA8ED346BB62F
DBCC5563A1FF4BEBDF75B5306DC1440ADE7D72D9FA78CB4AB0BF35729574F2C2
0246117008AE826FBEF03506D7FE8F79ADF9D48C09E2D6705D02B4E3E0EFC7E7
6C1F8EFCAAE88DED854298C9F0A066CCCED7D07FD67414F01484E5B10F545729
D1C9A0759F89C308644C88D676170BEF21807152E8F1562BDE30CBCDF0295171
8A7501FA6E1B27FE8EDF49B3174DCAC38180E0CE809E15AB99318B769E8561C3
925E3A2C7D92BF7476D1C5892E36CF48AA50850753FC406B437989094C5E7D37
B93070383C27A2477DA5A519B2F07B36A5605C7779D06CF9314CB142BA4DDD52
E853D9DF9B8C17E2CD128F2BEFA604812BB2BDECDFAB2A7D5B76FE6FC7A4852B
B1625AAD5C85CEE4893B691BFD63AA62F832D4B558A53363142167ED0413B6A7
BE59BE9BB93681CA1A336FE4C3CF08BF5026F266D1F2F89E8577DBAEB890CB8A
5295599F4C88BABE987054BC834F4A4A8552F2B7CA3B199C868E8DAE4A2A6254
6935F0BC879AAB9FF2B78FB8302C1FCD0222361522FA1E8BFAB0F9B534C3367D
359C1215BC7B6A61B47241E7E1E3EFA068246F5B5DD5B3D691473700E4C91681
FE45FA96875F1EBEC3D592B4894C15EAEC7556CB719586C2B983AF879B13F22A
D8F95503EC8BD60E3025698668138F0A459BCA2EC06AFCD121FF55B5A37507A5
D61690CD9D69DBC6D1FA6CDB50DBB893F7CFC67376FF1D4907DF645B0A042697
75B9B98589FF61A1457F3F5ABDC1E022EB7741DEA10677F12C5E4D01FC4C2865
920C35B1CCC60AF02B8FABB6AF21FE2FADF6FB324BB1AD1AA1C19363811A184E
F5ECC37C0E5E7364E0B79E35A095E62C6D2B668DA0423CB28A65D9DA3EE63CEE
6DBA6FBD10F3F7C40B6644A6BFE23079DB7BF5E97322E5E66E30FD9FDA1C45FE
4C974C6171BAD84971B3E64E451FC73919223AC42E1377F0818556629BFDD904
79E463DAD7BA27CB2DAD48BB11E274DA2D77F726936DB050D58FC824379B5C48
21D072522657C366646AC9DF2D45BCB4E081FA4FE03A0D2EDADE101CBD159302
16722DDD91F4975718095D0C22BC7BF27CB5F0F224419E2998A7B187C229DD1A
E7D8D2201D64E7DD768317F37F2EA2E26B8ECB46065B09E49FF0D9A6FB28BE0E
B5355B4F1299B19089C6B996063DD6B420467F6D8F90D6627944340CF6060BE0
165C560351B0A925CBDC5E6331023A4A652126D6D5AFAAA4805F5E0DDA895319
E19352A578108A98EC866E05BCD9F67AF6D5ACFBCFEDDE464E77D9F25C9CEDB4
6343DA57D5A4114EB4164E9FC8CEABAA9F343116C49927058B10E95EFAA19D11
50F64DB9C1A4E6746E37AF7F92A96BB9369779A25925AC53CE9932CC26BF57BF
78BEE9BD5F9B11C0838D610591D15598354D473E90EB17B847BDBD59F26825F6
73A892DC4872487EE68BF825E2C22B6369195ECEF959537D01E79A68367305B2
75FF39704B2744C212B81104B6C91AC97F829445ED18DC92810B43F6405B6695
ACB7CAD0A34A9D1F10E6B3290FE1302B397FA06D1D55B6E94877FFD57169CF13
E29A206B43A011772CF11CCF5B39440D3F3BB719E36BFFD72C6B7764019344C7
475551117FA70591DBC5A1D8A34BEF7491E5CCED6E126573EB13E126FB9F5E6D
8136C9ABA019A9028F60B8C09DCB8F1B86B8CC4A8DA880B545F751C48F39101A
5C2B258AB21FB9ADB2A1A1F148BC9A178154140E127D42C34C4A7F3655EC1C3B
AC939B90D34A795582FF081D73031DABEA7B8010E4CFF31506771FBB348B6391
C13FBC70A957CCD9656B76EBC0EA7F14557EDEB744C6A047B96372CAF8EBB1E8
7AFA33394F7BC0B01A9D33F53081D1D39967684389BBBC07FA8C9E33FB2B40DD
914E1F827B11508260E4AD4583B2C1B30DCB7C143E37E212FF8666ED7CB0517A
70C981284406D44BFCCC0A3843D1746E36B1C8D1A5D74BD05626C167D3BF39C8
4EB58B566D4B06DDA6DC26BEEF53B4899D583A1F501D30FBA5CB3B2F1EE2F7AD
AD9B5E17D4257753D28681DBC00822DD74A1A4E3E2C480A2C503831DE2C53D77
1C84367CCC0EB8A5E618B04DF034704A4CCE629805BBEE09EF1EDB3BE0FE0F6C
0353B16C26467E05AAED5436247966BBCA68FD3655B7C49A13A257ADDFAB887C
F68C457A59504AD749398462AD71AE12BAC7778BA76712DA0FFEC316929508CC
68420A9BCB25F6943D1C1AEEBEE8C3D5130021BE70C64BB5251BB4FB8F85AA69
54E122DC7E7CD7DAADD264B3FA147F1CEAD6CEDB9BA80992C14A8073B0A3816B
F4B6980500965489AACCB09F8C8BB9B70554BFB9885A703BE363B297C59F45B2
74CC4B0DA3BA7000D53FE72BCC486287600FBA30A21A01E5494F4E3852EA5461
3C29CC9CF1C808FB4E480735AA27968BA09A16A52073BBFFA59E4CBD8829AEC2
04C35083ED9F4EEB3A82BEA6E0994D71FBEE862BBE1D7FA8324EBE5C02E9E697
8216B6425C4D60AD2351ABAFC486E63BF7736420E216531D6FBAAF016E7E33E3
DE2A9FB6CB6A37440C3B608B5E8D45C2C8B5DD4427F28C69C3D35AE6397C7B9A
CAB5BFF9A1D970D883B9C45D8A9D5F63EA00C6C376822289847627E76088F66A
1CAE5C877A8C0774911D0AEFA51C463B8D202794B3C460493F38E31000089A5E
C015B5DE3333B5C15B51E58043AB1499F7688693EF9DD5639E493FBB92036352
0D1E4FE2F999C36C18A1327891200A346D815E3108E63B29772B665958132E0B
142BC725837F7DE496227D97DB65840D672871BE33507E0BD69986B488268E37
20E1C257B183F0903239CCB18277CBCE3F81EA58C005C19284525CE8AC09B481
37970448BD7878C5B1E5E9BC217DB46017B16ED6337AA322AFC766B5CEE2FE55
09FDA096C0D1CAF9CE6BE0A7ADEA358E835C67952CA0B982D5C91A98147FE946
E63B4F29F8A4BB938C68D47FDCCB11B91492A0413369DFBF0A85ACF42FB41B0E
76F7429C6B2B8FE7123BD4D0405CC379AA0FACEA8BA4C22F8042BB4BA4168241
01A1CB5DCBA221CBE679B0AE1DEAC5374F6A043C88BE6820A0502B59EFBE984B
B9C29024A57556AA63C3454C964E86A5892AC45F417D7E5277C4F4321632FF54
C92983067C386661C80F5985880E6AC66DF62A9CD8BD874A45A07149A7D6437F
B4B6B6AFC2AAF10B93BE06831AFB9F990DD4732CDAB1F49A251714C4B14709A6
53C036A29D5703813C9D8402C5B45637C605283B9E5C77E7449411C9F5D3DB8F
3D95CED329A025777D79E31F50CE4649DFFE8D747E308B182E66DA43432CCAA1
62B4428248315842E73BECE6BFC8BD4D4AF92F43B3463AD16F6271280A2A4775
6FA9DFFCC29EF5E014AD26E80541F2E7468DE454532AA01559E3046225A2A290
F8BE5D11CFD4037D25D5E922F301F4BA81BFB44206DB37146CDF36A8002149BC
F70EE56D3A973544FAC8329EAD1E0F6E9AE9FE390FD15475DE3F966821AA352A
D049862C21F686EE577F82E5EDC50725687AAFBD0448D08E8E944040092F9A1A
A0FF4871A898C4FE2DCB5E5755609507E1BE86D3608CBC283426556F69A351DE
892BD936DD6CB579F8118AF239F136788B62E71BAF0BA90D77AED4993927560C
C6A85489597CF854F8CC34541F7976A8B10546E893A40132B0E8AD7465A9B02E
C1E07AB02D9D342937B469BB0D25093CFA86AD51CF9079B35FEA5E8B4162DD6E
F8E9F6C74D3953987A8662EE39C553FB4114F0801C2BF7F113D0E7CAEF59AF9C
07584FBA18B7C291C784C50000E82E126200DDB3F8BF04B1A8EF1F26AA8F15E1
22967D64877A4BF5A87E6BA4DEAAABF471CACE764C012F02D1CEFFAC9F3B0755
C0AFE0268CFD527BFB8ECDE394F47E495953CA7EC05F042CD8BC17BFE8FA17BB
52294F340FD1D1FA187AFF6596A79E9205146B7B5A45A8D9E4C9284E2DF8AA12
00C0575A0672CBCE50668D6EFEB1E8C69A7AF1ABD1A44AF7EFE7A6A6ACF153BC
D0F71E0C388DAAF8E977C07C706C9B4F74C7F44E54D33A4E6B608D8C195A941B
F5FEC96C193B86D3D3A6CE005068CA5FB10FC4E013B6E754351ECABFD45DE99F
35D4D1A7771FBE13F226043C8AA339AF55423BFEAC8EE9857A8D440D532BD543
EF15C63B8C40DF8C2A4E9EE1C59E18584BFBA5558FB4EBEEF11341732D3C70AC
974029E3CDDEC71ADA79C7C2B07A546F0AA7DF30747760649C7CF300AAA1295E
F1C272274C1B95450C4E7505C3EF50F51BC9E025866152AB8C1BBAFE8DD602D7
1B8E8815B6B017EF77B894A53A1C055E0969E739D970280AB8FFC8594B86FA4D
6692C5A0693FAD452AF7A3068000CF05C1AB388FEF764B9934A9B208BE8D4260
6BFE283DB3946F849A9D19C5A9E2228DC3EE2BD045EE46C01527624ABD63F74B
7F04A89E92FB59ACAB47B86F85732563F8D56303841CB5D760129B6CD16AE277
CE39E61C480424B73686CCE4924D59E5C05CF54EEDFC96FF41E3D6DEDA859EB8
7490D11942CA64773F85006244B2A36DB08442A91DE9BBB6D7849163583E151D
B47556B3FC2070BB4B3A690FC416AE74461952E09D275DC73EED0FCCE7A36068
C0CCDDC90FFEB76CD9A39BF63133A1645261C8726D43263D4673AC44F681CFEB
5E7468F729E59400C1093A1790806C47D9DAFFC0D4A5B4F16BDF132EB20FA637
03A6343D57E4F376184ECDE1C6D2AA2013FCB5D6DCDE1041685AB167F7CFD3CF
4DBB4656502D9BB64B10B2C9D78B9EF107EF94C6616E623B2404213091070095
9DAC43B322AE4B881D617116C16B4C1CF041E18C25326E29EBB6C400F19E2CBB
EA6CA3C75B39DA4F51299AF8F650EF3FB7862829801E159F927DD07F9CBBCCE2
47CF132856C595636A44CB110A1E0A215D95C49FAD48FDBD5AB9722B041AAF49
B6DA30D9CF30CAB148E192B8B3811058B09B356C375976A4B2905747EE8CEAB6
E9D68D339D164ACC6CBC373807D9C0331DFA14E7A70BFBE0563BA7158133C1F6
1CDE815C0120C270BFD12D773CC25B3F4CE4381B15C0EC37627CF48420DA3863
B63E5DDA30D1841BF6BD5DD1B98ACA7B0012DD3559C876A0EC0228C0C1A0C905
055E12703C957A1D7FE61140D669E8DDB52B246646C25F0E8526E632877109C0
B3E19E7BF32760C4C998E0FBD7F2A6B10CEB370625232E2CF87F498C5ED1C186
1B55C95C75D80CE5D0D36B45FFF3AE34B8C250699B442064F1B5CDC01FCAE968
FFD0BE8F15899B89BD025BEA75E2D6EE3E5DCC1E842F7E7824DEEE13E71E0EB7
55C477A9EE47E716D56192ADAB826FE7570F5E07B035CE23F4DDC7C08615033F
AEACBAA95A44CE13B30D8A01A75F1AAF4FDFA1C7AE6F72D0D98BBF285E9B0C14
8F5CCB5BC2CE63A4F107F10F86BF19C59D8F932C00AF98D6EBF672121F2AC57C
F0E17D83EC37E81809ADC026A71A2E98CEAE109E73DD44F3F29D2453CC9EC671
1AE7577F32EA5A9EACA5B0D4C2547194393A80ABD428145CFE85FA3C18250F32
CBE1386772497202B0ECC0B40DC2AF0C8C06A03DEA238A79A8F84FD0D4027254
0DABE0130665692B9BADFA80EC532FE95D5E83C1DAA93796802139672AFA58AF
D11DECDACA3C2A36A8ACBE7DCCD905B01D73EB91E3F902BAB1791922BD69C89F
C1653BEF14B64BF1F83030C67350F5C67183E9D5F1CF8A28119087C134BF63A5
7DA20B985EC63E105EA88674F4A63BCD9229CAEF4F18198347EB420D28B593F0
C13CBB14F736F84958A4989DB1D1B092BFD748386D1EE5938B94B33CA7057627
DB18C57A683E5A3624C3B245616041BC3EDA4650CD819C360AA4B481A00B11B5
5AAC5950E455B8A6828EA8824C0D06A2D7017D3304EB69DE666285F2427901C4
61BEBF54C494856AB1D09B91CBFAAC02D95F2C4F88077E16BF838E6AEAF4A6DC
8B1C608FB0AB8518D72688C4F8BE7FB7FB6D9E17F4AB5C7A9A4932D7283CB44E
16A048E125EF484972BC76292492BA0ADC08277C1B590EF6ECC0657DBEBF4314
2B24BD0CC59EFE450D0D8C7F5B9A9B2CA44F247A5669A5B55BF0B8E424DBF226
0575ED744E20A8612083AB450615CBEB52FBAADE280B153C5EFCE8188E24668B
EFB398ACE3C3501260A3D10A154EC355299492226BD826C85EFB995299397A9A
B2A5AF4FDA8438407EBECADA2629006A6492DF5772D93CDBAA1B1EF9C210E6EB
53EA1795DCEE045C553DC4771CD4F000FCF5673CA422A2AD457FCF43EABB88A9
2A7B5068B4F71805B7570BB4AFA5193974A2736CC76AB79AE5A4AB05D87221D3
79163D49CFFB46F8B3714176D92439EF6F9A960BFA49764C48DE77BD00CB40
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
/UniqueID 5000789 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB638A6C232F
38ADD3B13107AE3C1435E0C7C20C7C67D5FE7B1AE97927FE11E6179AEB2E43A3
8CD628ED975A97602E6B8E819286F2EC2B4A4D0E69993AF8275BA3FA1F1A05C8
54466F9B1A7D0C0B05DF6673EEA31A9BD8E3DBFE2D11AFEBCF52F7D33ECDF5D7
DD4EDC582F616B75F62733DBE52E19B4340B9E2D3341354FE8206423B2EC4FFE
26A1AB032BC46AF591D7A985487775BB1181B149025E583AF7E7952C6E7CC95B
67D191508251FD3DD09B09B91543F5D77FCC5B10E9FB436AD6F0BA2639F363C8
A39907705CB4172605BDF53C382CD52D7511E4DB56BFE1A98D4C446479AB1204
6B99344D71A8DAFC4AE4615453BE04FDE3823986411E98BCB1C4AA67280FF250
4DA815FE1D90BE83058B066B5C8A5508DA8C2B17F8071D96BE7091544B66E804
3FEBA9828BFF3E3B6DC66A81AF79CAF7D8DF4ED4079B26FDDFBAD6EF1B1B2729
25EC2C0FF775D5D701722E43C4637A12B53D96A5C945BF81FAC6219BD5CF4D0E
CFD82352300B386190DAF947B65612FB26D502DB5E10F1254F9590DF49C6D9C1
612C3B8F1FDB066C6A03CCDD6C0B9EC7273ED8F1733DFD44A4F8F8462CD200D5
60A754F6CDCDC183370A181112CC593599C51375E94FF7C97FBCB6ABFBADF30B
2194384820EA02809F67FCD7C11F2CEF339AC87E719C8233605FD9C09300E6F4
5F6A0EEDB7D8A06DFD1E46CFF00162B579021C3758DA5BD5740031D36DEDBDDD
0B67420BCB9B2CBE983CA185D52A8CCB50CB32DF03B49D357D931E99D0E73B5D
AAC1295ACC7EEE174429B9BF95A5DFE831150B6E4FD261A7106163C8A23CCD92
5F48AE8E4F900AB16B8073C5E7F595728D546672AC5182C926301AE7F577BE2B
13ECDD5E5587B4CE178C52F4A30F594D194285B0A064BDED913BFEE2A1A85138
FCE28EBA0C7223C6B5B13C98FDC1655D56C6DC1358BB9B0AEDFDC07BCDEF0849
CA94030B22EE4B910D489F5240CEC5CD2F059A802307B311D7D8CE0F2D860DF1
BEFD2FF2F92D8F2FB6F086BC42F99F0C9D974F387579945FCE0868570CB80C97
F01C3754F0AAC9A4DB34146EA8561CFAC8DC2F61D4B518F49A383DFF55E0E199
B33FA7283408734C1135767F9F00929266CA794C20419359152172E7C59EEE27
4C6FB1D0AE853DB9175F2F98C78EEF5CBA9B3EA6A6CCEE14A03BDC22B90C006D
F6B16D2A49839FE64B9C3AB20653D145C539A30664BD4B9AFB992C1D973AE707
170EADAF221A748EE54592492584E6ED5FCED510C4C572EBDC4E3102916F17D3
ED45DF6BC9911961DA25B6CFC1DEC101D554FCB321DF630B6FF7A168AEFB7E65
972A55989798704D56F270EF277AB610A49FCC323722A405C609DA30AB0A459B
7226BDF817F1BC8F3849CBB5A76898965FCDE23AA627A3484DE553CD76DC4521
88BA2038000E4A6B26F726988B7E9C877FF1A777002EE4B1E7DD8EE9FBA53DE3
107A7D172B5BB10DAE5CB0580DEB8DBA70CE43F696986FAC9BE2F2D5EED7FD87
4FB42A6A6B60526B6A8BA819638358565234BE0D1ACBEF09366C0F0874AC4F5A
16EC87B522266B800AFF9118F4A3A217A5B17C47BD9B96443F99839E88EF1E4D
0BD67D3FD1C14E81003BEEA9E335388EA444A83CB02251353E448EBCDD86
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
/UniqueID 5000828 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C4DD885310A706B320AB25C8D742C6F29953254FA54DAAEE60ED477877D19BC
D28E9AB576B0EA088171FD000B60D73B3C57F754BC07EBC9BF751B7D2B32459D
993861B7C4B0D98C422A11BECEF76F4EFC0ECAEE89723E6CED53E3678D733363
2DF068AEF0FE7DFB57393BDAA439A6A4C396F86032A98009EAE1247B7DE83B3B
E46DF2898598FF5E6CA6953127432A967E4FD41CDD60D6E413059A58FA556EF3
309178B57C16A763CFC9BEEC276944BDEA255789EF4E1ECDE1EA43EEDB955513
F42EDDCF39AE522A1DC2DC523F046EEC4CCAE25792B702C288732F5B13B5CCE7
E8B6A1A1DB86B1EA38883E481BEAB54023EDD9BB94E7780DEEA577ADAA169E66
AB7D8607B409619E79F242CF52E618AC0DAE43317C507CDB27EA8A1472D4E8D9
17E62C98DFB049C78AD15560CE44A39581BD6B555165091C5D41071212A9D51E
6DC3005C821622476DB88946944FBD830DC0293272497557825CF153F8E257E4
1C9A2C1B68E83A7B0134FE419D23CF803DF01FD60556CA87C2D61408B4F2FF86
B59EB4552AE92DD28C48FAE7FC8A7997D434F399EF11EBEBA3D0A82B2004FE23
9020ADABB48FCAA581466A3971F1AE2019096CCB5D075E492349D05823DB23B6
D652E67D31477E0C65819636683431C0AB62C1B0DDA82429A2F79BD92117696D
A2E75B89B754AA0BC2E9B1D7626D139030DDC45B73C95EADD9AAD6BC6CD8DBCC
5403E08ECCC95A7AD50F146482FE622C18DA068BF2D7D2B211E4DF059CAC02C2
9CAE646C1339076335BC39C70185D1BEA2108D3EAD6F51EC55E63631E89705F0
90FC63EAC110A14F5D02F3730099DA18239D35C99A863CB3CC9D7C199EF4768E
A4B780521D6E68248678C9365A39110541E4869AB94493ACF749D41FFEBA72A1
AEBB2426F2C719F61AED9088A5FE829C5D9A17FB6649ABC24C61A7CEAB5B99DF
45573F97DF1B2FB6BFBE5CDCC655859FCA7D8AA167896FACDDFDB40D8BF54A8C
E3295D212BF89F0FC54B36A7C2FAF746BA56C98845FC5490F9686154AD8B0613
F773AF8DA2EE24982A499C8C34050CEEBF7CB258C8389AB96DCBAC8DA3DB3578
75D0932116756BB1C730722626D46819A6E8059CE275C5EA31432B82661071E0
1DDBCA0F033B3F58CFFD03B7C87E4463B9A1549F76CA3EB6012FFF8AB3C7EA7D
5ECB1F1C7B920F700235BD324C8EC77BCE4869916F34EB564D6B380096F4BFBB
9A092BF416B5EC79D69C473B2A58D262C5801EBA90A0BA01D05E7D7228BF4DB8
B55A05D9FCD20FD32FA1F4423D317D67B9DF84DB1FAFBC297E50B220A3C16952
8027D4CA960B710D2900FD09CE344D5FD5186B6205BDF6583B66061CCD18AD75
E621E5AB3791129B7687EECE70D93E829C57FC9883E02ED6BD559C1783BFA7F7
5BC5B589FE8BE57C07B8BDDE0DEEC24B22FC3277081A0D4EFF6D81C89455435D
3BB0944EE85EF9FB957F344CB0F4E4AA29C27008829A55CE1A459B123EFC5052
B8E6C8E36B2B09306117031FBA510E4267846214A8E58CACB014F160767FE5E9
0665C2788E672887EDC080CFA57E76363814268B46CC4CA55E24D24E88D17572
8B06836D16B987345670FF77AFE17BE677267FE68BFB561E2062008DBFBB61A1
5FD0BD01B45542DA60069139B66FDA08FE6AF7157FC703FA5CB75C727B686806
1B9FA20C93373C6684DC540CEA8F12E348C9E7693FB7409F0A73414D3D930BDC
9126FD61B7BB8BFEE47113515E4F73325A08FACFE32814307BBC343FA8DCCB82
DF3C5CBFFF853D90709613235FD3AC42FCE6AE94E3402B2573C8B32B25CD49A1
1A7A637BA32CFF8EACCB26A15798F885313C805DEB59E19305FC6576F68BE61C
2EECC6D8EA61CD648B52420C9664A56F0D6A75E828B6B8664E8B75BCC20E0884
02BDDCF89B8B81F50D23A8330D6244640FF06806CAAC0FAF81E2F5F8D8D4CB5C
18720E501217E85B3647C32416A1170D81BE9B8C3538A43ED8966CA1676DC193
1B2768CFCD6701243ADC9554951B52BB0AC6909FBB0C002E42CB121D6E1CAEA4
A03DBAA839FAC2C4AE830B4A9B6C448AF285954AE0A86D3695ED9DC43F66A398
FBE313E2C94897E32153B106909A56B8C8EAC41245FBB37828DA00FE6B7A4566
B3325BDB6FA396518B8886E6733A7EA1739BAF973276C4BFA97A2BDC4F6C83BE
FAD04D7158265A7341C8A3ACD9A29A36A8B024F6263705C5355E750FB8ED215F
102B7D88CC3FF44A8A578EC0A83F4A34543556ED86CDBAFB5AFA88F3DD02BD2C
EB5D18E106B0015D70E1E4868DFB7C7979DBEABAF931B7563B5227F78FB49C43
B0805C704CAAB1A5EBCCA0B8C9971F4FA76D97CB3B871ABF77E16D79352864F4
4B7D7CF727B990B7B4F9EDAF9A870A0784CA45F4451D5362EF2FDFBEA1E4CB99
3CF7F064E3F42094C95D611C708B85C74390DD7CA9C9634F3EE32147F9C90818
98EE51540EFE73E11932893D2D39DC960CDB8391E4E1E0A638AE2A990B40E3FC
119C8CF9DE42C24D81C9AEE0934DCAF8290A280EB4EBE113B4F98EA4EA8B99DE
8D69BBD4D27A9EBCCE447CA99106684409482041A470B69B7AC843C4AD072A0D
B2F45CA8AF872B1091C161D686C9415D43B18D9A58A0A8A37505A0EBB50B2CAB
233B2706B4E44AD784EE4D74B36BE512A0EBDD04520EEF2709B2D0645EFD786C
FDE59A4CB2D377F913CFAA7A33CEB15E3920FCDFB327CCD16797072F6BFCF3D6
798AC83BCDB0770D89B413E6C6FECA3747587334FA15CF81A28BD73622A48837
245BEC206BE838CFC05035BF8C75A63F0C196C08E821E37E4A819CC66F271C62
DC73BFB228FE4AA115B5AD23C46B893408F7EE181EAF0B3E6799D777F07313F2
8537F5BAB70501C7269AA9552FAA702F4637C3EF2B5A0B07BDE998BCD8CD24CE
86528EFC6C3BFD87977985C3FDEE75D38253219A4FA36CAFCB30D50AC0DEC32F
8F559A1F47D519E64A68893F7FC2A913B77868D210F086069096D089E1FBE4F0
2D26456B129D5D87809C9E044D3A0A5946810B2A2D075A19AF54104861B9A308
8706540615F320BC7852662BDEF0C42E02736302A57EFEF93D752E4F65AFC0A4
8CBAFDF52CD98030A315A0B37D49933E5CC4DC7875ADD17CB1D1E0A934AB7999
80E834C736A1E7B699892FC2EFC975CA531D2D7DD55E8C551669B5582390A927
1EC74E074CEB6C1903638961E6D1DDF2FEEFB2DB6A3748F493DBFD65DCD43790
07E913912D712FB123DD025767D7E3185DB4FA8FA8E15AC4EFC26B471EE7E0B6
A773C79C37747B5A86AB4C758D4C0CDDF3135E4A2F3920F767167F5E43AB47B2
DED92BD2C9E400F81AA7DE883B1CB869EFABF7708AFBD8B01F7725E543D65ED0
42EE9EA22E4774A3631203463B781A641D09E43516726967BF93FBADEC9158A3
ABAFB4602EE39819ED7FE5A6DBED0475E879FE845F4DBC09BAA9B2C5FBF0E47B
4AF0EE6257112E66D012E284427FE2FD182910AD6F5B0FBB700E7D47EB4DBF1B
36EF30B4A4279816532DBF06F21D4C125347135BF2C9C7405244805D1A0EC965
CC1E24AFEDAD2A4B4B6904CDB1B679DD9E80DAF33090ACC2F96BAC186F53253F
422E33B964C155E73143EB97D9BB946D84A9D3494B969AAD3AE1824D96549A2B
A6C33A993FA22CAE1872F20B3AE2DFB1F314853A5C6715756B7826B2A0ECD3CE
394096C2DF6D38E7A37CB52C1A2FCC82FBD58EC8C070F627499E8BDADC15F956
EE52182B98F27DDC59764E6E6E5431007575C1D8EDAFB7579D9745371C238D28
97709E3BDF1578745DCA593AF703682B7C769E005B8C4F6147F47C5A21B1E383
A13C51A422A953139011D460343317B2648A7AA5A304148AA600D31FB2683FBE
37ABF203AE22F74E74A58FC9FA8D36507FAC33C61C7CD0991B610A1AB0F24C67
2B9FDF5AE502F8D113DE51B5C89A1B8A6D80B22F8C9D65D8E200B58E4AAB1AC8
99500A812474DF2B5F4783246BF3D0C8D646DD2DFEA4C259194116A48E7AD3A0
47DF19668916FA7A7E46ADA81444AFFFFF41612259E63905F504775701050CE7
E5C5095DDDF90E77D09CAB0B5BE9FBAFE0623D0E453F14E3477E9A0F6EE546C9
93DD93F666885B9F57B06A0394EE4F6EB6829BAB06739D8E179F9F511173B80E
F0AC62646D83A57AE9B67ADA14748434918778FB556A9CEC1733BFD15ED921FB
B3BC2F854B749BA4E1E92B4E0DEDBFFE057AFCEACF9376DD61450EAA555994CF
E237EAE7366D4ECB056DF73DBAB4B65BD61DE63EB796923DCD43DC6059172146
7A32C7F5359C3E62F81D31B9A8957326E6904DAC9CD8D590B133E74350A7FDA3
0D37D0E53D5A8603C47A5EED2459645B5367E5ECFCFE939C02F4486A3F73F8BF
AC6EBCB6D4A30BB3DFB54B7C052541BA946D81547E59B9B1AEEB4A758E6C3E7A
2AA831D83CC7AF800F077E8AB0738686F30D4776F7579540AF63F408A5C13424
0A9DBFF5390ABC4F9308F59F320EA3CE97820E4920DC849A88F98A2B2C24FE61
FDE9F4C689D91AB11D60A90078969372BD6642EC95AFB6733DDC92D1DA01B5C3
9F1034BE575931EED596776ACB34425D65FDBFAF2A9184495B3361E9363397DA
09D3BC6AD1989169E7905B21F768A3A12BD56B166755A68F6B18EFCB91792F08
D43EDC83D4CB86FAE330908CCB6A92A6709AE96C4B8DDE2AFA8445C22033C138
8B4405BA0CF59D363D13C1070978672E0E29526535C416F31F0B3E006BBF5D30
F89DA974642052332EBD9DBD151F7FA8135C98DD43BA273E313189F6D591D296
55B939D6567840950D0E21B503CBFCE4B6F2276A334236189A17372E92E20CB0
959E5E8AED520957BE6B2D8985301E9B0BFDA67A32F45AC51C210571FE048606
2C689C160136C2C2A794BF3A444A789FB9E14A019E1BE152C0EE14CE14C907A5
4C9C4E31E046B3BE0E562368FD4250D29992339F5C612572A752929B06DFC425
34DF981CFCB44DC34D4C30280A906DD2A1953C172D7BBB473F0AE465D8BE8E47
FE4CA8543FF8B015B2C1EF438BEAE74BB754E7D7E89A488F3DF5038435E839B5
6514A873B71E1AF14FAA59F5EA7BCDB6B0256DFDA3414F04B9C2E3AB9E26DDFB
BB5BDBBD58DF08ED5130181C5B7511EEFDF580E7E41D7F0D5694FEBFDCC8E59F
44C9B210303CE13482330BD75CB01C35B6CB0E19006DE74F2DC13A6F83BEECC6
CC76E4E6B69B6696F7066EA1F862A022A781B5EEFBFC97F53E7636785766879F
44483D2F9612A38F11416978BC6AF966EE14AA878920F71C867CD4AC98091A7C
A27FCBA47DFBFCD62810F30291FCC84724A84918334FC9B88A9F114C01E6AD7F
BF33C6717732D7462915B1A5445F0FCBF2AC4D19016E5ED648E8B6DDE7E02A1C
BDD164F5950F5F066837A7D3E8F8E26B3615A41A36758E3110E94AA425A72898
8754DECA073D9E0D5F6C9458097620462EE57E6836079A9EE3D13FE796BE6B7D
7AA29126606CA45277F80E2B14D93433C71A184727D5BDD480B828DAF5E26186
1454B497762B33E2C3148C9AB65445291008EDF8D4C08F4FF2C93B430D0C79FE
EBF42D6EE44C02833705B882A584C80C30480CAB7199500785E85EB5617E55EA
930F519C3FD3DD12BE3BA18DB8DFF26F7F505C0B145CFF09C1726184B470BB4B
3695B20B48F14D932409C286F7F10B8759EA4E887B02394C518E82C6FBF5CA6E
18D02EE24490C3869AA2037D83AD571F57010C56E1C91E2F1243CA266BC3D243
C250A4EC91F06A0E9009A1AC4B34D25D7FAC630E6032B4E8E33F96FE23A17B17
41FBE5A343253AF4DDF6C3A4FF7AFD3ECE09FF4ABBEDB0E9516F432176025F17
DA1DD7BF442207B13333FC9D2E8803DEBC1D5900FCA83FD865420FB4662CA15F
0B5BFB8BAA1A06DEE1F10E897B2A5711656C30A0514CD5F016FA4B0894775656
98261A7FAFFB79396CBBF92971C0A2F9E792BE0DA8ADCCEF1F21956CBBD13C74
697873B425E710139B70E0A235CF365B0B5B8928643066D00A5EBDE4F6ABFF7E
F80CDE98F1A5D8D1871D910833B58F097BAF8AEE29D1B4AF8ECF7310AD8F0AD7
04DEDA11CCBB5E089FE717C4F4939CAB2BA2587A1213096E57785CE5B3917D39
7483761A7C072E0C8066ED752FB2619BE8A6FA3DFDE48443F4F38F5D60C729FC
32B90E7D0BA9502EFAB2CB97AC05665FF5F31B637FE84BE60B63509C842350CD
6BAD2A49B338081D0F40D14DD8ADD725B20D7E47B75DEC8B6DCD884423B67C59
E6F00874F884BDC7EB6B4DAF0D0B49F6F6EC2A692865CAB182D7392EE7EAF57A
A096C73CBB7D844069F076E72D60081A8522C15287D640FA21F3B4596EFA0944
216234288972BFB08CDE616E8C8A31C9ACB2E5EDBF89BA09859EF6CDB5F5290D
4775C060738A4BEBEE4D1A346FE3FF11CD9E1C33ADEE30A1292F56B93201B8CF
3F1DDC7B532D240C916EDACF128A021A7356C8038CA6DBBC7DEE4A529BEB1B69
F2A3294EB35245BC358E03461250F2C85819A58DEC6ABBC40BCBC7761C74A7F1
479364304602CCBBFD001A14DEEC946FBA9974DCAEA1EC17075FAFB950A816FC
82C25BD06A4E5282EDB7CA63A7188397A61389BF8264BD5A4C10CE54CBF2CAA9
0662D8B787B7231561C12EBB536B988F06E1DF48BA9388E9121AEC410A881B59
EA238C59D40B68AA3256E289903C7BA8EDD8A685BA6596B4310D7DF80E93DD86
6787A8112F1E8E68FD2158DE5F5044C6A490B81E4FD8D5412EF3B26F617C56C0
8DBD6AFA3CCBDE9D86E716E927AAE26ABA9772261AFBC64EB5E860FF49B8CBB9
9A3B749A16987CE9D77A7037F7B3D3DB27F0FD37085B695BDCB5D5EC1A940CAE
1B3C907B70242CD0ECA0911C706353634DD67D7D4D95CADB5FF5CB744A7D18D7
C1EA74BC15FFC824BC336FB6158BBE41B4880C739F21A00F7C9592C3DEEC8D02
64FBBBCD301581F014D60251DF1F1324066C2E300D7377D9CA41243397FC06B8
DC63E3E61840B6A8290C306C229A734D542F460642ED14CE1EBE0C6ED5D890C3
A03717971032DA4DDC7A306D3B59051A89B1E09C72B8595D773EC7C42CB68388
C8296FCB8D9DB25386FD42EB89F27FC3D0466BCB0D067F05FBB44C753B3B5DE7
2F29D5831319598C39614F4E0E2593DA35E37483E1C410A0F438ED4886E961FA
FF6155DD0F8A1834ECAC5F95611C03BF55299BC6CE002112F5D32CE50C1C7DA7
53B9D7506DDD240BF5414113FAD32E5DADEBF542F0E6BA763A93A13102D5081D
AC0C6D160BFF878765C8CDE250300A6FDB9A85B697B113EE9C046A5D2B3D61F5
69CE48FC6329E26CADC42D455955CCB1B38AC2F617FB823D51362ACCB33E4B18
C3F31A86867930A47BF96A5C3044DE783AA5D6DCCEB7D418DD0AFE8B6396F181
666D43197A0CC075C96EB534BAB957EC81211640D7413D1AC800C6F3BBFD4DFC
E985864B72316E4FB4FD1048938413C5DB0B74EC682BD0D68E9E1EAA10BAECC2
847846E9E7537496420FE4BFB756D22CEBBD3AB7D8FDA3D5F0C40CDEBED070B1
C13099211982DFBED6A2BEE3C38C2458BE58E8D158436AE2AF2EB5421DA3F136
78309AFBAB1293F0F97ECEF734A7DF9CBF92CE3EA4BDA98B151639C43FEED49B
0D753D6933E670A41B90C809ECDD478FFDA03868D3839D646CC6F1357124F010
1C66CF970BA70362FE1D9FA8FE74E044DC2EED4D3C18DE454C2ADE2D5167D7C8
CE7D18F76415B3B95658B1A41D556DECF1922DD17B90822E6EC1D10DFB06B33F
471CFA79CF6ACBABD1EA76DFEE78011E22FBBAF29D1C77FAD8433739C6389571
36D03DEC11780748909E7F7D0EE8AC7D2470D8F1B1648C1A52F704BB777ECE44
27FD887B20F307876F2DADD2D4DC28A2D17DC8E51C5367D4E0C6EB4C1DCDC22C
B8BF9CCDCFDCA833732D228E692C2CAB03A47BE32B04E537AF1127F733137E69
79F4EED95FB1C4D528EB35EF7FDD2E087DADD8B1CEACBC05F337B72B4D84D916
844ABF183C2FB4EC9987AE1D3432C8393FE7B624680DD5113277483024042814
F58A21AACB22367336B9F55686D5DF0BEE1F4192E5248BB87EC4EFA9E7A4361A
F5609EFE1A8198BCE5C892B0267D9A744B0B2395790B972D66B135C3B1482113
2198651216849AEFFD486F9F8AA080E999B57E79E468B2AAA276515D282A11E3
A0A3AD4506CFA29BF45800C23773460A3120255D7050B6A3E6D1B26146F833B9
DE7D9ECB651E705E7D960DC48A56C0B1E81323279822318E57E2D27AA00AF7B0
1AB5F93166491FDC73266CDEE04A8E8AB5E48C589509EB6FE0D29711B65FEC04
27DBC312B1313AEDB6833CF57544AFE14FA7B9DB70BD43EF53A88604E4BBBCE2
997ADF98901D1C765DE1C99B8B3EB8C93CBC46109ADB9ECAFFCB75C05FDCB4B3
B07FEC85E2BE4B0AF3EC049E3A87B03FF100F7C9133CD6DBF430F73EDAFCEFB9
F033CE768BFE9944E2E61CFD93F5CBCA8E19714445359127DC3266E1835CF620
ACFE9A0576D9FDD4244DF29798C6C84CAAC4365ED72B43200D85074B9598175F
9C1106800DFA85B9EF01F834D9462EA3D872032A4587BB080DB8B6AC7CE41047
F91862350DC7AF2271E3D02A75C2D2951F9F95FC3C184FB7FD1561CB4C37ED3C
26E2DAD6A49FDCA2365EF751124B13C7F37A1B8C4C6AC40658C8BA291720A191
5DFC88628620BBEDC6BF961ED48CF4AEDD438EA5A979800A91239651E17801B3
4C7DD07A28C6D34C15EE53791B3E9ADC90F2D33C27521DAFDDDA7EE4391EB5C1
98C74711962885453BF6C7BF90F65F0959F1CC59B5B04D823458A83BF6CBCB73
5CDA271D85F3EE313BA584C7B268C7E547790A24282A01D271258DB8397E0726
176EDF836BE3202D49C637C1EC6095FD194CBA00072E7E28043DF29F22DA15D5
4EDE5D10725A3D4ED7B7E74DBB165BFCE7362B6019247D29BBEF931A3AA18355
CF9C8616A0802070A4C99D465DE27727058882DAA535C46359AAA119D1C7FE5B
F211C3A524C28ADEA4FAE4B6B250EEE7CF273DAEBFB123774D57B1DE11EE57F4
8C5027DA02EBE6C71635AC022E2860D5EF7900A4347D6D9BD4C0781CEE393F63
D74612875D23D036314DC07EBECA24FDD525B39AF019ECD4476C21F0201CAAB8
D59A6D61A800CF3C20700CB550DB8350E99D819658E7593460AB2E5B8899B707
F6B7AEF1F2DBF4D3D2ADB9112B34063B574C4D046954838DB48DF98F010B8040
C2B9DBB94629732699F38B811B93A1F6A004894709E0A6A489135BE731909C4C
AEDBEDCB4E47A8F0B8DBA052325197F0E536F56B4930F8E0AD9F62170A42C0A0
0E969CDA964416AF9DA1C67839CD61B3C296C897A39066F8639621E2E6C0201A
07EE08A70ED9F2864F9DC3A464A76480CFE7A48E4D5408D2CD37B1A708B79918
63E74D856570F9679EE3C833FE711D8CAD0172D722164E595632F2A2CE7DFCB4
633A869C282B646195CFF13C4A85213F104660B43AE1C135C3B589F6F8C8E4E7
7D433BA98B8D82864B0CEFAD0BC3A4126F11EDEDEF392831B430269F6D906C2B
04410E60CF896A6514B431E3FC76FF95CCC131458F22BAE88C5D4BA00B0E302A
BB05AD1151F3A6E3F95CC355035054A2871DA4D5901C44B8B6A70E126E6F7FE4
1DAFE1ADB1DC870E49CDDB98287E5B2420A3E10E6471572D604F6ECFDAB0CE4F
B66D49475FC4DB1FD6D9BF1953FBA9EC0A977F254C9BD5B780AE276AFDA7860D
1ED930F2F417BFA2E2232CA9514BD063150C80BF0C521423FA81F5D8D1774326
D91522EEE7CF082B8FEC299D021599B9F0D1A3A4F3A07F0DDC3A99CC1110C743
F49604365F31BC852B3E4E1903833F4C6D463006E23FD5860F96727ABAFD4582
D698217FE78E4BDC12D2727FBEA12FCC0C8664FDB8FA8D572D2767B82306E12B
009F33D175185F373305A9197CEA7ADAB7E556FDDA02D1D074F6B355295A0481
91B9623BF43B80279573100DC678BF82CF4B2871B62B97A07EDC5702F37A9E38
F4665F0CF326737F1B1819EBF954ADBDB08F24C6218F95ABAEBE645A973106E2
CF1F433BDEAF65E025F1615BCCC9D1767A706DBABDC864C1B667BE2199A9E19C
CF910299490571CC950AC4492672F8EA215DA55D259EC5D3AB6C7473CD08CA70
1D75579B2AB5DAB89868589C78CBE24CA2ED1083EA7DE5F0BD4A41B0A729D16F
269FB703FC9CDA43FA6B44F621D1B5838AFA552ABF2A3612FBBEB805519A16DD
50C4FD252D11B7C64F9490CD4AF5EE4F9619BB5FADFB8A086E2F73FD99BD4ACE
7DAB9876693D081F2A75ED5199E28583C4689B7444BCCFA9A1758A2AC1B2F904
7922138CDC034B5471E774D7B84308F00E1139BCC6AD1AE9A7812CADD92CB958
E47F40FF83A48F7A1D0AD977BE7CA7EDE44C760B5195B205BE87D2607B3CC0D4
9ECF506F8A8522DB6EADCAF13DEA54CFD426AC6E687D8672CB38B10213B54BCC
EF80F3878457E102C423FA06862ABDC7A0F3DD7217C59D563F4E4EBBB7BFB0D9
6471A2D4CEB0FBEDF5F46E8EA12FC54E208C18E7EB2CC78645BCCF19F1902A21
7C9012EB01696481666314F7F0A319AD1371AE026B762F06DFB89B40DF021AA7
1FCBC5B7C9FEFEFE01D290C659CF37FA2C966AC3EF9DBF2F21EC0395D9E76E5A
9DB556B0CD496BAE1A3BC7E9F08BDEA1D2B5BA8DB323536DA2870AC31D4A36F7
C0CAFE5C0EF765A574F0B3354B9648EF0D0AD3D8F9384ADB1B03BAC0714D7CD7
B66A0D08EDED04FBB93C654F788262F6C2F7B0E2105021367A6B09A8072EDE63
49C4E951CC24DA5981FFB2F408602F97F66F40640EC885B6A8852358CFB91B72
81D91F1A23A0AA6E8748FDCE72E57C2457DD4CF44EA82628D7ACBE3EDF815155
9F2285AF670C691D5B26519E2B87DE3AB9AFB68DBD87D3CEECDF2B6AA9A65B12
F1B6B1FB9600E20F6CA626084B87AD67E2EF1974E5EA4971D4A13AB739A2E2DE
7F5E6F5A545F13C4C678CDC82CDDBD91FF95DDCC8FCD8676FF01228D416BA246
2A3E6AE77242C774312230D7323290D71B77C42C33E60EDF7039D39DD4816FEB
90C13445588396FDA508253294CE0AAA8AF373DBFD2F28CE3A1B6E2917BADCFA
11EFA8A94291B4A23F96B8B66F2240D63EB19B8513AB54C3BCD3A8AFB9903E0E
91E09F66E12CBFB6CAE5E7326CE7D64ED04809C4AACE96437EF9A38A260C34A1
4AD1DCD53ECDD36E47FE60D4C2E3101915C6703690304929C50A64E5B3F7961E
A5255EA1F03D53A7E07C0C7C98A889738053B716BDB6BBB5EEE28B04E3C6A303
F248C9C9310F73F3CCE9982AEB1B50AB9985EA44A51D096DD7820F1B011DCED4
6DE331041C01FC8152D3BB315A5545BD5460956870E0F43CA2D3CC177D372AEB
2FB69CD53E3539AB65F07C58E2A3C0425990B93147ADD8DFC8AE323C81ECC48B
3856468AA824E4A4D73ABF92EE742FE50CC0E65F9AE82279CF74CA417C848FD8
75A40CB5B560A9B60225C256DCCAB9E851368D56A3BE7B1A7E5AEFAC36238862
B6A919F2CD4BE5041A093AD52D3365A9889547531B13B8D9569ABCF24EA3C79C
BA2C8F32F97270071D4FA354DEE54B6D1DF670A6E217FACD1EF97524F8BF21C6
6C2E62D465200F5B9A452A60F8EDA1946542F899A89FB51C9D17DAD7DE04E626
2F51D0CC343FF97D30AF8BFAFCC3C39B3260DBCF27D3940C21BA662A8E0EACEB
BF6B06F41A108056A65502991B120053981C2890829D93AE86DE07B4A9ED12A3
747CEF8FE8ED274D1835A6DEE76A51F14010670FC73E3D15ECAB9E961D87ADE9
7B4576E88030F224AAC3EDAB0679BA0067C2708063CEAFFFDB41A137F8077532
F93E5EBA92297E16A2FD17705C4612C45EF91C0974209EA06B11E51A46BB3637
1D0BF932AEB6C991A07B79D116477B690A49CF5358E4F43B0576434ABE9D2629
91961FBF57E71FF78FFF342871FEB9051FE7C01F2640CBCD666DD41714C04B44
C9F4F0CCC1A66B1611BA2E4143A266DF5E01756B5DCC3A9B2249BA3309668B67
98E5275F6D910D0332FD0184102C6CF9DB762D91F6F401CAE39E4266C297B0D8
6FC49A66A3E92739928E4B51C1330CEC09F9F6E74468AFE8265A830FE1202A8C
4BAE420052192596114CBC8557037E56BFE25C00B074CCC0A2412CE2AB31D105
000027F0F2FC34DC3E1B1B54368778CEE79ABBB6A0ED95EDD73EC89F284060D4
BBEAE89813CC9D4807C1D7F05D1CC6D00E8C1710E275E3D97DC58447A552C8B2
8329438F03AEEEE0A1B66BA8DE7393E7F9289153408B167C2AB7D12FB608274E
5F066376AE8377876B24017B978BAFD8D158B5F91E9473756995905C9B65DAF7
ADA236AEA806A9D8CA0F8BBCB57D648AD3FD592976885CA0B750E60AC0A978A8
912C65B905690051675A2212DCEE72B9E1E53EA8C3A9DBA806FB832E289FB38B
03D454B42FCBDD06A85B371A3B03D4B5D4326181E080066B32DEADA93E6682AC
EB7BAF4A0211E111711A65CFCFF3CC2B0E69CB2A0FEB0B8DBD78373D7832BB6E
C47C44D77866E9668031757775B18C8AD1D9FDFF9C5F5FABA18A2787AE497FAC
61885EB8DC48C85144E0E0793C5B20165CC3C0CE0DCF396A1B812457E6C769FA
5ED60355E3E8E9E5DB0440E393E0A0E0AB9E85953C5AF587A0847D952069F92A
6328AC51ADBF6DC0411EF022D257C3D953130ECEE2FAE0ECFF4479A8826DF16E
8F3323CE0349CBEFDA1EE9F08050B5F285D74361D46375342F5479B88A04630A
DBA49BFD79DD235EE77512BF89CC5D577F05D5666A7B1B69A6926A108A2E95D1
E1737F7625AE79CE1E1B3020032228C44B84C6F5F6D287B62F9BC37264561B5F
E15CC73FDDBD9FFFA0DD872009E9983F2662CEB7673216ADBA6DD10784E62D31
8B9CF47B4F580A06E564C9ED433ADA436BAD3A41F47B4E8F20D91A04D79A9463
2F89A41B4B2761378B2BF593FD7FA9F5E7C3BD00BF4D9CBF4BF7629017C68E79
5A3D6534FFF2651EE65CD42FE47FF45A18FCCF761E195EAB66B69E72A53D2B83
157EF004B7DD44DB1BF59E41FE8F16FE613B3ED8D795A8F3DCD3536B32472AD0
D8ADD817E37AC7C7DE1E95AAA5E1BA3EA8F6E871A94C65EF8EFD72701FBAF316
91FFEB6D5A1313CBD38C179EF68D9AE99767F58F1347556E54279B1B26528839
4BBF7B4DA144AB22B9637DE54FD113C0F9D5060EE461EDD4FB024A9CF370954E
3995EA5E566D3238C8A1688A8A60B0636CB964C737139E522FF12C5BEDB7A35C
6BC29C792B882E374D1001A218512CA4B9924D8307D8F435B582E4E3C504DBB9
03DBE678C65BD419A1F42DCB71B4CF343E236806F0E53965A573B58F3BBD795C
846C349F139BFA5684D7B30089531446D9B5C3BE7FC5E5110B8EEF3F5A106B87
3D13D2EB10A9ADCC74010D281E975BEFF9E25D353FDF313F100341219AEA2930
0F623F11704F8BA44BDF4F6F7BDFB41046BCF70C2CB8B56F3BAF6F3DFB6B94A9
6C9E4B481753D2986A660A03DC338E145F4D0F7AD20E647CE5A16A72E64BB0A3
2B70C66D403E46C7FA2A9FD1F6AC89807768675F9987C6958098347EBD93CB8A
C2288613B575E518E53AC2B70B9C49046943C5C54C7E6D350EFAEAA24DE1BEFA
1148B3DC51C65A7C1242C2796EDE3C2137320ED284390036DE0F5F3C57B8804F
97967AC182349EA74F005CD1C58F16105BE0FA60B9A681EF9A9F44DD1D054922
E0DCA0F456FF06F3DFF03B2F5CACABF78B330374E41DD7BF8A2E04DDFBAE182F
93290A74F52AAC0F2FB436C6E76F7CB952935DC697832378AAC7996F5BE376D2
E2F212CA269A87FE35FEB7E53E0277FD18F4408ADF1C0C5F249365583379AA89
051D67E8735F63CCE4C73F63062FDC8F5F10E841A3295D352AB583290BE05B3E
B5FF2F6BD2ABC1A5AF2AB18C2C9F1D001DAFCDCFBB71A145C77E2AF31EB7ECC1
9FDFA86D84543318633B42AB5001A42ADD0A4E2D33665ECCF7FA284FE8F27AF4
0C1DA3EFB2BBCCAD47D4F384AAB77EEF41EE27EF69E3D3CE6B90138A2F226CEF
C3F094AC86EE43E6D3A58F0466C219B0AFC8A276D1662B1A5CEE1B5050875D4F
DBCC0BDB70474FB01CFCA6A50C55113A302DD74FFD834508152DB5BF8A915EAC
F80F34E16EA3551633F0F52113630A76810C27ACB0BF2414C963219EA5A2FC2B
3DD2E15BEF58E95B1E41E20FC17834D9617F85E8390C08D8510546732BDF5A77
05143C82C9615207E12295E69A5D8410ADEF4D541A47B6B8FCDDDE6495A09706
6A266008184409E6F45790B17952415378251EE67911076551EC6C16470A33D9
ABEB388A892010AC5858A2E1D802060BB303B8391C0A8656099249C21CF46303
B01EC4347B189218272D764E0A9BF177295315FA366C9B88983C2F1B196B5BB3
380D0E3B275D201742A5B8E574D1A5C6007DE431DFA5DCC48028F931D7DF163E
CC2FA0607BDB91222C244A13AADCA10132779AA37170B48F06B49700F97A5A06
124563F0BBF98E905E49AF08B47B4BEEB1E9A1BC51F49A3F718F5A85658994A6
1CDC1E01CD18C535605C459A805855EF92A07F9532BD458032F378C8146FF043
F617E3627D5A781C8F6A602177B1D450CF1F422424FF42AFF8EBBE1B8330E435
CB4BF88050BAE5963AE7FB598AE556E84BBB5F16DFDD1994C41017696F0381D9
6F4665D1772B1D9D06039559172058822016D065BE2FEC994B957C338D4CDDF3
6A44ACFAE439AEDC8383F3C5B7EA422E23A2016BBFAB55799666575D4C5D0AED
10F1662959F1D78BDC619729D762473439CC6F274FE79D59679D8365F9A4E1F3
06472360E9382E9573360D251CE396888BF016D3AC9D3E113B6FACE89F29B892
4E2A1E443E22CAE83A7F671DAE9902BA6DD7954A6114C8210DD86293B94254FD
12F81316745557DF875D0BD2F02B7078714E97C42C4B0E3CDCE778830F1FC1F0
09917A5AD69D658B05AB864CD78D70F1FEC4DAE733797DB896709921CD8B75D4
D1BC4DF64E4AB5B1F7D0A785597E50E3EA571324CA3910B5B4ABEBC6A1DF957C
CCF24498134905EEB0F359179048F985AD34641BAE8529AD3403B081F817670F
1166137AE1BFD265DEBB867688E5C76DCA38C473D3F8EDE8ECAFCA8651BC4609
E9F9303D8C0985BF024917C757554719BBB33263A87B873B703C2944BF68F1D2
2663BF7F0EC8EC738E0C02B90AC43EFE86F4CB0EFD2FB19AF73735F9168AC57D
76B4F747A0151CAE422121814E9B33F72663757B9A6C83FA7102134B82CB3B6A
B5EC9EFB4641EF3EC52AB690F3BB3FE2F1BB68725126050DA8A130F9A5DAB34E
E9CC6CAFD3E99B1E1A701EF7F067908542E5CD8B5A217DFEAF9F2418D1BB41BE
9FC6221267B6B0FC418AEC746F1BEB9B0CCC97DEC788EED7589668DF1E075978
6295FA2555A7019C704999C540E0BCE5668A2ED0EAACD45234B6F92D00651F92
409B44E6A5E0FC2BD7B469DF3EB882CECF9734CC13E9E54582E13DDAD95482F0
255F5BFC5914BC62380064838A57517E395441AF9DB7484F20599394C48E2131
31D0AD9EBC360AF3C91C00B09C9B709888C855930F296BA9CFC9053C0191FDAA
9C248286A6DAE70B7F3E4004B0295099F94D92B15B045EEEF6CF0C42C8397F87
B8C24CD18997EC01B2EB8DD98F138C7C2AE11AB0B87169EF36EDC012C7F8014B
DABE339FCED892454326E937DCC219B96C41A90018F027BFFAA2746B54EE9F7D
76446FF813AC9C4826CFDCFD090D19D51FD56E2E8DFA6320CCF8CF35787FBC0C
A1D87E044B3369EA638C9BFA815D1CC689F151004CB73347F4D3015CE5BF7B45
347C81E2A06A3DB2326E6EA30B460BB8531CB62902635479096E898AF58CC983
9B5F57FB21E1C14869D48B095AB24962FCEE2DB3BB3A4EDB496BCC9C37C4C4AB
97B89B4B9A4A5B3B5A204D5AE0C0D10E6D935BF2F33A88D8CA3BEDB722916829
C064FD171B87023E955F41A2A7FC13B8CA8AA52A4242A3D76D0FDB9A33934F1E
3E33A3C51ECD368E39470265A80009C4CF62968036A41CCDE3E14E3A031F3551
302F6F3B186A25C3BF4E4556
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueID 5000791 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762BCA9D2C2FD74
7B8DD210DB4E177D8A0977560B0D3EFA271BF2C5C11A5FB8A08C5FB0275BF259
3ACEE3B6911F9CE0B4FC5E0C923BE6A980CC72337514555A18119DDADA6B0087
1616CDBB233E9B17FD4E658BA6B733D19498342CEBD64A13F329998A8DC8B405
53F57842CE29A5078F68526ADD0E61820184B5E8F986EDD30BED594E6A73FB63
3E6039A39D5800ED5F2B99BE16607C4BA37DF5FABE1DE0C702EA323FFBAC9DAF
541DCCC4F26636CCABF2F032892175D535162B2194B51FE3C65B1412C77433D4
0B0F099D6960550DF8AA476CC159EC9BD3C8B792872AC6E7D8BEAEA0C81E468A
348D5D5F7B0EBB8D12C4960B068107B431A089A02D57A2AFDF15B82119CAD8A2
617DE891B046FB8AA8547D59D5E5B0B6761547A7BFF032CA507C232C9A6A6445
1AB0888B424E90B383B71CA6BD549466C059AC86EFDFFF45059825697E839E9A
F93DC609E770B73697BBED1EFD52201F46B554736EE54AA2551D49A6A1167E4E
E49944099B2B2CBF1CEBFF526B12F0382AC6D13134EB3703F96563FE3B940941
D10BCED8143796A92C36F3B592789B009F2F52D2365BC083487FBC9C107C192D
939E1CB6294C9FE891F5BD30CDADCA0BA27E1432D5C61447033BBF809319FA59
90AE3199F49245E8B07CCB055B3A6AD5AC3E0084960FE6C0EFB19A089EB41E00
BBB8B48A35070AB769EB889A12AEAF18AACD4F6C165D949D19080424CBD10392
0979DE8F9F2C0ECEA2890B798C128E9CA6AA78F2AA93ABEBA556AC49D81D6EBD
EEC9C84105CA14B105C612CFCCE3C992165AFB30B354C6189740BCC6347D6ECC
BA25212553CB167441990E24825B77233CCDCA8A6E2D1B0AAEBD66F567EEE393
00DBBDFDA2B391DB89CAC459588DD69D45526DCFA48AE77FBCFB8EFD4974C673
82A1C58959856ECB71ACF0B361DA5767CA1D2ABF06ABA5AD7F6AA7FA25595137
AEB2E7228AF72539BD08A20FAAC2A03A5D79E4EBE655C041C9ABA4AE41C33593
BA924F2C30AB49586C0657DC23F05D1761FBAA6FC548CBC9FA14804F4AC984A5
5983C32A58C822DD19F4B2BBAAF7D8091A6004CDE7F33FF2334A69D9BDB66E15
D34A5FDDF15E0EDA4C9A12F94E43690A3F1DB9638440947807D2F0B29FAABD34
E4E0419A472D14750E4D006A6971CB748D4A2A69039F321327E1426A2378628F
1F4E205B3E1581373175A26B401CC3CB84734B91FDF246F49B5876E3BF5266FB
B109513F4D08CD663065F34CB9FFC156AD704413010E5001BC3BDFF6F5B0B0F7
D548CF463C66CD79B91DFCE0F1F6F2D01C09EFD40C5FD40834269663F033BE8B
1A25C224680890AF646AFA48849EEAFB2804B2D2DB92FE30DD1266CB705B436F
8927F2311C1C27DD3E3F7DA97B20C257ED74431694D442F03F76E38B468AD18F
1E8051EF374FE34D763CEF2CEFA76E204E392200A4469B2279E9B01C529D0B6A
AC5089F5161BD4EA28AF12D0FE9E6C32C78D7A8C8D6ADE25C9DA30F3FC2397FC
F891511760ED9891733FE62F3FD9D8924BE30EECB09C00FC49EC616BC08D0897
16A5FD497B578985230344A2CDF90DA41F2189DBA13A1CB3962D5488FAE108B3
7DED7CAC99CCEFAC17296EFB8675BA230D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
/UniqueID 5000768 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B78188FA4BCFB0B51692D07B0BEBB930C6F0997B437E2C51B876B
61A563A2673932C2045833FAA35DB22ADE12102335D5DC734AE3AC5EEE6658D7
92EB62131E1DFBA441F53EFF9021D9D4C491F26BE8F54C61165CAD778CE8695C
EEAF70E3B20C64D4C2B34A084B5770BAB2A974E898F62BFE90F132A37E2DCA4F
43E13DB13C94DFA8ECE2B7374827AE168634FA007F8981ADA046CED3448BF453
FCD9A4F194FA648F9FC0971734BB69CB73439CB0DD021D44A7C11BF295E81733
4DFBA460FF3D654F9FB337E99E6D66FBA87A817EB9CA1536C84833870E3626DA
55D48DE850D3E6F6B29DA0E7C9D681283586F208DB8D58042E3A7CE55BE84822
C98237911453E479EAB65AFEBA3F61A763B40E74535BE56C9D8D06DDF9441741
5C9D9D917439368736619717FAB4F06E2C329AE0BA411F3FD522D9C33AD8369B
D7DCC9DF993778482F35F965973DE876FA19E109AA198A00658AB3F0D8E3DDD1
08A573F2D525202AFC57E05D141E6C0BB811E1FE280EEA002B7A45BB363AD06C
318D320D2C81AA5DCC842CEF66E7DF7670588CB39C9F42EE7763A3A17372432A
173BDEF7ECCEA297CCDD76A835C36DCE9DB8F8CB66CC71B4920CF5BF055A5260
5B41A5373BA6E4F63C85671D979EA5EC30D22163E6D206168A3827F465279870
CA80E6632FCB86E990AD1C8A0331513E0B6F2A90442F6407FE139D653820FB3E
EA998267FB51CF42EEAD7BB0A223A1886FDADA6E09DA69158D99287EBE0D2FBC
D613BD74C719D5C7ED5601E8C723ADBFCBFC2BC7D5C6F2229A3552E07AEA53A9
EDE1682E06F2CDA4969602161CEE34EEAA90A4772CF1930491A7DEFC398FD994
77C05DBA38000B2B38DCACB524BE8F51AC966239EB7928909D54641EFB30190B
E8B0D107D10064793606FB9D46F2687927C74133EF89CC4C093299F6D15D0E8C
5B6078C8D192081FA7009A210628BCDC537D2958795ECF9A469C1E4DAAE3B96B
8C7AE2EF0060BD399B8750BF56DE258BCFA9DC8CACA3E8A964F58F7D4F0BC21D
93BE3879FAA372BC4B85959C4A6A35B7F81E5D42C7CCFAABD6CA1C2D3DB2A548
0AE93A9B271F2D1AC2D9F06692E19EE05757D3FD361873A284B01117FFB83C80
730DC3CB10227BB0DE9F4796AD5EB433C9533ACE0C27D3353367B967DCD3A829
5B9364F4EF63A9AA939AAC7CE639D3DBD4F104E2E09FAF75565A0907E369DEA7
B165F5271B585DF4F0C8F586487194107C63BF5C6AF68FC04C371C2F50ACDBAE
FF30348287C9C3FA8B34A76654DD7AD69276C10A3A2A6239609DF6A9B0B03AFE
E23DEB0B351B59A4238F2C086509AEA3E0ADAAB0E4064184CC0FDD29CA067B9D
B6E927E8697E967F0EC50A272D6DDB0F672A6A4EB99918485CE598350A470C35
5EDBC01609CF5FB93455C8BBD146B18615E486643090D118BFAE11A40C5112E0
4A6A93487E26BB9233D4CDED6D95E598C9C34E74DDF7A657AF1327EA3EC00A55
508D51217BCD380038F06242C891916C7A65242BFCAECE30730D9AB581D7FE8D
02407177ABD6027D62B18626C7D3410152F92777959E1A8F46F69A082445DBC6
81AA96FDD2B58F8B140D4750AC90D7A6DB1CCDB9F86F744C6D14078075DF8FAC
ED7DF41A004E3326DDE47325B5336146743F131F9646D4343456D05440457BED
8AB7C1AE0BE3F9BF96571C11BBCBF09551494EF5A27EB19E53EE0BEF3E305F4E
01B8BEBC825BA0F806FD34A320C2B3081E17E9B0F728BB3B6C08C3C007157EAA
FDE535B3B2242B04F2410E5F7D047D8BCDAE0B01A2BDC4B452E6B43E7F143BB2
AFBD814C5E39F09172B80399013C7C5DB1DD57C527F2880E1077ECB7B7CB29C1
ACCA922EC0F943BBAE061D496BC484823488A1E2454F2CA927019B9E6F79D51C
52C9D4C206B837FB65CBCF0EEA1424A855FBAB2AB533B4AB2B1B064718CD00CF
FFB85D5B1F62D10FA907EB17706B5AAC80408D11F6E1B78CF2CDB62048F2FA65
5E3E6E7ED1B7E65352AA7CAD8690E0CAA29D94D923BA8A9D76664F6A7F0B1462
62238558345A5F34D1A5A0EE5F2A72802578F80E30BBE53067DB6A264525A1C0
CE0DF05742FA0909EE11366E57A4A90AE4CA44677BF3C178292D4383A5959986
5B99DE0B5B3366CBEE05C43DE2B508401E940EB7D6012CFE332FABAABBBFFEEC
F42C90B53DC49017A4A7E931E519A488B9A895BA8D34FE5E6724E9CCFA2F5134
C7D1C380F095ACF5D03D563A32A60A92123B7F2ED20D579431A4D7E5062C9686
257A1F4815538618CF315E0BA8D7A91B8C12F8ACDB109D8E174DD06AF5DB92E0
3C95338CC2509673D8636BD80950EA87BC1E99A4CA4632F2A7FC78C98FDE4E3C
99A5CFD0790DCABAADA204D6D83C462B527A0CDC44E1EB9E5845C6C664A49F0A
36F4F0BB6AAC0E8B150834D53115BC279843DD9A34C6275B89F502B679CC981E
0922A1D1B721D60BA1039EF1F496FBDE6E1F77D9F2F478486807862D30D13105
8BF00136B1A50BDB6E4495779F40D77D68355387F857FA3F4863D981EF3DF29B
D421C35A31029BD937D07095FC4A3216DF310E685B2BA95F1622AB57E6B199BB
53A11A0295D73D6411043C8E98937108821B03A03E41AA3FDFFC751FD8BA6C0B
8C2EEF569688B68F306F63F9F855CC05C74E6CC5D7225F4C0FC33B3E4893B0D9
9CD7689ECCF6C325D6B2283681AEF10791F0407900A71EFF3AD42F9B67C49F08
196D2AB2997AB4F69B37E6EF7F20AD9920D523CE5BA1B57745DC91BD678259DE
E550DFCB39D5550CE49B20918C2488C540F3FE55EC93DCB8E9FCC8AFB038AEC7
C6B50A87498D972385E4961B1E7F574D3EAF5E31E361A48BCBB9C17B74EFE7B8
DFBDA6C15220B373A394FE024DAE730EED2C4D3FF58A5C266329EE2FD368CCE3
4EBA118708004CB0C86702830E5DDEFB344DE46FB9D9FCC4A027522B84FA280D
244BB68609CBF122AD55AD67F1F7EF08D1EDCACF32EF7B6E360A394297D15888
E954FBE2B4025E84DDB9CA90CDFB8134793FA7696EAE8FAFA560279B2347B747
03455A485DA71BC91BC29B64795C5BA41A15DAC5826AE229646EB1132205DA8E
7A3D10C72609E897032AE34B83C6EC0E8B31A932330A6ACFBEDD3A3D8ECF451C
342309010F8008B481DDB557D07F66FDA7A452DDC6BEB8B605E2DB63CC8F3DEA
F97AE5652C2F8FC8DFD2E209A7E53902CEE3BA4C14B7916065B6D3DFA01D31A0
9416250CBC4D67B53DE0D7EB2E30B644F65B4F1DE7764D943174DDCE07CB177C
7D4E52F2A743F30C516F2903F87394973977C4EAA9A9B1A5AC427340E117CAFA
F953CEC96236FD59ADF37A5D64228336318F36B47ED5FCF342EEBA636CFBA3D3
68983D4B47CBB9A287D7F08582FCBADD5E130AFDD895533F8679C28A201FC144
C4FFBD1EDC091E65DC816D92A35B0354587C831455443E03B3947F41A3600C33
B365C34087D228618D5C95C8E01E72A16441A85043A3D2FE87A0FDB236515EF6
6A6FB1277EC1D8191205516C3CF795BA6DA655E4BF0C6BDF20CB8226838C7B1E
4BA8C7530A93ED0E9C6FD060E800DF40BDDEA67745D4A008C18E4B63968D85DD
FF7D8208A3D0C176492FA74FB4C8DDC5CCB35312E1C83F26FDA121BFDF057107
AC1CF3DB3B1DD58DC1BD73E1DC6FEA173D02206DF99D91C98FFE08AACFA2193D
EA3D0C5A87EC0245E1B0610B423BD9674D682CC67A83EF77200E0A8804D1606A
AEA3DE2AED41D8F296A23622A22241BC6EB3E18203834AAEDA144C0199B31C74
05E76167048E4459B3D1B68F8269DD9FA29533EDB5352F7F122F0DCE8EC01A9A
67A1338E7C32A417117D855B845DA1FF1FC0E50E5B2C185EA808BCC916C4ABA8
9B23892FE65B4282774B51E2065EBC73FF5C5438EB7903A11B96ECFB7A5EA9B3
1ECBEB5EEA707F1A4C8F46CFC7A9DBEC64DC877DD426E5F8D81B9BAF7957AA6C
6C11AD51755D4E239B7ED0D9DA8C36B95942ACE83E050E8AE173BDA948F9741D
E41140C2B819CE43E9808B02C17B0324B1BF272E1683E7CD9DA921448391AB58
917B8318DE7C470D599B0BD2BEFB18FF9587FC4532AA2BE8C9BF8B2B42DADA7E
925608487C2290902848222CF2D0BCE36E29D14E5FCBE8AF5785A2D7C7EED15B
986639181A27B4297E3FD0E3B2405A55074108579FC2038E80362E05617D5CDA
8265F226BEC77D6870B30DCE04588923914F9641950048E545F429711D6D4C0D
8F594E9D3BCDBE8DBA048631EB230E410B4AB2CC397EF78B48B5DE5C0A3E4BCA
56838620F171FC35F478D1CCB242ECD35E52C3CAB52BB4428429EE12BBDA4EA7
4F73D2547F770A62A6F1AD5916D5743CECD6BB2018BC19036A9B5CA037530B9C
97C9E94344B8BBF5FD732925B6928D0C0E814877DD5226C1F4CABDCDB1AC0CA8
CAC111E70B27F32692F2084F745A80AF8B3E4177832B704100A24A84E531101D
BEBE9D0963C6A65A288832A0CBFB42BA0A2ACFFB5E6ED15ACCEFC844A0E14066
4BFBABA439B0C237D7D772818375840FEE0362D0A078B4471B65C80719180864
8C37D383B337CCEDBC72CA5B3F8321E22A3CDFAE3F86EB3913CB40812913B612
955CBABE89F28DACD9E7C3E56B9EE7FE7059E07B22CA562FF559EA677C39E29C
50769088EE2217BECCD24D45A0E39D4B8D7EC8EC6E1887F133044834E22D73F6
A951BA4D991ACDE7E8B8B37B6EB4E5E434341122AC5FBFF0FA963FFD6691AF89
C0D7077532F3672F22A7FC4D3261E5A61D1EB037994647C23B36BA691D55C1D4
06D46DE79784D6C1799D00854A88D38B0673CE2084B854817F994C2794CA49F8
1D4A82D1C57B70558E4974F5DD5ACDA2F912284CB90286237AE8EB8A2F4FAEE5
F8F305774DD9736226EF14615D2E3F70C80FFDA2443A679D0DABD77EC25E7CAE
52C3DBA5C27E1B9AA0117108198DA695032F0137FC19256329274B32ECE27FD6
1D6EAE1593AB39A8B8C4E8071F656EDBD6BA0F120B1D684E58F7BE5ACB35B497
8DA1C465C840B06C988C9064B4842CCFCA89193C2D2B4A38DD8D3FA99A66D957
C76439FC3153035B1E0E89C00ABB0EC83C1E92C570F4ECABFDB6A47A6066948E
2362E870AC02FA01CD7E91D6EBA268F012A6716B9B28D9DA53320D0B8F3C0CDC
4F95FA1401384F25D1EF4D7A448B02A940945C9335A906554DA31DBFD8BB20C3
90C78A748F38CE91835DF8FBAF1EE40CB374FFCF18AE4B17FD308BD034B6B3FC
DB0EB992E1376FB35D985684D88880B8E5CE2C7097C56EAF26442C915A27A614
56DDBA672265FD632C2407DECF8EB8193F51CDD8A8E0A2A3E62DAB3569A73420
C1B11404E152A7EEFBEBD1DB946AA2A2649DE314B63E183472581947D4041094
CF9A179C3167A88DDB078E2704DC75928F8BC00D34B56B49A1E55A008ABC95C0
909D75452B44E5433786F28095DD564FA3C1FAE6FFB28DFEAEE94289DC7D9E08
E3C5EB837D8D7A0351B40D799EBC2AF6B14FE5E0B0D77D10A44542539EBEF506
FCBDC6CC9BF873426056CA0B4557350691079A2B6A6A48E1CF595CB2431090E1
7E76B1FCD6A5DA8778199B11E64C2205F9F08563F8FE96348D63B6D029C0DA8A
AA842979A46D4C09B56C579D5A291F76D1C2A161583D592274FD9ABA2872FC33
64516A28FBD3867CD43CF68DDBA71268D3AB8C8526A5A878975B0CA90BBEC12C
E8918D94D907610065EE8463515062472478A08AED12F27BC92C73ADF0049B2C
57E1BB1650F3F771A39B76EA06FF0F221C0EF4B60186ACD058C4782B3C9DE4E7
F8ECAA78D1FC89402E9BAB7C0898BED1C9B6E04A66BDBE70C317054A4F86ABB8
858A9FE47A0CDDFC260B6777F544D888F9A186F9B80C7EFC2477CA182F06C144
83D00CE65D87A80D7DBBC05084877E70D15AA0F03124A64B70BA0890F772C752
6906331074145ADE0E976168969FE3C8FA01F6AF618EB9DD091C0458C76B5239
C2C18B93C1C001CC79433690E0ADB23BE20C9909D188283F66A326E8C878D739
13EA0845C1BA3CCE989048473AE90A143008C8D231F4E4539314C2B34B954BE1
42EE2CBAC78F2746B30641308D6DDA0B7BA3E7D5C78CC631F6776569D4CD5387
1AF2E0A52987CE3B096A5DC7830F428AA326241F0CBC5A1E782D6E5889CF4AEF
4E4EC36C58FFF6C292F996011A50FC8FE1AB96281F2F1617BA0CE52FFFA73251
F26682A631F091FC76D75E7D5C8F3776BAD5CF21E7B63F29D530FA79967DAF0B
0C99D730E493A09F5D31D42903ED075FFFD2FFCB9545C90093BF95F8513ADC74
75A906F0364613E2E48551573BB870A69E465DB1FFE149D0C5EC93250FA067F9
5057154F6E9224D05766428459C1D4DE76089CF53ACC07C4D10E572EF12CB33E
7A50DFA7C913A0B6A3498AE511D3011BF9C40F7FB9372862A08C54E81BDB1D5D
A6D165E7340D85EBE0FFADCD9A3869A918A438B041B0C9AEB4BBC1BD7CCEBCC5
061B8B26F372994DE7D34CF5C7788E7439AFF10124780758F56FE3FF67CAC1BB
E68693431752C0F489FDE30564C5FBE95A55719B4957F6E74B79BB3BA1D0FEB4
812B11DF99B441B95CEFE99852DE2B5EB0D84C6674030983033F0DCFEB189F2D
4C4813D23068D534FAFDCC881D5730258DE55356B30E6F2AF737267204479566
34A9791881568D4E712EACCB24B4D8B63C03CFC6E744961056E5CF5279FD81A9
D29E199D67E455678133710A2C6FBCF650010EA9B5ED9ED946D12AC003B00A00
14BC7A2AC699EDF0E512F58F174CBEC85E6406A70CFB24A52E0ED25C54420FE1
9601028356A2BEBE24C5E5B3C901F8B7EA7CEA120709B82D246C05867F046205
3F5F6E63CCE3D97C4D4684070C6C38A882C465F3A05B3745667A009E97B9C370
24A017E2189300C1AD890B785D3A5A1701FF1EE6FE493BBDE23F79FF50CDE715
23773CE11809E570DF170C2B81DE5AAD3E1C1BC26B7FD93E8D80B4D90E946C12
ECB38D848AA2676CB099AB426255ADD06B7C1333CD3C7BF196DCD4CF8AF88ADB
58F2D3FB8BEC9C0D123E70245AA9E8248E5A0DE669D7DBA24ED0DABA77FFB3ED
E6429558E549E87EF154818FFA7636C59D80BD258CC18494D681B6C4BD24D729
EE92F88AA59E98AAE4BF7A116A7E41BAA699FA78379FB67C2175DBCC2CB1E8C1
F99309170E7598AB43D483B209CF41D8AB29FF582CF50DCDE4F10A2DE4817EE5
C03806262EF3538BD4CF22A5A2E97A84148E93802E82A6EDA0C3C3D664B6ED0E
6526328CF04DEE98BAA37ECAD15C1DFDBAD14EA6207308A435986480B4A8AF41
2F43EF891E2A306A6433C5188B10BF480A965E208B98865D12AB8ABD09C26879
F1419B411AB556BF2C29F3C09D03D1F3FFE4C444BB8B02BE7AD33CD2D53B2818
8AD326D511633229930301A40C6547A6B06F14A0CC8645208D8876660D61D199
19D527BA8867B19E1208E94923B404EF2C042364B8215F5694137D81A55D4893
E60CB784BF3DB159064734F8C12985B23E4BE624F9F885AC055514223194E8D2
9FB91AABC8A5C0A776E3F6992D226D48ED6D08E605924E68C452509FCF33CB4A
3DA3D1CFD41107ADA65DBAB33928AD805686F40E5B50A5421A505EFBD04C9406
5A6FAF510BA3225A14889CE0D12D08BEC6CFC08CCEEFEBA515EBD21CF7D7B843
88C0C157F1065F18C4642E2A9FDF3F3C33B304F93F0E57F12FAD6FC28A523D1F
62C8486764C3A96734995696B1D0C8E401F8E60E753556B9A0FC606C435A0388
2E8054F92F7958FDEF44AB1913FD625C5C328B2714428A3F16DA0399ACE0784E
1F7EC7DF563339F8A10E92E9D29618FA04D4B6B0BDE23CDF5F3114FA7F793EFF
5E2B3EB0EE3539BC981DDC7418F6F3701A67CE02646E2DEDCAEC1DDCA00301BB
067EE6D2B7BFC4DAEE3A0B7BF6D0FEAC522D5B89AAA9431D5DB9EDC7028593CE
999258DFA08D2B22544AD92AEFB872DE86AB9E49E29C35F2A21EE4395B589878
CE885A20E040C9FB36B56C06E49CD1B06CB3FAC4EA566AFF57E2A1CADC3288FE
9FF73473D092DC4051457CADA6AFF982EDA9A1126AC5D706A262D2A36608761F
E3540D6FDC911ED2258A39C5BCD480CE149EE0A894939FA26AB67D0A1F907CF3
246AC23BB58EA20A1125C67E8373113A3C8CE01BB469BF41ED53320AB4F3C381
104092B03B355EADEB424F7DEF71FA21541A526E4B934B0D32B4B5D3BC7B3725
D39B4B75E65F36F8FDD43923E95CB8964476B58B1C2AA6D873C003B2A829D2C7
80E2CCFE225023C568A8D71F6DD08D2E6C193A43003BB063DF372BC6FD81A27B
53DCFDDF460E4A16152CBB01F57DED83B6123E2462FB2C136DDB22183F151874
10F2AC27B734B79492AD2CB731D92EB72B7C0CBC72FBC5A83904F06D9DF3EC68
9C0ED27162EA6DCC63E04E73786EF58FA2B5D7EE326518868E3DFEED132C8DB0
E94AE5B85A3CB665CDE68C93037F3492B39F66D951EFBE38C94745CA618DF694
379C452ED915E9A01E795F98628BD58945928A67B0F4F6E7CDC476DEEF8D98DD
3593F208EADAC5410B0F6B1E4B3679812C024E3D1AEBEF33012DFA4FD3A10A9D
1D287B53600F832778A00844AC42DE2A01D877B6A60CCA19338D82CDD52073CF
BD6703D61FB133551B07B7864EB914416A45F49DF72A7C2909AA14F93781AF73
5EF4964E6E5AACA5864A5E2D4EF1CF8A23DF36BC9D588E230701733F9966E1BD
69C2575F5FC94AD2FF4D744F40CB2DEDF24157CF3782E90EBD4004F72191D6E6
4A57940B82E9CEC61FEF1B7221EC27A8BB6DF829E6846FA925F2F43C85B53E34
077907F24A0DC13887185A5886345E6AEC9D9DDFA65A3A1BFFAB2A97C963C5DE
B323202FEBC06E4A78E6FB4B3247F3779214573D7F1E8E58BFD5D3D1499706D1
BB9DEE7F7206914CB65E7FFB602E51BF8D2ACB3D86AD0DDA5073736F64E25B3F
D0FA818E78E02D01CB14A0F593D205A90709687FA9EC4B88C625C10548420797
59487841DB2F44ED7A5AF5F6E85C50B6AD9C61AD0815D2730A0BCC2B9C60ABDD
071D967759C416A94B5906EE5D3CF587A92F313AAC094D03E7B80D810AF89E4D
6A143F6DE30AC48980C8BAABFBD156AD01CD6205EFF6CEC206ABCD3D02CF8C15
541E13C86DE5E72FE81A64188CBE1D57068AE5ACB0CF15296A039B663EFF924A
6B61F6CC0A37D2D36C7A3D553BF0DD358E804A61DAE6691B26D943B7E7E4D736
E034C0AC0C913FA3C0B14B46AD1A3E61A54572FBFA82CA29530DF4E7A44171DC
458D803687069BC625F4E33BA888EB7AEF07EC896B3E861465578A2F12AD988A
48F7482A3FE4524EB90EC421F2CB5FD1F73764CEF2A3697D3BD1AD4EFBC156CB
D0F8209AC68CD1B93779FA6371D78F2BFAE07D32E5D1BAFE3B79D6AAA48A7B5D
31E97A4B2CFF82132B6F2531AC603FD60C80ADC95C1DDB128933499E25A7EC98
B3077D65C779CFD94E6989E6B4E94C41736699C6ECC7A395AF07D8CB8F51E186
2AEA36C0AB25BD5215CE6EC16340096CDECC61889137A5702D30C147E1A78334
272C739826757B6CAF4014DD9CD8BAC34746D89850C9AB065B5D61C83B5F377A
FD56FEFB3CD3BE1CDBF2100A41F8BD1FEF117B18E3302823FEF0E12772C2DD64
AAEA7D1AE4A76AAA45ED388AB6D20A12163C0EFA5F8498FD33D616FC401AEF37
5E98DE468BDD79E65FE0775B27B8E480FB42490B44F62B8E921A0F2CCF8F4893
CF5EF68C3C00EF57809013F55728641C7F8524E8886B42C45D05C1DFA416E417
5A9AE73E71BB8092D97860E9DBE65837EA8ECB305598B8ADAC2D37E675A0192A
0317571AEAFA3735C97C38E9F443F7635A0591C6F92F2FEEEB9639C932F8DB9C
D756711B200C4F8E8F0B5059A90591E8876D01CDB43C20B7156F11A7601E56B5
49364CE6FD39524022BA394486AA330FB5A5AD2ADA910E483C742F941AEE6DCB
4FA5B7BD72A9E8A745E42B913E97CFEB86621156B4EC7899F28C8BC0D3B10C33
8FC54E06A93CAE365BEFBF36862CE2069A72434EC939208C7074910DEA720C81
F30B051961A5F07D4AF45507D43043CE05018F8A42D55CF1474B8E63F8C80E73
5B01234D4D0C3E633E66714A0A0D604F3258232DDD1846A8BCC971E8BB2D54D6
92F83BADAA09EB98BA86582579AB614EE8172414B047C0D135244AA8620A0599
2C20775AF1D983A764193183279BA820F6F8508E7E288D1A04A8EB9969A07D39
8D3E2AB8F1C31B07A288FFA2E859517B6DDB3805F7D8FD5A81F943735C487E43
D8DAD01CDBE945373A6AEEC73469AC218D19F3903DFDB77F16A9AA574022806B
A762861A0A32AF952C79C846BD89D6C6A4D967D89D1CBA67089D1CA74E0BC63E
0BC97097BC28EDD8C966C037EE71515DDDF94902D4AE5782D072FC0AD59034B5
E3113C94273F1E2DBE41ED25E85EEE1B20F0E09FE4D3F9A1AA88C15A6BBD25FC
8BF6D54268BF32F38E69B60CE2FBCE3BB633640433AB05AAEA94079FF2948840
FA86506B395FC0BAB424CAFACA391E4CB361F3C2E1FCC1FA353B60C2D40E8357
63B93973A4CDE1B57DBA13B767F93A1CC72F5518E12EEEAA6A5AF9FF2973A2A4
B99F3372E4EEE500FABAE9E602F22E71095D452E5AFA73B83C5746AB496BDBE4
6E34731AE35569D24834992E71112AC077067CC9C3A70F6F1AC53CABC05C0C6C
7E51980519A57B85BCBF3DE77CEADCEE07F5890E9BC791A9A9D4FB4C8A7C1AF7
6873BF21F7068E13A4EB6A2BBB2B4A489B97D11B9031F8CFFBD7F5559D6CBAAE
844836407C3416FFDF5145FE3FA74F544EC5E177C17D32A687DA669F58A61AED
732E203750BB08A73269394408A09077EEA402581CD5330F7C9E9AC1CDF61F87
CBFE5C4816C3DAEF51513C797FE7E54BC9EC94F2C7D064340EB171239AA41A04
F77ED6FDB4284165330A0B8FFAF67E49260A4412F7EA88A77B375B64034C0383
EAA886CF19E93EFF0D412ADA383143ED5180D50B3915B2C973DCB81B4EE79486
5A3348F38D3CBDECA4597EE437A839117730DC4919A3767946BDD5307EC167A0
E5BEE4C40C801E37065BAE9EE025901562B51C74852FF3E3CC5ACE965DC61819
E180B929EBE30C89074AAF644032C712279A5DD8BBDA029D0CCE00562BF3763F
139AEFE14E7D40154183A98FAE73A17AE3D84B6CB146BC3759F7C7F26ABA9725
3A993E0F844BB5BFFD80D64CF3A1E21C38FA8A4B52E27283E7AA6444356A3646
D395063CAC4FDBC8E62B7513A1E6849E0737ACE3D3C5A12B7ABF46F057C4FFBE
7D9693E09E142F59BA89195F9CEC8B6670AD6423CB771055B74B7A0CA30F6EDA
9BD7F66253C477260C96470B217C7D39F68D07F39CDE66DFD6436515743E1C71
93DDE790239E6E7E6120DA4AFFDC44B83AD409435F7658F269EB038A295F4069
D730DF2238044C7BFF4E6C21F4BBB343CD28AAB78F54C946A8D8B6AD01B63950
FED7A9CAAEA544534FC26FEC0F1187D5EFCD60E67A2DC7E66D50EA2D951971DA
4AAFE686F8578A1B1894BCBECEFE81ECAE93933565BD71E3B9B4967AE8970E7D
5BD38D3CA6CAE9A0FA8FA13E6AFDBB3F073E5B4971D08BA1E3CFEEF6D0866BEA
A4ADEF2498BADD4C499C4CE4564EF8CCE35CF6E37CABCCD0D406C80786FB2E57
81EDA410E127AB4C9CAD3D27011715E85AE07999873EFB03FC191311A4340DA7
8E4FBCF3D4786615A3A196969D46AE980B63E498F2698F2CCA41E2A2BE54B23E
C9710340D39FD0F94AC56BEED7C650C9CB437C680C2F2622E34CFF182EBFEF96
30F09559010E280C404648BDF952147D2CC99E1CF5B88FBE9DB81AF8C9EA7ABA
46211744475ACD5FFD323CD25CD8D007DFC10E3E99884AA80F12DF5254CB9EC0
BAF890B10EF18A716B888A4BFE9C2919EB7B3EE78359A852BD6D7D193C7649A6
E642908158E6A5B79FCEA1F32370E58E5F5F267ADF6325F078CE16C9790A7FB4
444DA2E4D8878B9945B660484E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57033D79919697C81395D5B94C3AAAB11
52D73937A41903462D92415BDA3BDE0E452D5BCCD583937AAC292752D3520B2A
25F68BF9727E0F35C254A2054FF6B5CDAF0D7A9B9661760233F9BEDB38C5A8CA
9E0F3203802A7C966F9B552E7783117467452A9F71C3F205F2AAFD795A4270E1
86ABB6FAF609AE64652714B2721B5D41B9ACF89705169CCBEB7E9764FA8314FD
5AE965D4FA887452B6AF710530478DAE042D1DAE4C722BFDCA62FEE446A18B8C
7BC5103CE060D160542E274FD9F57B0D86FD0077BA0B5992F3D815B065A94226
5476F8CD1508FC23DB980D566288C60C5C92379507C1CFBA4DE5E77C065E590D
C804FD8DE3218DFA78A998AB98444691099B44938C9730C3156426D9E559AB6B
8317AC890E75D15DB708E4924BAB68D465747D676FE9EAFF433B0EADF940CBD0
8083E0F326B3942C96EDD017A2A5126AC479258B477AAB8678D469C31CA93E97
186B5F31606721299CA75AB7D11F5BC9BC7A085D54B026DDCEE2893C2036A159
FE1683394707994DE2E2C814C1743D8CFDD142A4C21A564B25628FF30F9AF5A1
EB512A52F060B2CE15030EBC2C26E01D886F405CB9F68CC3851439F8B07A9073
9C132E991F952CA41E85EE30B54313DCA350A6E911C8A67A611CC32CE8C6361D
99F0A82CC0C928B77276C4DF576F34356D82A179106374B13A28869B781A6F00
20FB9296B703385F81426ED5E894FF257D5ACB4BED9A3099EF007D006C63B30E
45772B33ACA56E62DDF82A14E3620B539E4235E6C419E8FCC86CFEAD8E8BFF99
7F2882A4C173803DBF8FDE83418A89F5D511C239D7E3BCAE7868DD85E30DEB93
A72C16D472A105CFDA41CC0AEF24717D8C52F9BA380A39FDCF66242A56767689
6C32D77D52E791040C1A58135F72AD15A7EEEE4F1054F0DD59A596D2E5B5A382
C88E3D68EBD66476A246879949F762E43CD4E7487C9EB6DE10524FA0016F928B
59C1CA7120BFC55EB7B452F27A174717488097E5A6C282EB6B8CCCAA7913D486
07D1E1CA0328DD611AE5BF27816BE80D38BFAC2A5E1BFB2319890E728BF35703
83FAFA748A7E465B49F601CB212AEC4D9A20D47B27BC25BAA19E475F2D173397
BAB5765E78210FC3798680AB6EDC6187423EEE2732496EEA0398940EDE26AD4F
3570B48A25DCD6A3AA4918C862210FE22B216721BC9CD59D050C529C697C734F
7B1BE5DBC682B3F5B84F88975092E4510BEF986B49B879FBA58A9C9861F91905
8AC5EF5A60974A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F966977BD8C8D07FDBD
F4D058444E7D7D91788DEA997CBE0545902E67194B7BA3CD0BF454FCA60B9A20
3E6BB526D2D5B5321EE18DD2A0B15E53BCB8E3E01067B30ED2DD2CB9B06D3122
A737435305D42DE9C6B614926BFD44DF10D14402EBEDFF0B144B1C9BD22D7379
5262FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EA4FA1566B96E221864A
45A24ADAEC63F61C9FD18376D39E0FDDE3FB4FBCDD6A7B66068A99D31CF54CD7
DF2262DA91CCC72889CAA62B1D6F2155CC8E940A2C35D8CD3EC75326188E2D30
1090F31AB50F30AC77D2C445BAF7323389406C44641B3A72C26BCDA442504D03
6C22A3BA1A69E5F87EA400501A3B3231E46F96AC3A6C0E4A4F6F21E0B2BEEF53
E016F34D7003351FD12436520926C632218410359AF9FF167750D3CE0DAC3B91
B310C457402E05C316F400246C8C38B98CC8030F71104BC4FA0505B5EFA4F5C5
9E4FA27C3E790D698690336254D7E34451E692AE23BF5FFBACBDF33E25359BD2
B0E7A0686602568BC87422F32486CB50776C7EAAE7F1BF78B228CA3254510653
3D6368A4985C5FF5A48AEF16E1AB71D7CE2C6649F2CF4B2879D4FA042239B504
F988D2FBE87C3BC784E55B8EE36F1BB5EF14FD5836CA448E139EF8FE221E827D
0608A6B90E08CBF44A30669AF4E20CD5C0C80518B7AF4FC2F56904C2849F7F05
BD9E5029B6C79D25E34E18176A2755CA288597D1CC18D81511E93FE88B94DACB
67F312A4986FDFD913164AD228F5201FE02EA6C5FF3F6B1BD792FB99819E2589
7BFC7A527E99FD1C1163D10B83BD61D7CB962C4EA67E887FBA85DEA3B2A1698C
6A896388E3CBA13AEB278D02354D5D40ED45A86BAE6F213806E9A598FB92FF2E
8F498BA926D0DC8E167B32DDB47D5A71212CC63EE2BA1332B23C48433BF78C22
E5A050397513C7B9A954B20801ADE837DC725EE53845DAA89D59C4CC24F9C849
0A7DDD7808E5E31755CE6F8957C95FB68823B9F944BACC8E18307C10E9D566D1
D6A4BEA8A230E5C3ED80B9BD0F2A30F39C905F11843A9C3B873F2050025DD297
F61A7D44A58B63C18C16C4BDDEDBA73979AD1CC2C211E15E42F6AF3AFE4B686C
9EA058B6A330AF99BB0673333FC04ED65CF45BAFE78F1899DF782FC2E0C10A45
622720545FE9E04DC3703FF862999D20CD6BBC8944F7EF1EA84EE89A863FEFD2
9C2E61C7A244AA254CB70319C57F7BC4E7EC1B7ED0E2E0BEFB7BABA64360690B
32DE9FD9158DAE19BC5605AE0006A614D4E3D70321708BA09AF5774D4EF62EBF
6CDFD17652326A6BFDEDC298BCAAB0B20209AFB82CD9E4AA63BE5CAD1455AA9D
C5D6170F697E088ACB6FAAE3427B3A26E0D8D0E14968C973CA0D8BC90F4278B1
BDB067AB3428719BEA95A88E93D13409A2A02A7EC0773CD94FD43625A90B2141
2B341C59871983359614089B5292C2BB9C184A5F3F9187988A4F6627C63FE9BF
1212A94D185FE803E6B9654524E569ADB223E8DE809E44DB791D1C46AFE2BD85
2E5382B3968CB9762BF37A38626A385D5F03D69C90B1989EB0996CEE0E1C7AF3
DD198CF50AC697B3489FBF119FC29242EA5A6F02B7041833027D327EB8A9AEE9
28681EF627A2AAD81E6881C369D9C09FAFCFDF22C504167CD5C4869C1B13A1C0
5114C83FF30BB4BF72E1D6B8495CC1460BA66BBD6E8DE75815F8D410B5D77A21
A5AA11586DCFF47D870C5FEB929EC5C98B5F5E6E6B4DBA89FEB4B8287CCD2C7A
04083908F3C1C2F5CEC789A9D3C0ABEA607FAF615FA524A449CF3B321DFEDB06
3E49DF8522715AE19444F742C32EED193E843B3E8A61B92D014E47E50C7B83A7
1C32A88876FE19A3D2B26A33A821B4464706AB0684BDFB3D20C1CC9F16ADE9F0
5378D6460EB8E45185B46F5259BDF1E7A5CD498B4042D3E185BA032C3FF39A64
143E1A2C662627744068EA47B07A6D7B02DCF32D464ABA1D699629B733077B4F
4DA635483A4B8CE5925A042F057E5448E1E89B9EBA4C5A5D428AAB220B01E451
A63112238435280219699D05B8E1ED0AFEE1854A508D83734C34DD9DBCB7E70B
AED86B55CE51F177E147366DD0C3CE7A4B87B7CFCF166D4C78C80FB5E453E846
64F5A9E1C1F301EF2C137BC3CD15DC1C60607DDB0A6D89DFB01491AF82AF8F58
8C994E4F2DB50F94406AB21C09A4D7F216001AAED1D98727E7AF1E62CD9821A0
9162B3FBC4A2F2B3CDE464EB68F440ADF32B50400A129CB0E8108EAE0EBDD653
791805DF2FD4DDEE45B8445978404245AAD502D900D10C175F03E8420DE4F44A
95E15F24D5C7311BCBCD742E6C44E6DF05D9D361B6CCA4D66DF266A3B266A043
7E2DC9826AC6A786294795453C98BE8AB8737194766D1AC516E89E456FC90BB1
165E6D31D200D9C95A07BA18EFDC158977D575FFF904022D527E3538F7680A3B
012E38C7AFB57DD745541DA2D334DB996858F99F7E4BF265A4ADF63B748C8B78
907A3D0EA5715606A940F6596070F15D967671586F9D93B5CFF9CFC7EA3E0D1E
E3DF7699501D7B2AFA8E83B94FD4A68A05115D7B23937F6885B7B29872675183
75D28AE66A66A79A76A718C4299D66407F2A912C537DC532EEFA51EF3F420F73
E3BD7153EED493CAB40AFDF68E7649B0BF76B75C813552A43C1800758CB265DE
0B90C3F3B3AB1F9DA5BCD9A1D9934A6AAA99398574900240A1EA5E3201B66598
C90E99FDB95BBC754F7CC496778C3D278D2AE30F14B670EA442A1F1CA7D4CACF
4357A144F15BE362DAA9ED435F9B38BE8D2324E1C3E75B086577B038C1C9829C
19804DC126B375446D78C96EA2D9BE9AC55899F7887BFAC4639C99431ADEDE09
B31B011B42A1E57CAC90497AACE7107C1DC77267AE9C22AB1BF0C9CB6E345D17
7C879BD691CF006CC74B294C9E467E05D1B861412EC26C38A6E25DE6ED29CFF2
CF1754022894BC74E1F1188493F57D49646D833B6264EF957040D1F32B19DE96
A1A389042BD97DBC8A295888647F4B516E5CD7D039341A6D3B0E9F32627E34AA
D6DDAF1B15A4A29B19710608FAA2A139ABAE851F75B00916C92F137D00C1D1DA
007129F67B64802991836E741C0437078712A6D6AA503C6CAA8DF0726073C45F
4583E8C201074FB33A515AB1F06F38CA2E99DB302E638CCFEEF9416169FCF26B
76CB4ECA23B5D1EF422E63A4380FCE2653AC936D2739944EB2B33E301BEE01DA
76A9143A28F65CC1AF86DC4D56AC6877E2C3682FFBD02E1E06174C0673FBD023
071313A9F436936E7B5B5ADACAD73A139C473458A5F9B2E2A70CD5985F2982EF
65D8CFE501507D3C76C0904B93A761B49F46D9F6F96AF3ABAF8B2837F886CFD4
499D425196B4D11E624BD05635567CBE46E47FC3B6FA5DE1F2360A34333CF421
A5A4B40AB13287EC345441A0B9384B89C01E4406493231A97089213C85384A4A
E28625A45FBBBB924917B6DE9DFFA21FAD08B7CA942A96316A3943EA8BCA5B6C
ACBB63C6F4B9688547A2E67295EDF8C048FC86C2E89B01D6F475E8FF87A22C6C
40909D1632390E003AEE2CFDAAB680D0FD93DADCAA3A07455CE1FECC6C7BF5FE
98FFC2E3DFE0BF2DA92BAADA7A2B28C5F241A989D90C1C81EF901EDEA7DA2D3F
ED8D5A6902FAD7E9768BC57C87CDFCB8FDF8FA01D0304E69253E9CAED607ADCA
9FACCED3137F139B70F79E380BF0494AA49A1EA4F06447DA6DBD31E3D046F77B
EF0A92C5878719D22105BED69971A2755622FD49DF3BB08F088B7E4ED7E2E693
4BE61853260FFFD01F9E98C2E4940EACD4F501833F76EA0D908191E3039F8144
D9FE98C0D1A4419C5E019B47EDBB66868F4630F9A019E891E8A07BB0344CC396
E4B891070269FCA4BF2D87BE8146288FD0C19C23C795B8F6C87929469D864B55
F35949845954CACCC92A54D46A7AB07F048D67C704D0D1B7D923C42DB60C2543
C4E8117AA5EECF25B41D5004EF30F48C6953ABB0A544CE0AF92A8953507DD1A9
E48BB4CD0F756454C7D4B4715BEE536413F13A4EACDD228A08CEC90373385F1B
A258DF89245C10A92F9109750079B9BB0394A7E5AA9AD6CB00A890E5BFA8AEA1
A938BDEF0A8241150AEA012E8D0B7C697384A90068C264DB5633E78299E7EBC5
1F48FB96FA87F4E0EB1D4DF848993E270FFED97787EE04EC8BEC9307E217C916
C861C1B7E45AD1704249F7B4E14C15A992C968D1524F7C1D5C860701DD277272
CDCFD761CAB218984CBAC6BB34DAE85B66A24EB6891AC346335AD06EE96388A1
5BB4B35B83146BDE195208EC90DE5BEB5AF0CC6C4286AB7168F7C42039BBF0AE
2263E9A1B404100655077B530D1A201D718C91B717A692E8BACC1F413139ED58
00EA0207FA49E7FCD7E3D40DED9E0F293F4C698659643701EFEF196BE6D63773
3F44A95CD15438F20DF2589E2F8BE86255CBCEBF2028FACC189721BDC51DD24C
6D8AC02E22719E0676C256546A2DA63750D23BE010606FEEFEACF44727D116BC
DA68B3B8484CE8C88C902983BBF9F1D94140AAAE6E9B6704970586E5E4FB9D96
6F222E845EA127C9F58B2FC2708B6ECF599E0A27B2B8F1535444945E36A6BA90
6F862E1704301448FFD9B807BE51870E650E530787F95303F93D1114661B0D9A
A08D55DEEF057ED493A5D2E7F5FFF3BB6CAA04065B9AC4CB3A0CA51712C97455
C6F05008521B7D3CCDA5096D74C8197B5D1ACC1B2CA4349F7877B44794EED817
2F19BD02D3BD0DE03ABAA6C1BC3B2F5FA6D4C6E553F00357F499E271DDFE67C0
18AD176AABD9B8180B6F1C815AA63F226D2716DA4D08874C912A1687AAFF3AE9
793087557F30B3FA14FE38A41AC5EEA7B5CC35856C9B871F4D82304527D021E5
E4A93AF5887B5EE3F193C766C2248670CEEBD887CB3FDB1D5F53F6F593B2D0FC
F5DC249C3A313BC4330ACA272A9BCFDE2FB9BFFCFCD5CA9559E2F736261B57C5
2196622565E69D8A3F2CF101D2C351960454064502CF91B0E67EED73BCA681B2
75E3581A7A412BDFEB73A94871D51C8960B58BBE9E75ACF70A51A180DF51D0F5
533580189FC4EC743012EE52C59F1300F8A3A82850798F6971A148E6419337BA
FCB43336F7BE11D284D2F8EB6C748D42E3F61837808CECF1FD4705AAA9C3B075
185421960501EBB444C5D195268E1591145DB556CEF704597A49225F2C17DE32
A7AB0ED28B0223894F6EC59959B2A778E5AF253E26D57AC0F2B1DC02569D5640
ED75B5E25C292EAE11A64EADB7AAB3C2309936E42A7A25A0D7EC3EFBE35F87A5
2920191855CA744C074555C08216E00FCFD19F799BAB2220F10B883BCF598763
408CD58D9912A851CA5E7C0D52724F8104A9673E323B95C32F31BAF0F5330E23
1101B0F4489CB4AB4A08A8A61A7D17A75673402FFC5C0FB0172E3A7E1623AAE1
7E796587F4F1EE5095BFC04E555D2C950E6E00357A72648B2A4C276A81E00E87
5FF45F307788C95B81A2A1EC88DDACBDEACE5365C5C02C24A86A7F44B87FE134
459D86B233817B005D2C97383A9DF57316BE3D28530C8D4FD10389A769A9A480
FCD5F2378C0CD12E99C541D7614EED8B352AEBFFFB2DD095FEECCF64704F945F
5BBACC61284F7E2CD38BB28C77B91635CFFD913BB99773ECD3022C277E7D04F8
FD5A531355EB3CC7DE0349CFD04A00CF170E2D6CC8FEEFF6DA08F994FBA2216A
DD3C2D3E9A9D7405DA45DB54EE7FFB465B2AD04A13A01FE324CD6DA7C79E9461
E90ABAE36A58A60AC6F22125573EA34E194032E2A9AE151338CEE2AA48F9D697
F95CCFAA79749BDB3FF291E29C23508055853FA05446E4788FCED57BB354F45B
8E9DCBF57E17255D17E40E30EC69367B8A8227006CF4C5C21187DEB5EEA1BE54
5DB579DEE392C50DEA3E924D3581172FFFD138AB7B8543F172969EC77139ECB7
A1E0543367AF8553F8B4A9D63812865A5C28F39FEE696ACEFB7AF7D6A41C6E03
DC241093F22E24973FC67953F3CAE5C927C8877303FB92ED5CC1E273B83E8878
B57D9EC25A7C3F756A1A9F914F434EEAF6000C2A8FB5EE1CFB3ACDC4D3247382
60C9F7FF9A520911D838F2DA3BB676AB626E7CCA2BA6D6587A01B6405598B4D2
E8C6C98B83319E995373B37C161C08A720F42577F6A624B38AD044D3B4E08430
A699FE5DCAC2D3756074FF41EF28EEF69B91BD1C71B680FFA2F1A40E702369D6
6F684F0658BB319394456B1B403DDEB1D6E5873EF2CE35B0D48C46EDE1A22DD4
3949F44822A72DA7084B45359CBAC809A1221BD293EC3AFB4B200228B3F0F349
4D61A33AA00B3A7E00DE9FA60755D30F7212AA270594953C05CB15941799F8F1
14F60F85E03E85D5260255C88872C96708C3B9B6BCC103720FB64080B22152EC
855A8AFFC2C1AA88F7E5361351322A2AC3C6FDFA115E828E28B8DBFBCDF20F44
18AA5519F9343E4DA3D9BED6AC9A75B913B98609A4A88C66CAD3EDFD520AFC81
866C5D0C4AB6AE5BD6C663DE7E5DC847894BAEB8A6EE1336A8EC9517A3DE8634
1FF9763E846456871B8CE5A8477AA7FB9D9E1778963B1EE6B16C29CC6CF9E373
145D5FC45F65FA6C0B5C7656F1FCE07373B0B11ADAC1B620B59E5374C05D1650
F35AC319F078A822C69F7E726A5E95B026A3E9ABFB2162F21128150B2D229E96
47B4DC775CC4BC8B04547647B0801D30DFDD05B6A3F4183348AB31181F1C2615
15B137159E29870B131748D4DF3EBB257FB4E4C4550AE7D9C758218454B30A10
AB057CC0E2C292144176AB0E45C0CDB67FB6AFC3E580F62BAFC9D3D03841DC07
F63389816431F1562A81BBD67C3BB3B17AB7B6FE8DB3818575EA30CE26156D0F
0C0EDD0A2357C8180B0CA73A5EFC1E19481D665B7C00BA50A8E4460D024B7F75
A0266B56F9495A0CD6B096DDED55B09136C32F52DAA3B412E4D4650A20A37960
52645419B37283A507A6BC7275F7444DD0863729A93D735CE1FE1A0801CF19FF
FA5CB5AAB96DD136B2E5A37037C292E97B62CCED84E594C0DD7C9DC67AD3B5E4
EBAAF85C225D384782FC35B88E80C4654C23E78C37AD3BEB541A793EF2D6524C
6090D4F1965D919E7C2363F7070248CA6629EFDF18BACC629BA1D138F037D53C
3A24B6BF3B9E4AC7FD38173F2FF4BF558202D9EFC2607510CDFC24D4B066BF99
E7C5E85E9D8F951F92DF79A03FA8A53B1D545A9F09948ABB7170A1D9FE97E823
557B3F4D9EDCFA3A1649CFFF43F6E2F1829BB414198DE6974561EE51B674C28D
215FBC1352292A7459445591CA0D062E7CBCA3B2E4F5E13E0BDD4F2B96DD9C62
13053594830F5DC697BCEA72F154670EEC83C2B7C2DB8969865BA6A1DC68DD86
E428F1614E9905EB9AD62704022F42F0533C0E37C171B1526F44705031AAE90D
16DF74DACA5FE7DBE40654B326A84D7D62091C2DD9C48284C40397B38FDE797D
0552A13CE26319B15E3D9E5B1DC4A142CD199A64C5D5445BD819E231C0D33E08
297E80E5B5C1CBCEE9D0DFE5114E8FE90940770335542D20CC39030A23641105
107777A5CD7E3EA0DD6DF9B02B5743A888B45742F3E4A69F0D5CC396FE95A0F7
DF8CB23C9877C09122246A6D41D24F301FAC11FFEA80D873E608B1E253F3E292
B0B8499EF1F3164E97146F66B9E52E16F9B550B3B3A82FC68A1489E678FA0461
45E69FB1EFD39FC26B30F77C31BCCE18D782FA3FFFB421AF6A5BA0E69EF9CEB7
D021926D7C22F00B7184526B6BFA7490BA44B5B7A7CE3E4D104DB2DED7AFD1DF
E9DCE93852BBFCA6EA467674397A290A4FA3515539968F5DA47AC840F4F73EBC
7A58D19364EC8AAAC14A7747221F6039079389576A59AA13E234AF920890BCDC
8CAF71CC336D57B896A39655A8B2D0F889A85D499DAD5F7547569F3C0E508BF2
5DE3EED8CD2414F9E667CDEF7D399331229D897ED104F691A220E84E56BF5CD1
18AF5C4A33F9CD83318B9E454C1C0B124D877CE5FABB941E7F16CD2B91E7C4B8
5740BD4589776E386F91CAEDD3617533519B5819227256987E248A3934B3C4ED
67DE4195EF81CC21525D1A2A999D0AB41C86B88FDC96EA13F0B0FDFA4AAD04DB
E2360799E38D2A1C7EA8AA73319783A3B6731CF6E954A193C94A27DA2E40CD39
8D71C426B4E6729857109EE7C0A4126FB1DDCD01B42E2CA8E867BBA4C308D5E7
18FD056321070BEF58CB3FB444E4C03772BAE7EB225DAA791F900ED6B4108D03
61DCD5F8E486B87A48577D1D9565B0231FE14AFFA7D95D9F38E82223A0335029
68676B0604A5CC2CAC045A5CE36BBD6C7AD02D3F341E3208D892638E22BD0448
2CC6F95C427FDC7EB985B58725C985B6883A85348ACF99F5BBCC6DC4BB18DDC6
2F84D3927AD2B2F76BD389AA120D19B4D9E1CE87E13D4C4E35E675C097727282
8379A989B1F3E9A3A1D8B66CFCA68BD0EE84ECB0ACED338738868B692FF0D80E
64F445FCB35492FB2A1C65C84EC454D329D903734F10D833A84EFCB6F2F4F7E3
32733E611EC1DEABBB26A8351AF44C13A9F2E17EF292357CE756B5156A3A7ECF
FF2E99B3EDF3BF9C16C6D614F9920543027D70CA6B03A6C934E72651F6F0DC9F
34124837C0E106A348DBF20F61D13E6A773A53CBB7C4AD9BD0E54298CB1363D8
8FD8802168F5B191A0706CEB10821B1EF0117F6A98A30EA49BE43A869C4A008E
BBA61707731C16A3A518F38CE4AD5ED9D963B823B0738B2D77DD2DE51BB6D63F
AB5E0B3CD839A393B38DA76141A7BE9AE4C377AFF20B01CC455C7DBD7080926D
E6E349C529D67428DBC15E81B50CA6352E951A6D4323F8A6E1FB232615ACBCB2
8B0F7C8A0CACC88F3A6A4778324F2F348C3820C8E19D3CC88D6323AA5C1BA46A
696B5EEB9B95BB66A322209EEC8AE77442D71CBA8021B0B90BEB8CDABC9E5B2E
4DE9FE4B705C108198EB025695311634B7A10029517346B95F04885C243740C3
1868707B898DB697BAFBB58BF270415B1A79D04456C8C0CFCEA298E834F58BDC
4865C92E4FEE5AC8277F994F94CB25D126A4CB21F022F70BA6767E5883692720
D2887719A3F0E481240D6AC6A69EFF2567261BFA97AE435CE5147AE3A2A2777D
5D190E2ADDA6659FC2EC4F57973DCDACDFD6B927B80036FE08BF513A8F2402AA
3B808FEB6D5F0958DE93D35AEE5C942FE41A7A3FF0EE4BE107A58686D9BE27E8
D34166604814F9540642D3B603467C9C3D50ED1EB7D52EB3AD8EFA827083792E
9DFF391F56FFDD08634E600210EEC7EC789C69F8C83FEB31E91CFF26E2157F92
8FC128FC4930D770B18BD14D801DD996D6B1B310465E9CAD6D1EEEE8CC1CA5BC
99EB92185D4842A8A9FBD7D8082CB7299F42F7A0E22653ADC0AF6FFFFD8CB122
10D553B73912380EF74A6AC05207B94707358719CAF5D817CF7667DDB1760799
3DE140D4B0D4097C3E9100D7BF36B788023B5E1DDDBC64EFA4F275E3379FA73A
1096F3AB98F581D2EA7C178FD5190744DB9104879BC5A402144024C8D250D2FF
9E47C49628D71F203494018D8FB48FAE66ED02BFD9DD956305BA5C014AA4DE99
E10123310ECD5DB4CA9A893E7364E12DC4684ADDFBB5CE4DDD9FF6EDA245D41A
CE9AA70CEA50EC7B9071E7F1456CFB9A6F6F98608C8AF965DF6F70BF2F0B1600
217360DF73755775C330EFB9D4C9FDCA653F049A7E2BE7692DCFD0FF8FB0AE6B
9549371004AC3A2BCD37807F7A707FE938ED280AF267EA93FA2EB9A3FF54AD12
9E818A99CBD930FCCF907B96B44D7C7FE9E74C4C38DEB8C82343B85A7D14BBA8
6EA00CE2C4590D08F54FFE86744EA23B3612CFBDD147A9C214A2F57674C1FEE1
098BE73EBD5C31F4D5CE08E6567798F032F0446CC7D0FCDD37B86741F907CE17
0B579342EB86BDA11A8BA688E95678DB7E3D92FD58F7A52242F8CA097421A2D7
DC6D123A32163CCF758960AE45EC271FD0C502F1EC44714972A3E4AEA21ED274
EDF38F649B62BB84D8036205F5AA1B9B8C516C397C60F27AF0547C2A566BA858
2633C35250A12CD152FF71A54E581298578E3C9811B3DBE524E74CE5044AF37F
720449A7ED152E9AFE9E4CF22C8B1960265DFEFD643FC4B37514EC0DEE01C6F7
98ACB734233AAABD567A6909F502226678F37847C13DB8FD743439A2A36F1083
6D85991337FD9ACA06B469ED453270622B9272C09649EF8A8440E1ED08A48972
D60C0FDD5225DAB65B11888D17F8F08E065F737B1F8D034B97740C3899CAB939
1301773CA61ED352DC95E92E61AB22A913A401C9EB78B6FDDC231B274CCA25A1
0DF7F034F0684272C619DDF3A6D73A519411BB3CB581FA150FF0AB0B47D4AD93
F658C91289A633800C62C50EF7A03AC8E37BAED3BB434BA764F085EDB29D7707
C4B5C3CC57C5C660AB2CF6A52AE172E19D75BAA5CC7CBDAC818797632A88F2B8
F35533E3E910C0129C4BC130D1C29E37DA2E2ED5963A73E351AF591C6D92D600
68EB526A3E40228D66BE29E79425E4152055BA59C799117C736A2DA861FC24DE
D99AA2C22425B5F625892DA0128DAB3D1D9CB902558B60C69063F9117B80B606
AFD92A22903D008E311BFE23A99A8BD9F75BA9150526A28124320828FC28DC0D
FFB57526FE01C6FFB7A4CFAC31BAE01F4B96D694CEEC41742052066B991BFAF9
472AE08F37BEAA29C931CAED9C6BF0294636EA992E7D5830375B3CDC12276068
B036339C2951A1017451FA66C898D2BDB6F3DE0E2C8A94C526F097D88A73E3F0
6A72C60E9BF2B496C2A30F638A673E778D57848ADBE759FE53E179EE63562D89
A884DAA2713064D494FCE13E3100362083A5A1E0A5D41DE3200D39D808A160C6
DCFFF6A19ACDDBDAD03B7B1A1DD20FAC95A32A0F643A78BFD106FB1D6FF3E22E
8176ECDCA8BCE472961AE9C8070F58D52E5339EA2B2E73AC2C9E520CF68B78B0
61B3FFF1442B10A64B6B918DB40575DD1DD072AB4B0E2C10A1DBC5A1940133A5
9CFB2F0076BCE2A5E6AD219513A3920231F3F578BB19C77F6BCCA0C98C63F2AD
351035B7309DDABAD7D6D481398462468A3CCBF48E0A6130C03EA99954DC6203
E8E2036C7D1AC13AC696AAE40C07A63041FF39AE7FF940CA308B3B6250A383C1
BD26866B20EA961A2CEE5E77C3000B743707EE7D9ED5FE22CD4E53D5A7786098
71818CFA6428CA935CA75BD08EC7B61EFC795A234D3ACF195C39F0CB35B44B0C
77DCB455F6140FBD53FEA49BF6CF479CF52992B1A8D2489EFEC41144200498DA
770916CCA969B8B7E9C85707C3788A588931AD570D6676521BA7A76326DE67AC
1F1B0F59A59F4DCFD847A7A6C1FAC15C604CFFCFD8DA1521FC1382FEDD7A78E3
9C2771BA3B3620DC7CFEF0901089905AD126CBEB37050E53B4FD5A70F40AD508
BF707189860E2E167483FE67E0B232527F53AE6C8B891231F096C15F8E0CF6C5
A1E5C9C868F0D3980E3F2D5A56FDADED1B2A98773BC86E53A21E41DB26409610
CBFC8551FEC3BE9F0C16EE7C9BC063C27DB6F4E624DB0E18427F940E37CC6C68
4CB9CBBFF433F31DB374EF969285AD7698F92B8D73DDAC649543FC1B7E5DC10B
7146402BE21E70D7AA97AEBC35093AD6B8C8730C1C44BAE480C0C7AF7560B621
162A3A8190C2A47A3E388A316479F58CBC7428A1E9AA22D28517E680F3E7D2AE
6537FBA6146615E857FFED07589A5371AF725EEC4829C7D067016BE5C7DAAC5F
E14AD0341E02F2D72C06B9AA3BA8D07D019E63B6FF657BCA26FBF9E6A05DCE6F
05823BF8C97E8A0EEB74983D4507F365EA4E9075BB4E603EC6BC25EBA725E1E9
E6257BA41B14E567FBD1726A95D56FBF39AF655A4E249FF9C124B2EB4B92E0F5
8474F85E2EECDE557A40208CD7541B564D0968FD14DE15A87E017B47C0CD495F
D3B6BC3ACC4ED4081AB808028D8EEEC1DE61F3F4025A4AD46EB2E02DFA163180
107BBF966294848B5242C703E48A7A3A074C9319044E19F45D6FE0313E56523B
526CA99B2C51CA7753DF012C698989718FDA5E55AE39C93ED4041BE97332BF0A
A91EE1DB45290C705E789C32182B4B12B1AF698A065C3C5BD944AE213366AFBB
8A5E3646648310F7E83046D03C64299E8301D0846C1F60D30521E8E251D6B501
F7CD963CD635D64FC47B66E38C023977142567910BEA7883C77F825414E9261A
2E1F2F4BC74676AEBF64719B488C125BAF6166D61E666CEE2C8A51D2D6BC52B1
C9BE7140A67CFED3E6352D738C02EC79E5C90DC42D9611077A1D26AFD1D8C402
178E38E1A594A305877CDB3CD45C3895E9892B46EA92D6537D313AF76EC38B05
8E9147B01009F514E834B18681E589259F2D77A485BBF4B70A146BC17840FD52
F8175D33286869D34E084FAC5FBAC2B8C16586F11CB937808ACED40AA11D9DE4
E2C211F5022AD41EF6FF91203399E9471B898DC4D19C06C836C2991FA2C0B36F
A3B1FFC8CA626355DE6207C0B957DD3E8384EDACDA8FBFC922B7D0233F8A6A12
E0F1730794C5C88C9F60AACE4843E727BEA26AF787F3D40C89F731EE65E35102
146E6C7CB9FA1868FC034CECC92D992848D16E29E8EEAFAE9BF6A2D1FCA9C904
B5B1376CED950F015DBD56D89045858B2EE6034C4A4FDF7052472D68940E1AC3
A54AD1C98169AD59E1366EC39BEC38D7B966967EAEA92290D706027A2A3C7ABD
77170C057DAE992B56A0B708949819AD6A391F21284E90CD3F5DCB48D43DCAFC
E21C7E9C636B0BAC47514AAE4B2325ED109E3EC1CB900DC1FFAD34ECC119008F
A9509681CB5CA667B424B4A39B189A06D1470E6236A8C17FFA016D9AA67E1A8C
61B97CEF70247BC9E9C94D39FE699CE5716EF5A768D5AF873CE7F1F2C19F240F
545061B826E7181B122D81E59785D4B5F20707CF507DDF073F06BDD77CE29731
9BD00EA38D71B1E84C247AE569428F5996256DCC66E9A92924288B13FE2421D8
D829DE4B4D69FA757336A43EF94A84B13BE60E94D0B1B95560F02A773FE4225F
6CBB02FA5E6ACF6B044972FBF6694765790DBF66373CE857B04F00A627825D4C
6C103AC5049747A6CA0233E479FF1369E2B0DC7BEC083754A3DA1B0C7AE58A40
C39807946E09E255370180E0A19F00862FBECD59CBCAC80CBA5B41C6C2A3BD1B
745E0DB44B70F39D1E7EB91F89D50AEC752F74E5DD499041DE276BBD23947661
6630AF0AAD5CC17DC48F95796BB5B839B1A1F80AC82E86B9A707187A260DC7C6
411DDD70080EF23735DEEF8D7E9CFD4DA7FF4CB2923B9FF411C3040A20ED39B5
98A99B46351D02F71FBB92016B3AE87AC2B71EE50B455DF140D230F949F2E5A3
603F0F3FA7C0B29B1CA1E6D036146D3666D81B532AF7ECADFABF7FD1B03CEECA
129D67DBEFFD005785098333A83F1335755010BE443215679C01A782761539F8
7C7DFF0058939B53B7E6FDDA72FE99B249549E432ECFBF7EDF502A54F4228FAC
126C446D3A89D6360E36FE62D73D49B68E9B3360C498FA263B5C55C2F9284FEB
64114EEE1F1AFBEC47B3D72C0FBF7ECCD36777A763929E4CE46DD81D83F9C7D3
14E5A59F2418F092CEC8116BD2B40C67EC4A0C1F5FD9B9A99F9C9F8AC7CD4986
19BFB73A022CFBDA75D5992D9944C2C6BC3173D774E0E82BCF4B5F7ECB48972B
020E678A6B2375F01DCA6B1FE82188E45957C5096A2F67634C7C83D507491489
DFD94541FB8331BE1C8C9B9ED67802EA5CDB5DED1ECD3C68B0599D07453D0AC5
301E767122159394CD8559C1665BB29BAABFA280735B3589907534331D4086A4
FB0C0B2CA9CA8CC16AD57DEE5A5AC07F21A1F23C0F98B65D9714E5209F6DD171
6F40F06431AC7A7248710E173661404F05CFECA9FC0588D02250C4C3C0A1C436
1058CEE6F48DDA4B5F864BFC7DE638CF006D12DB6B84212F40A10CD54C78E521
C6B37C6EDD509B8DB7AF64B59D79F11C6F738CFBD92FC139484963DBA9D1F5A9
097582B5BCFD428C5631F38EBFB32865A5F55D0160E3F80E3CF9B631103E6F81
1BB77F43C823A455A6A77F829E0839B0132D3D4E7FBD4AB3FB8458C3EF566ADB
9A3C20321F9D0931D5105D358027399722B9F8431C53C60EB90EC01450B0AE5E
02190CA14D405EFB511E9F89A40FED5BC78A5CA095616998B6A2D02A05F30E31
F8D147C35822D7DC501CAA47B6B59BD77FDE28EF774A0230DDAAC1D05DC68FDF
EF898B928C264F7399BCB91EDF0A15A238684C6BB0E95F552E3A59ECB3DC05F0
D6B22D6668332A76BBB9B93432D4936957EE249A14C35B98B7DCA60F9C8CB9D9
6DE7774168D1A90B572B5E7B5A5CE558B02507BFF3A1E2CE8FB32B44126A96AA
46BDA0E0CC6A1D504F6DD54C8D586D4FF857051D804998CB333351ABA10FF67A
017B1F076F5749E3AAAA2DEAEE2951204DFCA5E7EDB851DC43B63981D1126C81
A3817D0B532E24B9F6A19BB9480B1F62427413FC843727A42015A8320636FBD5
8D87A237695910B681B72154ED4C3EBCA36DF86033105AB7C22331D08675A1CF
FE24DF67199ED1A409DE2CD8094D4E31D3AA5316D456555034070B99D60D0E7F
899325EB18D33FA3A22A4BE577DF7E2608405291737F88AE2019B78AF2FC1CD2
2289E51F3DDF973E98D02620007DC1AC12CE49C2288F79E494A8FFC1C90441EB
2C9D4AA544B04F3EE4EE758F5BAE7AE992ED1F7BEB5CFC67F82264386EF3B532
F3209095F04AF497DF5995421775DD5197A8D04F6B7BB0784963E307530DB127
E79E8D93100E0FE40F8D5A28CC407343F1C987619DAA445F1FCB092C7D55ADFB
1B0C3AB8C18CE79A16345C774C15112A4CBBD3F15D0F6FAA6DB95268386CFE28
934000D3EBC2D2EE9A442EC11C17D0FCE6AAADF0778DC9A69CAAB2027D9863D1
687E01751BA49B40C3A1934D209429ACB55358887885C4F17E9741472EF2258E
B6776906FE4EFB8E2E00B448911F1703EBAF81AE0D3326E0D8D0A89FB0AA373D
302816584E9CC582EBD727E3C3E8C363CB824D2B0DFF0A16D398A407F5F63608
71170F4C5DB862AC1ECA45E73EF9F65CB9F2D9BC68C83CC600FB68E19316D30C
314912CEB53C634A7CC1612AD47425AEF3FE4659A7EF442185C9598D5918F80B
B4EABC78B8C120CF371C69D073B8B3909597C797D06F77EA4DDA1FDAB10E1F8E
DFB5E06E7E56D065D8B94D6A427EB32A971E9197BB35290CEBF14AA46EF7B556
344B31E7A7C5FE2460D67FC5ED81E51AA57D61F889358DB052BF24F7BF807038
2511B397242F7338FB2C526E781AAAEAEB843DADD66B49CF9F5CC84C121ADA8D
2CD75AE56B56E8F426DBD597D32636F00D2D463ADD51B5DDF180770E2DB28CE7
026D4700027D8985E0F05B05245974B0CD8D03BA605E3BFE99EDC9F0D6B1A862
0D8E3C834935A5EFE9CB390568A928EF81C8FF706094D7BAC175CB3C92224EBB
D53AA75BD52C460A7BDF2B15DA1706132710E8924B668779A4B5C30800C6A988
3F36DAF93671C2D39414CAAF98DC4C4BB4D08291D304D847DF22CEE08B0984FD
D382D7BCD5585A3C32134E061B36336C03941B14EF874A21F8874A3EB711EEE7
F309D15A4E6501D7FE90FBEEE11D401B97C09C6CF52DED4904E812F29427DF0D
5271863618112ACE6B1095CB04DD076EEEBD355D7FFD251CA2D5E83EE7745D05
DF5AFD364F692ED23D2FE54BBAABEE349F78E4AE37B2C269059A637AC9BE65A7
A89D8FC53CD433ACDA5DC88D07F6D661DD95DB82C8E3F74C8C5E6C6910DE4148
9842AE05AD60F9766EDBF9492E28BF4498F4FC320D3A9779F8F0E4F59C29C369
6E339B99D21BC2DC8BA5313C9D65AC5D5174F66087BEB0DC0204544E752B2FDC
C06989F8EE67FCC30BB805C92346DEFB81F720F9208778302C80F618C495931A
E7A0D7450C7A32D5095B1D78A53E0CBA0CFCF6893FBBAD67D526C2C372A64124
AD934C6C4169295E6153BC99B0D0E0A40F9C3439A49C8109A8FA6FEB02346817
3952FDC1006132F9CF25E7CDB2BEDBD91A6E72FE1C5DF8273074E4EBF928E97B
FABA9C942744523ED27D02952B1E18C32DFF59734643339F43AD03C9803F86F7
05C8BAFF260AADF1679D48F8757C07FAEB3053A19C659C81672423B8DF151C12
5FA85B9A1D527758AE719800D9EF1383CD44BD65806F222DE501B904FB59C599
96859A73BEFF67D06E50457DD442FAE76D7D3AEAC7AB28213682C5D498FAAB4D
F66944B2A412E0B1DB8283B6B1FFB5F0CE834584DF66BF4E14E5CB32780A443E
A127DF09DF2F4B25294FC6F0B66A2E2999C8C2C38E706FF7D25F891A9AB7BED3
DE01888FF34D4E79F6BEDED32467FB83B5D1ECB5EEF0971E2F1E8E23B19F8A5C
999AE398AE833C76E92A3CA84FCCEFB6A0EFB61B1E68AD89B797469B714B8DD5
5F0944990FE8DDBF29B33831FC97F3196D5754732E2470073BA69B7B89F466A8
5404630DA61A141B6A6A78E2E912CFFDB2B836A5E304B88C495E1BCE8B4A6212
F85B600D555097119F9F8999668143FB12C6D7F0C7C034D44F26997E545BC407
09D3455608E85C170F6186A87BEBEEAE298B950EDF7CB2ADBEF095F0CCE1AAAD
6908EAC031D0027E6DF7BE99FC9E6383903280E2F98BB31DDA573431CA0B7E11
422CDB1BDB1E7EE7455AD9D883FCF480370FBD799F5B5C4F4717B39990A2D69A
88EDFD9C22E24CF03E85A5F13BFB495FAF8938F495AC074A0801908E872CEAB1
CB485A57D60994D8857038B4D6E03D0D83E18262E05BB9C9C439D2A88D6CF336
A91CEF7923CB3BE1C30ECCF6E620C8597358F3FAFC07E8C9193219B56D7573D2
B99DA5381DB1A8E031301AEF683670DB387908BE7F7B42BBCB402931E0B5E373
317ABF3D87209DDA4800985BCF3DF269A371C0539CDCDBF7CFAB122659EE1822
B0C8E3479BA8D840033432FE9B30AF7C857436FBC70D3B7ADA7717045D2E6717
9EB3108404C131BA6F081701AFF19482F1842A151166DFF0914323FC3DEC5481
2AB3C37AD10AEC433F81AFE50766371A707DCA06846816D80AB39266E83E13BB
05BE4A24498FFCBAE3C357D626FD3C8F7BD3883AAF83DEC4A34AD690FE0CF5EB
EF62CCBB89B396825D45EB419B82156683E2045E3890C50AF8D2D3BC3814E983
8D9FEA37D69414DCA4D5B9FF1FA4A865869AAE95D1A7397DDCF356FF35491AB5
B5C567A2C676720F0BDD84320F7E9BE4922E3DD304EB7221D0D2F127D3A7BDFD
910689A15675145A9DB22D711AB2BD476110179132847F3FA19166126A65556E
5B7D32297F07C4D9BBB892882CD4FC8DD9D6013D47A7C96EDA3D2819160314C5
C33B550214A3FDD77D3B2753934A1382C75E492261D87DCBEA5DD586773F8242
45409305B7686DFE304EE61D2F419863E31CF15F4F50C9F99F8E000F2D4F9C26
EDF0FF460247D6100B8786F0BE8FB063F0EAF80CD120E0DAF5120E935DF89082
54CBD0BB32AB28A5FF44FF6819A849D55F088FC7E1BCCDCC07FE03B3003933E0
66C57860142998A67F13E464389AA415EB66FB98C2EFC45FA4CE168291BFF1BA
6FD5730F5A714B180B62F76D5641BBBD226FFF8352C1EE7CA963DA8383D52F1F
B6D03EB5D3B9A09FA972C0CBBF86D7ACC1608D86FD4BC87CCBB99AD4B1869802
FFD37DB4AFDBF255B0C0EAA5447B5F076A84A4075D79F29BD1BF20596E0BCC92
5CEE0D5AD983E5A9946AB99FC845C59940E10B3817BF78AD2305E10191E832B0
4C9F85A90100EE72DD7B538C740370E367F44C35C8B3572F6AE6534DC97BE8E7
C3327DAFE81177064F87A0A4BD0774C92379A139841DD8246CFF8400BE876153
92F3626D93B6FE6E537FBD9763C798B8C5A18B77212CE90C07D3F918CA42E915
03C99A910DD48AFDCBFEEB61AAEBFD393D8BF51E3FC1FF7B9447D9EEAFB051A8
95747F113FCCDB871732BFBA245628588DB97846C586CCCC6E8A887CC44DCE01
3430D891FC790170107AD5DD4F958CBCEE1AD6F567B1D2EFB77E339185C878C4
8ACD7AF888A8A2B035707D90DD9D5A770D042F7D77A99056C8EC963322BD94B9
D0AAA7734E96F5A3AB95507B408460379D999DF2CCA8590D506ED2371435F17F
8CAA286271D14DFB7CAF5ED6B00FC8314602834AC30E58C6DF383F86D3397E8F
623BE590F51231A8CB7F5E00A2A7EFA0CEA86BABD4BE7ACB99A798D1E48D2E5A
8FB8373C9E3DB645FA8DA29856C4F53D8CB5B7425A22998A9715050BF78288E9
ED4237BF50A0199C77EBC27CE1BB4B88669832B0C132E1CF23AC623CE1D095EB
48657E5040AA489C6FC71B4E6E15C3AFC11E0F8B6237528645781D2E3502A83F
4046054A8ECD2B1E46DF77473C4EB69A9FCC4CE0404C471F6D482FD48FBAF9B2
CD7C35782A2809E851FFDB70E301F87618613B70B9C1D569AD76F3DD82562092
7D2D021E145C3C7F347DA5747D23EB0EC1C64DC620D58D3FA2B32AF7B14FD3D1
ECB9C31614865C95694B2E4110F6A7F49484808F872AD69A883B6B4CB0690F20
3B88F6D558258B2B07FF01FDFC0A95AD484FCCDCBC55D0060FFE0C9A4921DEF9
3F3BFB78F818805FD9CA115FBFA0B9C834B12E9C28CFAF538E678BD3741DB194
2FAB472527A3E296706BFED92372674FFDA9A712B44206C7E88682C5AB597DD3
8D7B354640DC8A12397A34BB97A45BC0BB538C0534FA819DF61F9586EB8E1C65
33E2A25A734F9B48333D4FED5C310264AAEFD229B37324A08DB5C15200EB7213
C5959855F7A2524325DDAEEB307CF56D2220BFAB161563277F1167B4BE26D0B2
627A07FDF4CCFB8F7CAC0A2B40E614EF953B33B249D54C6E0CA82B891B0F1260
45A290A24A74A407B77523EF5DAA5768558A85DC28434007AD3DDE389A002EF5
64B6EFCCF95DC5CCA86CD3CCF49D83A067860396C05A00F52BA9FF6BBEAC7CBB
69D8DECDA2EF79E515B5505D6044B335B60E6A5D265EF8BDBA673E9D43682862
302D2FA703EDE498E5396225C334EE8071E1D80B749E7B387D4ADE867ACC7C83
083D23563F34BCF753F4B2A10714647B82FAB6AFDF1E641FC72A4FE8A0E6CB96
75B6DA3BF67924CC8D1F6A58A1BAC11AF0A2AD25761A9C5DC3E1F737179D5A82
61D5C8ABA0860A6B478BD3C0E1ADE7C38B560C11F5113E2A6419C5C591102BE2
02142F0B14A4F391BD12DC8823290C6D999495A455225AB17A907DB302C8AE7A
23A2ED127FEDAC6C84197391646C6A4B6BD64738B56081EA49C9CFADCE7CBEC8
4A8989EFC956B2045FB5DD361E0100A037CBABEC22E2026459B40335D665A343
E49E436B2E3730E4258965E893D764A9C9BD68A0D200E042D5DA2B7C3B197D4C
2D950769473630C0CF5FADB5CAB5C88377D2C77A9E24651E33C2D08D4F3364B8
29C54E9D3781F0140E8091905AD1265E31EFA7FBF59063D88F5409729123D810
BE801562F96B14CCAFF8F8292424C7706BC0A6BFA6D81FCE2F96F232D83ED5D9
AF869A72D2B51FD064773805750365C86AC18103330C96D7B829B08F5A1770D2
E3AF9AB571D759B2B1F32616F1D4251786DC279155D693F974587E1A0A74C2F5
60B02667AA22CD15AD30B2CEC7C219034D530ED5C7D477527E1F370032D66401
036DC17D1DD87CDCF60396AB904CE37E460FA722A69E4239CE58EB5C512D7135
BDC2647436D827D0EE3BF354CF0834517D51EE557649B0E51DAFD67FF647A914
3BE6FB4228311EE96731A1F270362E40E5D15FCB2C7492F0061325CAE7824A2D
D1347CFF3E72B73E5BF9B4DA3206D6579BE50F76BE8AF345B65D2F1378573E55
409FA2A2B3CE205D1128DEF0847F4A60653651DD16CFC1906F485F4DA17E9C94
95BCC10C09193704F438CD15ACA50126946668E752E1B89D73B2A996F0195574
3678AB7042545B9E85F06805A3838EE078EDE2FCDFF3E384683EF581DBD13C03
8F7E831AC08F6C0FE756D72C07583FE05B64675651C148751F6182546D494FF8
1EEEDBEC2450F25D2B9E7DE2A94391AF7BD494894E5F57EA7229151AB44F23D4
D08CC803A65F7C52CAED8A9C081B78438273B7AE770D000C854E47FCAEF3E10C
D76DE2D727690426BD2B8DE65F4468E52C92E9B87C0E4E132BED46A0969CF01B
19A4EC1F7EA5FBDC8A21EC155C5C62777EF41B8B1B38BC2C3C6AD8C280970E39
362EB122BE28DCE24D5AAE9AF18F0663C8C6F6A76844EC8AE3C35D3E4913D8C5
60F19AF88768F32F8BBB3E49B2D40BA2FA101BF35767E0777E15A813C54F8F81
2455766BC55260AAF9D498B9FBE5087B3A9A19958C8A86DC2E2335B478C88302
F23EBE1FBA05CCAFC99DE600007A38EB099F8C596AA885B71E5CD5A37D7D9FC0
E4A64A95FCF658856788877E1802D7A6FC70921432DB53D3C1E8D693E834AB11
3387598F3E8AAB97B9FDBF400BE283B1352E9C5718E1BB54E3D4A3B93C1FB4A4
14C774FEA0DB04941AC725F034B56D55B812A20BB35D37CD5139AE36EC77F30B
1440EBE0C3F390BE8C1ED702F3CAD3D22B04910023D4487DF9B62CD85E9D814B
182175AEB2FC63C247D806061AB301AF99CA8F55205A10618410A4349DD5AFA4
22A14BBFBF583FBBCD8479CA7F7269DDC9D9658F360F0061B4287391ADF626FE
F48821593CCC851871B38D7B8EEACF3527ECAB8D4ED9E6A0DD7C0F0BB691F7C9
7D033531FE6CD5BF1F8E4C7220B8882E72231B7601ABCBFA8D3128E501099A2F
E533ACF03EC85B10A59AFB2C1C299C191372370D4710658CF17947FDA482E011
47CD704D381C0B3FF6C9AD8819FF731807574BEBB41B90B6457C35281C7BAF09
DF4ECAB3782C91948FB6A7E539C25BE3A02535B2401DAB2F498E98EB4F8D3453
C3607A89033B52B5EA5009A4B84EA758A8CF5957F88EFE16E828186B2E9F1825
DEEAD4DE0074F16CF8BA178B725630B5E29AA08AE8382D91471ACEAC5084B378
D768221566154B21095AF7F8790F2073AB07F132B03D12D5D3B3653B15D57285
EF64D244ECF29BEFCD971BA371B77B0B5161DD63D6A8DD2733F2BB353799B30B
0B7EFE15040AE406953BE78615DEBE60200BB2E4B129328950018BB399DB7F8E
338C17444BC415BB47FCB845A71A81FB05856BD3421180C0166CF3FE592A91DF
1E4B15A9F88EC62B8B1ED4B07A120EEB341213BBE6EE21F6E6C13522A4152578
D88526EF2FD7CA39B1A72B1E6658BB0368518742918CD7B0430DCD90791C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMDUNH10
%!PS-AdobeFont-1.1: CMDUNH10 1.0
%%CreationDate: 1991 Aug 20 16:37:03
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMDUNH10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMDUNH10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-40 -528 1010 1028}readonly def
/UniqueID 5000773 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F116CF3C2F1543E1ADB2B5504C72B6F
CB64B7809598B089DF6B3960820D3C76485A0D5042470E1E73D1F6268B379894
F9302F310676063DD37D9037692AEFE7B657E22CF832F609EC6360A10E560D0F
5F74D30CE7C4DC620033D42F770F2F1871598FDD4271BDFA86BB72D0FE7E73F7
17E17AF5B9C98A3AF990A20389B7B550A29DD2A351550409A3C57080C582F563
32393FDFDB2F2BD41AA24FB33FDF2F9FEE937D3EC689F962DC4C1B472E6E245A
A2F45F1FAAC5C8CD6C38BC5B2D523C9F58034F88076E3B5D136A6739AC0BD3ED
1A5D005825608FD08EB7E6BF89BB0E87CFE8A76668B54B0B1F34F6D4D12C693F
934A1668E36F026AE70A2D00EB973B0C36950A9B6F8A48B86C68AF52EE4FB2A6
302E647E793AD076EDFB119FEAE10DA4EE4704178B180AB4D38E530EC1368814
645E5E5578C4A47AEC55678D4DE1D7B65AA2F320FCCAC0857DB0455A7C2E1BF8
0492899E04EE91559E6835DEF4582AFB5EE9C62AD3CC4887D575B5E721C53907
8116ADBB5AF44B1A425581D051E01528E12720E2F6FBC8110B951250BFBE60B9
08E083123DB9FC00B5F04BDE1B1448B0386AC292122B6393FA858B8BB952B927
F6AE75FAF6478CEF3234AE02F5771D4CF5B47157045AFB822E7A983AC1011B52
8E84B20AA06DAA97CF8BF553CFD220B301D9E1A8C798B4C5B12C3AD58ED3CF07
D37C22933ADDC71EE1321641E79D09971E4E5224588B4418D83B796A23B92722
7E51E877F11C4BC76E4187217BC38D75C1C905B837E703278B20204402954579
5A4EC08092F4657051573F6332290E522C15C317932F7208571A56F47ECB6DFE
AFF137C9A67377F09EE551129B45EC5CC9F6E57416A08A8BB50430C50EA69FB3
A6F94A1E76723081194B2E998CC0B8264A6B7F2EB567C784BE890756026F9BBA
531058182AADE3E93A04EBF3D10A7B78EA88FE1025E41ADC58BD6C1BD313635C
B6AD948CB39AF3642438D156E63EF49BA59B3B80A96861343397D2B11E56CDC7
15DA07BE97313C6F027303C4DC0E7F03AABC323BEAE94C36F1DE278D47A693D4
3608D8537C2283DBF7EC1AA51F21F029E569FCF4664A03959FCD90E1DB5099BC
E2FCEAD8C932F8FEFD808FD8F8D57126BEC9E9C0903D06D73BBE15454C5687FD
29FD8DB438D79D7BE270A7268F93BC93AA4349B0D467CAAC78CFFB62F229FB88
2ED2652209B4A86974986C3BE0961A00CC36274ACE5BB062A0A818FF57FE346D
9CFB5CEE10CF718705A3D7EE08AA6731D62A502F058774E841F1A99BFA4FDAC6
9ECAA73E75A311B13892F18DC411A8587CB384BDECD19C40A77AAB12ADD62307
042C398AA9D48FC6385E1AF6E2090A1C5A90106B49CD66C88185CC67CDF9D559
ED723CC8FA1031184357CD0643133FD3BD6BF3596EBF237D24BE92041BFE3289
416C78C0DC9D498087A34933B140DC6398806E5AAC0992940D7E6EEA5C048891
703F9D7B8F3B34FD1A15B012202A62D544C8A91920DE15F65D1C2B2EEF391A37
BF694C05DAD6FF17D8468638C315CE80F557CAFCED383F8D668BE1F134C6DCE6
8D68D7D47448D993A6A00457170691B663ED1DDF35354EBCE8965B72CD36ECDB
C92EB4A499AE7FF0BC2133251FE8B19FFF832AA7B336E74E8F7BAB8586FF60D7
96333674C4ED5E529116C8E749247646CA5048ED802428540FFF77BA79149E8A
2B921397CF53BB9B4A3297231492C2899B43C543F3E0C6B1ED9B947EAE07221D
0D5674EBA7A3ECE67D3E620B339853135F71905F03FC82ECF2201D7E6A888406
FB0600C78852C85A9DA2F136D54977CC5941BD6653F0C3204BDB3C2168A92943
2704D44AB24EFDE904816AF20DCFA7680B66D8521374214303ADAA950F9039F4
E47333FE9F34511612454378B5B87D225310760D00332BF60EE6C15CFC6590DB
6B1A90510267C0C185ECAE51505DDEE923E0B12BE0B1F2F5CA409AD5B18FC8FB
D4C8C96A1478D053F0BB48433CFFB33795ABE918282511753D9F7BE7F157F4FF
567B6617ED76700D7A2367CA09935A6019A6D27B0811F4F165F2AA4678BA679B
DB19BC1FE8E068B56EA82BA1F86980C156B2282F7070C3E19519F7AB786D1D92
C250CAF6F7DF94464508A76F7F6690FA9F4DB8A93133CA286F1469EB9A50F1B0
FB75D8CEC578E872EFBC21E14C085AAC5404DDD6D4E9FC45B6A66470133B3F1C
662F7E20154D87637E77446E586C9335C2D2511265597B6FD94695A95E2608CB
2B77F1B554CD388E6795764E7432F3E199608CABD4DDC24712B9E6EE33004F5D
FABC1A620542041A9A3C964BF36DA1B2306F586D7529AC348BA13C5F89877442
D3D1A724B6D89BCFE9CC4AD20319AAFC8F11CE245659DA599F4E176575ED90F3
13F46C1C51E81906C4E7E3E6ADDCE021D3E162CC99276F00D0B3AC577612DC55
DCA39F4EC229A6F692FB7C0660FA45892F3DD633D7FCEB84074C5529F5DCA606
CB24DD2A604084B5AD178AF38475D33B92D13CEB2D271713E42867A43913145B
D60A2D256357D3BC290C91E311835B04B5F44791A5C1DF7AABA71FCAA27D97B9
9E962322C6F3CEA0EAFC36B9C3D3B133DB7345183604AB9E80EA28D426D13B91
64385E2C115C894F59D93E8CD4C818D853718773195B2DA4C38481CEA812BA36
C152551EDC7F4C9D183021C26A3E6BB3FE4DB6DB8D3A6A2A2DA8946E5EDEC79D
1578121144D545659F1C6E04DD37E750616B0556035F5AF42CDC954820CBEF98
45A188425EE91D76A9DACEEC11584E375F138999296D1AD5966D0B8C6B9FCD34
7CC7E0897DE335457C71E741223DB9774F514F0C1023B610512EC421F04F7E76
94F3D0E7B2AFA895CCA1E1888039D9F94360EE036B73CFAC4D7BEB912E242434
7145232CB251525F6022156E9024E8E1FE1E3439A636BB85951F5F4DCCD0FCBC
3E900C6D7CA02260EDB1899E754A4CA6BFD0BA4A8D617B0E6F93F465F7475A76
EAA22D4567C8A50211707845BCAFE6EFDF2F260E34FF8E8BDA794C110AEA3B3E
2F42FED26F6F88C893128566CD87511998F36BDF132E8D5D17941625BFADD203
A688B48B55F182E57B50B53BA9A8D60961FBA22B0BF6160B712238B5DE4A9E08
FEBF7583D86598B74CB88AFBE4CF9B13BB64E7A3458550855135D3FE67B1076F
DCE9998BC864B9F31C9286854EABB6CEACF711A56C1B0CA55F23261CD421863D
5220238BECE6850A9660491E6A5D8421EA5E4C0B00CB66CA8044D71B47419018
00FA7C6C4A8E52B04EAE40C32D933561476F95595280DA8DE91986796E543F44
93DC771179D60E9129669D6617049320876FB1FC784E62E374AFBDC51CFD5661
B07AB08B1716F4B4AA417FFBF779EB911D771BC6826F2A53051BDC6DF5F039AB
3622EAC3195593532798867FAF6412C8473250920CD35C78F797C3373F534AAF
D1FC82765A61D288A248F320B20B3BB2DCAF065CD4DC97A67A19E3C233F59BEA
58530C9C68C5A3515EBE8E81C0AEBDFB52689A22817C619E58353608410712E9
F9CD90D2C3456C31706C24A68BCAF3909DBD2E5E05E1C7EBF407A2F44D0FC115
114FFD48A61780E3C72738495FD6B4D54D6962F7808C0A46FA5765B8FD13089A
B210BF4464403820FCDBC79EB789964A1CA04F090ABD355D7FFD2CC1EF1E7621
9DFC0834F874420E61954ECDD1B8F2AB571D8AC6BBF7775EEA4C5D6BD916C2DD
0EB1180D8FD8EECA7946FA420A64E37A0A87D02E451DA6B1BB419B7A3BA47F65
1C2FFA68F00FCEBB84FFD19D845519494721BE644ED3EC6C45D8583FD1946F36
4F12EB4B0332E854275AE1E896250C636D2C3E5EA1C33CCA8095FA799D597E3B
7FCE4635A158093D56C04AD949C8EE416386E86BAA8FC6EA685785FEAC89DEE9
68E955C22B47CEE4641662C7AEF1791D8F0D8E878FD5BFA1A86B178EAB2F6E4F
39898A09F8853414BAC7E8E29EE3CBAD920322DDC0497E4BFF8C46E288616769
2EE3A28577B55F029484B41EC2E1BDE53718EBC83EA4F5C29258764E7C36DA15
0FBB30DA9A76CC7DBF9BD4A5044360B93EE2142FD96BBFC88CD8AA4A10CB0AE6
D738F3EA8BB0DA3EE63B45D214C5521D72E3D513AAFDDBC0ACE4D06F5219E85F
DAE520B9E625317301317C1473376CF5D1E8CDF48DE36A79E3A867020B68D328
9A53F999C3CE94867C193EEC996332C2AC68833895B301229036825A4DC60858
F418C6D6EA6DFF1DF486C49719AF851504ED15D34684F7B7742E8A80B395D9F4
283601366745A6BFDAFD9BEDED14BF9DDD299B9BD87CD0E50C84443B5B09948D
5CAA364349EEDF4C7038CF7B097B297146AB826A3D62EBCC77E6711BD46ED580
08BB129FCCE39C135D7C8FDB7DC8098D5F64E90F83F3100D80E711B787F06E3A
B236795D4D4DD7EE4A3F9CE7A289E9615AE21D7AAF3224C37C1680355F2D0ACD
347F0537D96000CBEBF5374E66B1457B74C5CFF075DACEAAD3963AF4038662B0
61D15E3C229286ED0955B629B132535DF2AFBCA316114C7E3C0EFF28131DE3C8
CE30EBBC2A283C7888CAD6A1B318436A52EB742F3A0306FF33AC3F074FACCFA0
26DDA6CD85147E28A4E3F09296EB51B655E58623AC4E48CAF27A6622263071BD
EA6D9C6F1BC143715F9CFFC4083402FC3B346F3DA3E11532B3F1958F5EEA24B3
1A70FECBC1B872B0D362204C1913F1614E379BA6FAA6780AE2AD14D287E2E0DB
42744BE2D551021C966F5C034DD10081A725CFEA57DC3AB447B324B9122A1193
71978280CC64B8481420CA585133668511962A8179588572BF14F2836EA87CF4
D0AA41B13CA81F23757E8A0144A1B18FB800380F3F214256B12A78DCA7DB5861
C684BC6C41BB715DC3729C2DC3A944A7D085A1A5D6CB5E43610D8E623B443A95
D442ACA17D66897A20A5D6C1368DBB2B8AA7703C445C391FD8F977175123CF05
534EE6B0E539BB40633E19B1998223E8044AB012C096580961D29B40B9C05F0E
5F2F3DE6D72DAA66E35944532F6B6291F8A62B78B7CD0D9BCAA8844F5F5ED862
1EEA4DD0B79C332ED39CE6A333B8C485D7D370D8ABCD076222E9DFFDEAB7DB6C
A0A608630B983C6644E7464BD78BB45AE56AEFE4EC035B3C691BBA38D3A9DF90
1D20A2CB318A0174AFC1EFAE849944090FED35BC10302DDD8E072D9C2A054CCE
CD7AC62E168A52B43B0BAD86D776F3D7FBC4BF88B36A5BFD8D8AC76DEBFE44F2
609F4B359451BCC4B6CE167787E1B9E3A3F3BE2D792A2A425F08AE35CBCA3CE9
F9807C5AF29431BDAD291D00D781BF12A4828209B07D3E06D8443BD48AB72DF8
DAAC7BEE5B29A010E159E15D67055C118A96BF58062248911D0B1AF4E5F40453
4BAD022D176D9D6CC1BA34E885A60DD72AC6D9F25B4B21BEBAF558373C1AB036
1D650113156FA53550452F60D6E20F277743FF322729CD5BA15990C501201F7C
123288EC97152C7FE45D82729E33B81C4BD0CF27378AFAB6A62564F78D303B5B
E3F7CE0C5EECC5F90FE31E2BB0A2F9DBC27BEE22F69294C5DC3C8C94485893CC
76F93037BE3310E18FEFC98972E2F4ACD3A2011705A314844219A206B7124003
EA805D43F02145D496321786A0829CD57D619CBF20349AECE51FB8D8E133D469
85C4BD6539C36D693BDEABDEA24527C5D9D0848441D7E86346CB2F7849BD4DD8
4217D72177BE03BE82D1751E056C38E56924A3E27A26160F143E10ACEB96E256
14D8208E508775ECAE64D338CE0C9558CE4CD3A8D6CB756568B37DFC77EF8131
BC4A8A3E1A71A7B226353785F330F751F040C337FF6467D17C962E3072A88041
771B49F318BA6BBC07A27EE15ED5C5B502E566373A9C003D73F6A9773BB72D26
5BE74CAB21ADB1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueID 5000794 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CD820516F4D0
9099746877774B20A02C3C3F0EDEC30FF878440F28AABBE226C2BA53FD10250A
9B1EACD5CC33AD43D8C21433706B73B84D79DCFC30B004601001369C7C5BBB49
BABAAF26EE6DE729A5D83AFC14AE275A7EB3209372C11F2788DBDC32BF48FA14
F0342DE644222A112CB9A669EE33A083F330FCAC268CB15B6B1942B070380B4A
ED31586468525EAAE39791A558FE6E5961AA899366D24551A75FB679C707CEC6
214AF8606D460D707EAB7D4527182ACF260F8402154F7DA458305FDE36FA7A80
D23F19A0A4F3A455D4D3879FF0B816024DC61DB020A2F3BAE59BB6F52ADD6E99
F3C03F0F0CD78F00CCD46CF6E06247B2C72942DA123C379188608DBBEFBA8E3D
8167B53943995D007C4F507DB4A59122B34EA9ACCCD235EFD4BF9AA81E381DD0
D15FCF49E152FC5D960F60F932E3A08EF0545690AA24FF4AF29CDCC63C7A04C9
263F11A41717EE8087DA6FA8313E14BD7BFF31586B45234FB4F872405535FD02
6B2DE3BB416ECB61E9FB2B3205B384AF6187CD29FFB310FBC34A254943EA0A55
463BF8BE88518C709142E68B001BA3288E3A2E30FA9BD66C9DA0A2E3B5A33091
7E88B38311F260570C33C9AB8F3B06A20DCE0E8EF4AA056C468C68E8BFB81679
D26C4C4BFB505A5FE0AC24E01F5A9A5C79EF07F3CB47721CF935FEF44BD0F89D
7D2D60CCCCB0740C162A378A02E365EDDFE5876BD17805AA56C14A1E1B7A5454
4EBB268FE90B8CF2DB4A151B87B61496160490EE636F9411C43A90F6FEDF88B7
D5864480104AC8B6A0E0D4DFE43CFCEB0B1541D288CDA94A02CD8E37CB82210A
9C859C41211C42C73B4C9B0220884CE23FB7B002E1952E959AD8E2F308706793
BB06F5B4479AF0F051EC6F4A69719169115CF828ACD4D3011F8068F61BE605D3
CFDCAC29AD8F2475932DDCB86D008FB2216B26272C0D7F47DA8D70A20DBB68C2
665FC4355DC7FDA021967F2DFBF586A3F310846B0B4B3273315441B2149F7777
7CB42FA79276F6AA3C0BB7364E5763506F9EBBD5EA2555615E7BA47740D9B39F
783A58A1B4A4209BB83076893432FB759924EFE7A5371ED68E7C635562A86FAA
8275B25DD6D41102F3F92DD7F52FD775844F77D3ADD0B25B38F989499DE5F945
4283027CCC418317A572B7A60821AC1684E1EC21A932651A40B76E176E4D0FF4
51ABA408023BA9618E7026ABB59DF2891AE684E5CE475B62575331392A7D4B05
DBF6B779CDA16B7D85B342D37325DE8E480B62EF1FECC7A0694837A8A9D5B053
6501911BD4420F482A17E63ED7D5194CE96621834A46E276C1E950F2BA9A89FE
81842A6CD671E75E14EEB65D5164D812883ADAC19EB40B109A3F1B94F767F098
13588AA995B72BDCA56F169C4CA226C7B3C7B07C7F8F2497BD9AD8EFF090A65A
47F72B320A98A496CC19D4A7FA642D640CB4F9E38E6A8F078BD878C2BBC1E0BC
61A8DBE3985824ED9396EDF3E20ECF13C5B1D103414A8827A74522C3BC69DEBD
E97812343E141BF89414B36163A1201058453C85C665507CF250C141E0E592C5
7064336454351FD5A5F062BE546917374E944312B0A2A137E0E240D83E4EF4C4
73C53C41F6931868A945E13C9BE285E7939F6806C1675ACC8EC1FCB30CC2A162
787D8CEB12354379887520E0EA6C32350562646089606E97AEEB668B226D7970
E00036F9DBF2091970154E260DF8B7664F7182E647FE154C1BED5CF1E9018EB7
A166C29CE8E8FAD5EE17716B48B1B9371D60150E47B71FB188B812F7F6945141
547A4E5D333ECE5695319EADC806FB5644D4B37FFC2F042C02F63634B5C9FA6B
97CAE0E976622E71ACB9ED7866EEC2E336C997CE7EFBCE76288D4E820F1F7391
56741E09660A4C193F3061E6028F54A8FC33D70FC0C1D01C749116DE096B8D5B
51208B7CC689330AE24068F7E916DF2E66626895E4AC655D0962B160BC10C0FA
0F85E3794ED9318DE3214E4B314EECB95A4CABF5595930809A7FA4A222A848CC
2DE9EF1D8C5850C08F2C621AF3532CD19DFD3CECDCA186AAEFBAB517E201D4FB
9BF14F3DD0803FC1D6309FBA101800570E81BCBEB3A9102295467FCD2E2DA35F
6A5204AA0E72A32CF9528E229E47AB45B3D8C7E1EE7BD7C0B690C9E42E96FDB5
266C042D565E0FFCB1BE5B9FF0E5C2119AE67D69CACEE9D563765A6818B29F1A
B2A54C00F803C5C3F4E9C19FD3F007D83F2315453178F83D408094DEFB39132C
535197BAF92469601722E305A8BD786C762FED3864026DD99BA96E68E65CC53B
832B22665A3045216E447793565A7714593B58E46ACE1EACC900EB5C8892E70E
CF316CBEC1A4BE386B5D15ECDB557C4EAC87C027631707BE52EA8921A5133716
F81700F99026529CF2F2026AACAFDE082CA8EFC02C6893D97B4D992665E071C3
82014A85236C236BF7BA19E9363914FAF9FAAAEEDCA577ED1BE65B9694C8CE62
87610A25D1BE1384127329944F023B6E6162680A2AB78B2AC73856D09B3562E1
D18491F6D75BB0EF8B0BC8B7A90688C3F1518B2235C3609C5337FCFC4ECFE000
A0CEC2C46DDE217E4BF6F166DC1EF9EA69A3961F332F56A6B73FBF300E2D1461
20236741BF47A8F7EC3CB3753BCDF4FA11E78BB0CAFA88CF61F477571F2647A6
685DF27BF18736BFFABFD69E3E4A21FCC350EEF444398AC230DA7983C4CFCBB1
777666248EE351B250408F649A3584F06ACC72CB4DE56B16A5B7FB4FC68CD96F
FC269D64B375BC0D2997E43FA1C221ACABBF633FEF80DD479A3B5FC612BB5293
5B4D2EEACE33E84D1F697057E13EC28CDA7BB9AAED8D00D0B18B1D738E11E44C
6EB23679245A6CC71B5488B1AB786DE941B1521D126963AFA8CC37337A4A9DC6
E78304AEEC97FF6623539C241573914F5CE2360FC82FC43F1D3FF7A6025DBADC
E58F5372BD63C136401018F8AB00D12770AE7FB3037F8C7EB24EB4BFBA84A824
581F5CB3F1B8F923D740E5CB5B1D39671D7D0A1928D7F7CA2F4FFDD0F34C5005
C46A54C1F5A3B5532776F647CEC4FD9F878BBF8AEB8904511935AE1EC729B405
1EF5ED4A9AF5BA18DECBBB86A88EA6086B58784B64A1B4A7DFCBA3466126EFB0
9155B603E3EFA6A88F806F3E3B7E267DD34D8E1FE3896A7246AE8A81400117A6
0DD34BEE96F105021C143CBA31F852B752F9CFFBB704FF3645633AD285BFF184
75E4A7C5FE246B44CB0FAB96B869E5602E71CD3C26DB3A11B69C126D326ED048
9B761611489362B742B7E066D25841D568D32384DBBED88845DD2E973EC32E15
DC493BE99355CCC2638D323A3D5886830A814B6039C0A4C94E0FDBA3FDC70448
F0F7A3B9938E852FD3609DC0263694F3339897051739EF6CA005A13F807BBF78
926E87D7AD40366635E0C62E79E5F83FE83D0275BAE5C29852582A7339C6C6DD
6142883C3ABD776B93DD9148F5AD145ACE46245E0B56D104022E6187B8692E52
B1FB23C76308FC9B9B880E8225EA7E01F0F40925D6A5D4DE0BD50946A932BD93
08FF92907EF656CED8359CC6E92097EF9F103124960306976E8D970409D726C6
EBBE802D313EBB7931A45186B1E104AEC0DDB34E5980115AF9906BA0268E8A5B
9EF37D1D750D1CA89FE9C307F6778CF0D892E322D74740D014973DC67CF4E8A2
655519FF845F6FC64BF667ED12126C048E168F4A5F542E19A37D6D083D6894E6
27421BFC8FA29C0361BB4E10CEB88C28FEDF7400B41D271EC1D1C17ECB728AB7
1B46F5B4E5DBFD114A497C373A62DC0FF38EA01F08D85B7DB035999521344081
FD2D00F5A24892AA8281BB53216577D7F18BF12CE61BE6020AAEE0D0690E6E67
1C7BF8A5F5644156C01796F181A56234C57F002EABE0B01BDB82E0D9D82FA3B0
C502181AC46F740074D8AF174D751E12DE040DD44DCE6731273A77A7AEBC58B9
4547FB79B98A36F355BFB512CED03381EC0056081EDC946A802D5010ADB054EF
F2C25344677467AF7286C9E740AB87CA06750A9EA7E5AC67972E3055A2727808
34EF3B0FDC562B9E2726C74C4E28979B300E4357F475B5D051D3D38FD9749CBF
61D5C3285BC6A643C5010DA3AAD4ECE672541519AE16B068E6D40D43DBF31039
7E737CDD4BCC4FE4C912A1E698AC3CFD31C30F65CD068106BA374DDCFC63C412
5D12567006B11E81C9323212D4F42E66EE3CB224AD4A8036B888CC0F12B5220D
397A81D71CCCD51E94CF83043294911290C014387C41F7E5E1BFF8F5DB06B9DF
BE565D86445BC21BE95B468E894574B7ED7527834880BEEED34A7B7BD0A09113
76A33AE406946D7D6541C0F135253D4AF8E81A78E112CB5397D400C09335B5C3
140FA3745DFE7348FA20DBDDEC29BB47874CDBBB9E8F39F21E18C879A31EF811
4A7D2CE7EF0E3236FC63FB896A43AFBC582D586549347270D802504B362B6C58
621BFB64BC080091E5B3CBADBB9D8F5FAEF8088C5833D33DDB2040F7AE474613
F32DDBFCE73FEFA5B000E878613E67E2648D3313809F54AE2F4D9FD6BB637267
FA57B5089B710297939F03A7B9B4730C5C44A5388062520A72FF5D4870780950
46CB04C011C21F6158012BD1001814763904BBA80E45A13008AEFE8D5148BCB8
46E7A7E2EE3D19EFDC3B8A87CE968891C9B4D430E5407B1BBAAC2637066157ED
62807CB81C3B7578CC349739E9CB0776B2C51BAF8482C48AF8493A021396022E
3A70CF0930348A3F26D0C9B995C465DDA2D325E63A21D597051832ECE5857D78
CA325612F1D74FB5BDC132D55AA3B27CB16DB9A6FEFA560A7E9A997FA4978DEC
85A57D7AED1510049102DCCD77EC7CADC538E421201BD5490D4D9679638503C6
D85C456F9D5C5AD55B1E1BD59654A33C7A357F6E60528ADC9366DC606AE29F22
E48C8190559FBE208813163F9B45974B833308FAA9C57CCA49FE25EEB99469E2
D66ECDD7B34900E39F7687C555FC0AB35EBA07E95D6274681D46A3D784726051
BBB29DF38B3FC60572928321D8D5B8AB104A5A9F237773E53ED4C277139C61AD
43F5F9185F8CADC043813848B2A141E7196C140647F54E7716C1EFED00F16AD0
4687992DEDAFA8CBC5087F8657BAF43005AD046DB44047A7850FC14D9E7383F3
E6C4A2794BB719671366EDF95FA61AD65A11822F25C6730007319D07CA2C2B8B
46D356B61E19590399FD838701419FD0C5B9B9A38F9AD4D3059643C4B6474224
7EB351E2CEC9C101BD215B2856FB33F478D64E013B26AAEE6379E3C90EE53D70
77B79403CC7B271D55D61574C7B82EBB7D5AE970C7A13AFCFCC6A42156819F2B
D7910E7C6AD475D7EE730CFE17A4CDDE3385BC35BAF41A58BC0745921EFE3365
EA303B131419E422DA66120C9086BC9DD9EB3B760D62C3FDEFDED42D9C5EA53C
37FCD23A19B1E682676DFF7074CA56EA005BBAB2817E188CD35CA996D2D60BC4
6544BB49B32974BE8A205211DD677CB033E13809EEE4215ED1BF45E9B72DCD23
C03E373B81325FFFDB3BAAE34D64E4100C05F4E3B699ABB66F78BBB1451BB0A9
AF322B1EB40501A829A5F79EAC708405090ABD45040C142455B29AAC152D0EF1
992E1DB389B965A36C8B3916571AE9BC5BBD5B87B5E665E29AE801ECB59EE3CE
4036139C7D104D7595EA34C1BE5840EF7B7954B5A170469489A796591249FDF6
4F1DA6CC43382DB4916B98FC32A3C65CC304D5B1B1541C3D150CB24F35B1D979
1E8B7DC4D0C5F0A8097E83515C129BCD2C0A7A977D69D2D7581B406EAC341764
7B97BE02E3CE765EFCFB6EB3D2D61C00019028782DF5C419DD96BA7304FBC96E
0AF9F768B124B8F59E59D28FC5B37358FA600CB7B1291483A4B152AE89194BC6
02F18B4862AD26BA34221803DF26590676415A24CDEF541E76AB752F259AB5F7
C2731C8380524E0EB86E480EEAC82DBF7CCD190165199F9552465A5C51745D80
BCD05B528E1F0207AF867277DECCB1D1187065920A00D68F60071ADEC263572B
3579FC3706F30EF576B3396B7FD8C2DC7DB2ACDBE6D18BED350BCD45D52ABF2A
FFCDEAB34D229306EA42CBBE491D3248B5C7F8E95D4855768BDB0B450D966885
F18CA9F1EBF6841C178D3BF67C0AD9FCCC4C119CD6B770BE77191427B1D36451
D07563D6EA066919B47ACB763938ACACD41B973B5747BA8D3D3BD51626E97828
4B5F642FBB69597124C3EC3FD2D744AB0E9B5D0E0530A1FB573F0518092B463F
110B71F3CED7F34A2F1F71A983DE7BA2738C510192191F3CF482714976FDA4D3
8C191AB8D3E55E509F6555F1C68A09DC46A8F8B1435B50B4DB84C34011D1E085
B858201F696BDB811010F4BCC272216A94E5BFC6D987E6316F4449FC14D2B87F
888B93CDA1E878CC8ED146FF50D8DEFCD07FFFB92C1DD25AC932EC54A4469B4D
3FE34E30B3A8E28951C8AE036A48C3478A513AB767E0424FFE56C158E306C302
0927BEE1EC5D5DDACF7A5E4F3C6DE102F7558B39DC1933C83D380D2452D540E0
9D50FEF3DFC3D9B65D709BB2073FD187201859827EE6E9EBCFE0BBDECE38B10B
04B89E17447829AF832E72FB17AFC5C55332FAAE7C90B652235179C54D197C75
9AAD8EBCB3D50840804F9FF52042942BD2E12ABF5DFD335BD8BBE0E49627D2E9
EF24F4A55A241FE38F95BC252D2D33E0C3711E39CBCD080F9AE813268E60E233
2DDEB50CABDBC50765AA3E772225BC8FDB1B48159A3CE55C076291FFC4C87D5B
59C660738CFB87BDA8D670256AC01D24CDC2A2430FCFEF4ECB2CDEA7D1DC8261
7E6585ED4E683889D9E15611B1B6131CFB8606D0184A507ACA41AA09
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (users_guide_sem2dpack.dvi)
@start /Fa 134[42 42 62 1[47 33 35 31 47 47 45 47 72
22 44 1[22 1[45 28 40 47 40 1[44 6[56 61 61 86 61 63
62 51 59 67 58 67 64 80 49 63 1[25 64 61 52 54 66 58
61 61 3[71 10[45 45 2[25 30 25 1[45 35 35 3[45 1[45 21[49
12[{ TeXf7b6d320Encoding ReEncodeFont }58 90.9091 /CMSS10
rf /Fb 133[42 1[52 57[71 1[71 60[{ TeXaae443f0Encoding ReEncodeFont }4
90.9091 /CMMI10 rf /Fc 133[50 3[59 62 44 44 46 1[62 56
62 93 31 2[31 62 56 34 51 62 50 1[54 13[62 15[81 13[56
56 56 56 56 2[31 46[{ TeXf7b6d320Encoding ReEncodeFont }27
99.6264 /CMBX12 rf /Fd 253[60 2[{ TeXbbad153fEncoding ReEncodeFont }1
74.7198 /CMSY9 rf /Fe 135[35 9[38 54 3[22 7[34 13[38
2[39 80[{ TeXaae443f0Encoding ReEncodeFont }7 49.8132
/CMMI6 rf /Ff 135[44 3[28 13[37 15[45 24[38 39[45 21[{
 TeXaae443f0Encoding ReEncodeFont }6 74.7198 /CMMI9 rf
/Fg 129[48 3[48 48 48 48 48 48 48 48 48 48 48 48 48 48
48 48 1[48 48 48 48 48 48 48 48 48 1[48 4[48 1[48 48
48 48 48 48 48 48 48 48 48 48 48 48 1[48 48 48 48 48
48 48 48 48 2[48 3[48 48 2[48 48 48 1[48 48 48 48 48
48 2[48 48 48 1[48 38[{ TeX09fbbfacEncoding ReEncodeFont }67
90.9091 /CMTT10 rf /Fh 129[39 3[39 39 1[39 1[39 39 39
39 39 39 39 39 39 39 2[39 39 39 39 39 39 39 1[39 12[39
39 2[39 1[39 19[39 7[39 2[39 39 39 45[{
 TeX09fbbfacEncoding ReEncodeFont }31 74.7198 /CMTT9
rf /Fi 133[34 41 41 55 41 43 30 30 30 41 43 38 43 64
21 41 1[21 43 38 23 34 43 34 43 38 7[58 3[58 55 43 2[52
1[58 70 48 2[28 2[50 52 1[55 1[58 3[60 2[21 1[38 38 38
1[38 1[38 38 38 1[21 26 21 60 1[30 30 6[21 20[43 10[64
1[{ TeXf7b6d320Encoding ReEncodeFont }56 74.7198 /CMR9
rf /Fj 201[30 30 30 30 30 30 49[{ TeXf7b6d320Encoding ReEncodeFont }6
49.8132 /CMR6 rf /Fk 134[44 42 60 42 49 30 37 38 42 46
46 51 74 23 42 1[28 46 42 28 42 46 42 42 46 12[65 51
2[62 1[68 82 2[48 35 68 70 1[62 69 65 64 68 6[28 46 46
2[46 46 46 46 46 2[28 33 28 4[28 19[46 46 5[51 56 11[{
 TeX74afc74cEncoding ReEncodeFont }54 90.9091 /CMTI10
rf /Fl 201[35 35 35 35 35 35 49[{ TeXf7b6d320Encoding ReEncodeFont }6
66.4176 /CMR8 rf /Fm 139[75 1[79 1[108 7[108 2[88 3[94
29[140 15[97 97 97 49[{ TeXf7b6d320Encoding ReEncodeFont }10
172.188 /CMBX12 rf /Fn 134[55 2[55 58 41 41 43 1[58 52
58 87 29 2[29 58 52 32 48 58 46 58 51 10[79 80 73 58
5[99 63 2[40 82 1[66 69 80 76 74 8[52 52 52 52 52 52
52 52 52 52 1[29 35 32[58 61 11[{ TeXf7b6d320Encoding ReEncodeFont }47
90.9091 /CMBX10 rf /Fo 152[45 45 86[45 1[91 10[71 2[{
 TeXbbad153fEncoding ReEncodeFont }5 90.9091 /CMSY10
rf /Fp 132[45 40 48 48 66 48 51 35 36 36 48 51 45 51
76 25 48 28 25 51 45 28 40 51 40 51 45 4[45 1[56 68 68
93 68 68 66 51 67 71 62 71 68 83 57 71 47 33 68 71 59
62 69 66 64 68 3[71 1[25 25 45 45 45 45 45 45 45 45 45
45 45 25 30 25 2[35 35 25 1[76 2[45 14[45 4[76 51 51
53 11[{ TeXf7b6d320Encoding ReEncodeFont }81 90.9091
/CMR10 rf /Fq 128[42 4[37 44 44 60 1[46 32 33 33 1[46
42 46 69 23 2[23 46 42 25 37 46 37 46 42 6[51 2[85 2[60
46 2[57 6[30 62 65 54 57 1[60 2[65 5[23 42 42 42 42 42
42 42 42 42 42 42 23 28 1[65 1[32 32 40[{
 TeXf7b6d320Encoding ReEncodeFont }52 83.022 /CMR10 rf
/Fr 134[63 3[66 1[47 47 1[66 60 66 100 33 2[33 3[53 3[60
10[90 5[81 5[61 8[90 11[60 1[60 60 1[60 1[33 40 45[{
 TeXf7b6d320Encoding ReEncodeFont }22 119.552 /CMDUNH10
rf /Fs 134[71 1[97 71 75 52 53 55 1[75 67 75 112 37 2[37
75 67 41 61 75 60 75 65 9[139 102 103 94 75 3[101 105
128 81 2[50 105 106 85 88 103 97 96 102 11[67 67 67 67
67 2[37 45 5[37 26[75 78 11[{ TeXf7b6d320Encoding ReEncodeFont }49
119.552 /CMBX12 rf /Ft 134[62 1[85 62 65 46 46 46 62
65 59 65 98 33 62 1[33 65 59 36 52 65 52 1[59 13[65 5[107
7[80 89 2[88 14[59 50[{ TeXf7b6d320Encoding ReEncodeFont }28
119.552 /CMR12 rf /Fu 134[123 2[123 129 90 92 95 1[129
116 129 194 65 2[65 129 116 71 106 129 103 129 113 11[179
162 129 2[159 2[220 1[182 1[87 3[153 178 168 165 175
14[116 50[{ TeXf7b6d320Encoding ReEncodeFont }33 206.559
/CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black Black 35 954
a @beginspecial @setspecial
 tx@Dict begin STP newpath 2.0 SLW 1. 0. 0. setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def [ 443.86296 0.0 -2.84544 0.0  /Lineto
/lineto load def false Line  gsave 2.0 SLW 1. 0. 0. setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 1139 1211 a
Fu(SEM2DP)-19 b(A)-6 b(CK)375 1442 y Ft(A)39 b(Sp)s(ectral)f(Elemen)m
(t)f(Metho)s(d)h(to)s(ol)g(for)g(2D)h(w)m(a)m(v)m(e)e(propagation)1033
1555 y(and)i(earthquak)m(e)d(source)j(dynamics)1485 1715
y Fs(User's)46 b(Guide)35 1911 y @beginspecial @setspecial
 tx@Dict begin STP newpath 1.5 SLW 1. 0. 0. setrgbcolor  /ArrowA {
moveto } def /ArrowB { } def [ 443.86296 5.69046 -2.84544 5.69046 
/Lineto /lineto load def false Line  gsave 1.5 SLW 1. 0. 0. setrgbcolor
0 setlinecap stroke  grestore end


@endspecial 1530 2826 a Fr(V)-10 b(ersion)40 b(2.2.3)1516
3020 y(Jan)m(uary)h(2005)1346 3876 y(Jean-P)m(aul)g(Ampuero)922
4023 y Fq(ETH)27 b(Z)r(\177)-44 b(uric)n(h)27 b(\(Swiss)h(F)-7
b(ederal)27 b(Institute)h(of)g(T)-7 b(ec)n(hnology\))1448
4123 y(Institute)28 b(of)g(Geoph)n(ysics)1329 4222 y(Seismology)e(and)i
(Geo)r(dynamics)1398 4322 y(ETH)g(H\177)-42 b(onggerb)r(erg)25
b(\(HPP\))1578 4422 y(CH-8093)g(Z)r(\177)-44 b(uric)n(h)1654
4521 y(Switzerland)1299 4720 y(E-mail:)36 b(ampuero@erdw.ethz.c)n(h)873
4820 y(W)-7 b(eb:)37 b(www.sg.geoph)n(ys.ethz.c)n(h/geo)r
(dynamics/ampuero/)1441 4920 y(Phone:)f(+41)27 b(1)g(633)f(2197)1489
5019 y(F)-7 b(ax:)36 b(+41)26 b(1)i(633)e(1065)p Black
Black eop end
%%Page: 2 2
TeXDict begin 2 1 bop Black Black 1345 5826 a Fp(c)1319
5829 y Fo(\015)31 b Fp(2003)h(Jean-P)m(aul)f(Ampuero)p
Black Black eop end
%%Page: 3 3
TeXDict begin 3 2 bop Black Black Black Black 84 1617
3564 4 v 84 4365 4 2748 v 213 1812 a Fn(1)84 b(In)m(tro)s(duction)2542
b(4)349 1925 y Fp(1.1)94 b(Ov)m(erview)84 b(.)46 b(.)g(.)f(.)h(.)g(.)f
(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)
h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p Black 173 w(4)p
Black 349 2038 a(1.2)94 b(History)31 b(and)f(credits)45
b(.)g(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g
(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p Black 173
w(5)p Black 349 2151 a(1.3)94 b(Installation)75 b(.)46
b(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g
(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p
Black 173 w(5)p Black 349 2264 a(1.4)94 b(License)25
b(.)45 b(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)
g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g
(.)p Black 173 w(6)p Black 213 2468 a Fn(2)84 b(The)35
b(solv)m(er)g(SEM2D)2246 b(7)349 2581 y Fp(2.1)94 b(Ab)s(out)30
b(the)g(metho)s(d)69 b(.)45 b(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f
(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p
Black 173 w(7)p Black 349 2694 a(2.2)94 b(What)31 b(SEM2D)g(is)f(and)g
(what)g(it)h(is)g(not)40 b(.)46 b(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p Black 173 w(7)p
Black 349 2807 a(2.3)94 b(F)-8 b(ormat)32 b(of)e(the)h(input)e(\014le)
83 b(.)45 b(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p Black 173 w(8)p
Black 349 2919 a(2.4)94 b(V)-8 b(erifying)31 b(the)g(settings)g(and)f
(running)f(a)h(sim)m(ulation)58 b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)
f(.)h(.)g(.)p Black 128 w(15)p Black 349 3032 a(2.5)94
b(The)30 b(di\013eren)m(t)h(outputs)f(of)g(the)h(solv)m(er)78
b(.)46 b(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)
h(.)g(.)p Black 128 w(20)p Black 558 3145 a(2.5.1)106
b(Con)m(trol)31 b(of)g(the)f(sp)s(ectral)h(elemen)m(t)h(grid)82
b(.)45 b(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p
Black 128 w(20)p Black 558 3258 a(2.5.2)106 b(Con)m(trol)31
b(of)g(the)f(source)h(time)g(function)j(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g
(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p Black 128 w(20)p Black
558 3371 a(2.5.3)106 b(Con)m(trol)31 b(and)f(visualization)i(of)f(the)f
(snapshots)38 b(.)45 b(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p
Black 128 w(20)p Black 558 3484 a(2.5.4)106 b(Storage)31
b(and)f(visualization)j(of)d(the)h(seismograms)71 b(.)46
b(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p Black 128 w(20)p Black
558 3597 a(2.5.5)106 b(Storage)31 b(and)f(visualization)j(of)d(the)h
(fault)f(outputs)49 b(.)d(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p
Black 128 w(21)p Black 213 3801 a Fn(3)84 b(Use)35 b(of)g(the)g(mesh)g
(generator)g(EMC2)1525 b(22)349 3914 y Fp(3.1)94 b(The)30
b(mesh)g(generator)h(EMC2)82 b(.)46 b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g
(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p
Black 128 w(22)p Black 349 4027 a(3.2)94 b(Notations)70
b(.)46 b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)
h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p
Black 128 w(22)p Black 349 4139 a(3.3)94 b(Basic)32 b(step-b)m(y-step)
87 b(.)45 b(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h
(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p Black
128 w(23)p Black 349 4252 a(3.4)94 b(Some)30 b(additional)i(tips)60
b(.)46 b(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)
f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)p Black 128 w(25)p
Black 3644 4365 V 84 4368 3564 4 v Black Black eop end
%%Page: 4 4
TeXDict begin 4 3 bop Black Black -106 833 a Fm(Chapter)64
b(1)-106 1331 y Fu(In)-6 b(tro)6 b(duction)-106 1895
y Fs(1.1)135 b(Ov)l(erview)-106 2181 y Fp(The)25 b(SEM2DP)-8
b(A)m(CK)27 b(pac)m(k)-5 b(age)28 b(is)d(a)i(set)f(of)g(to)s(ols)h(for)
e(the)h(sim)m(ulation)h(and)e(analysis)i(of)f(the)g(seismic)g(resp)s
(onse)f(of)-106 2294 y(sedimen)m(tary)j(basins)f(as)g(w)m(ell)i(as)f
(dynamic)f(earthquak)m(e)i(ruptures.)38 b(Its)27 b(core)h(is)g(SEM2D,)g
(an)g(explicit)h(Sp)s(ectral)-106 2407 y(Elemen)m(t)i(solv)m(er)g(for)f
(the)h(2D)g(elastic)i(w)m(a)m(v)m(e)f(equation.)41 b(The)30
b(general)i(\015o)m(w)e(of)h(a)f(sim)m(ulation)i(pro)5
b(ject)31 b(is:)p Black 5 2678 a(1.)p Black 46 w(Mesh)c(generation:)40
b(SEM2D)27 b(w)m(orks)f(on)h(an)f(initial)i(mesh)e(made)g(of)h
(quadrangles)f(\(basically)i(a)f(Q4)g(or)f(Q9)121 2791
y(\014nite)k(elemen)m(t)i(mesh\).)p Black 5 2978 a(2.)p
Black 46 w(Mesh)e(qualit)m(y)i(v)m(eri\014cation,)g(ev)m(en)m(tually)g
(return)e(to)h(previous)f(step.)p Black 5 3166 a(3.)p
Black 46 w(Numerical)h(sim)m(ulation.)p Black 5 3353
a(4.)p Black 46 w(P)m(ost-pro)s(cessing)g(and)f(visualization)i(of)f
(the)g(output.)-106 3624 y(This)k(pac)m(k)-5 b(age)39
b(pro)m(vides)d(a)h(set)g(of)g(to)s(ols)g(for)f(ev)m(ery)i(step.)59
b(Ho)m(w)m(ev)m(er,)40 b(no)d(general)g(mesh)f(generation)i(co)s(de)e
(is)-106 3737 y(included.)67 b(Instead)39 b(SEM2D)h(can)g(imp)s(ort)f
(unstructured)f(quadrangle)h(meshes)g(generated)i(externally)-8
b(.)70 b(As)-106 3850 y(an)37 b(example)h(w)m(e)g(pro)m(vide)f(an)g(in)
m(terface)i(to)f(EMC2,)h(one)f(of)f(the)h(few)f(public)g(domain)g(2D)h
(mesh)e(generators)-106 3963 y(including)30 b(quadrangle)g(elemen)m(ts)
i(and)e(a)g(Graphical)h(User)g(In)m(terface)2386 3930
y Fl(1)2426 3963 y Fp(.)-106 4159 y(This)26 b(User's)h(Guide)g
(explains)g(the)g(usage)h(of)f(the)g(SEM2D)g(solv)m(er.)41
b(F)-8 b(or)28 b(more)f(details,)i(additional)e(results,)h(and)-106
4272 y(for)35 b(the)h(3D)h(extension)f(of)g(the)g(algorithm,)i(please)e
(refer)g(to)g(Komatitsc)m(h)h(\(1997\),)j(Komatitsc)m(h)d(and)e
(Vilotte)-106 4385 y(\(1998\),)e(Komatitsc)m(h)f Fk(et)g(al.)41
b Fp(\(1999\))33 b(and)d(also)h(V)-8 b(ai)32 b Fk(et)g(al.)41
b Fp(\(1998\).)-106 4581 y(An)33 b(in)m(tro)s(duction)h(to)g(mesh)f
(generation)i(with)e(EMC2)h(is)f(also)i(pro)m(vided.)50
b(F)-8 b(or)34 b(more)g(details)g(y)m(ou)g(m)m(ust)g(refer)-106
4693 y(to)d(the)f(EMC2)h(do)s(cumen)m(tation.)-106 4889
y(This)d(is)h(a)g(researc)m(h)h(co)s(de,)g(constan)m(tly)g(under)e(dev)
m(elopmen)m(t)i(and)f(pro)m(vided)f(\\as)i(is",)g(and)e(therefore)i(it)
g(should)-106 5002 y Fk(not)54 b Fp(b)s(e)45 b(considered)g(b)m(y)g
(the)g(user)g(as)g(a)h(100)g(\045)f(bug-free)g(soft)m(w)m(are)i(pac)m
(k)-5 b(age.)87 b(W)-8 b(e)46 b(w)m(elcome)h(commen)m(ts,)-106
5115 y(suggestions,)31 b(feature)g(requests,)g(mo)s(dule)e(con)m
(tributions)i(and)f(bug)g(rep)s(orts.)p Black -106 5194
1578 4 v -3 5248 a Fj(1)32 5280 y Fi(Y)-6 b(ou)25 b(can)h(do)n(wnload)g
(EMC2)h(from)g Fh(http://www-)t(rocq.inria.fr/gamma)q(/cdro)q(m/ww)q
(w/em)q(c2/en)q(g.ht)q(m)p Black Black Black eop end
%%Page: 5 5
TeXDict begin 5 4 bop Black -106 -193 a Fn(1.2)35 b(History)g(and)g
(credits)2838 b(5)p -106 -155 3945 4 v Black -106 127
a Fs(1.2)135 b(History)46 b(and)f(credits)-106 413 y
Fp(The)39 b(main)h(part)f(of)h(the)g(elastic-isotropic)j(solv)m(er)e(w)
m(as)f(written)g(in)g(the)g(mid)f(90's)i(b)m(y)e(Dimitri)i(Komatitsc)m
(h)-106 526 y(while)35 b(he)f(w)m(as)i(preparing)e(his)g(Ph.D.)i(at)f
(the)g Fk(Institut)j(de)f(Physique)f(du)h(Glob)-5 b(e)38
b(de)f(Paris)p Fp(,)g(under)c(the)i(advise)-106 639 y(of)40
b(Prof.)69 b(Jean-Pierre)40 b(Vilotte.)71 b(The)40 b
(elastic-anisotropic)j(solv)m(er)e(and)e(sev)m(eral)i(signi\014can)m(t)
g(impro)m(v)m(emen)m(ts)-106 752 y(to)36 b(the)h(isotropic)g(co)s(de)f
(w)m(ere)g(added)g(b)m(y)f(D.)i(Komatitsc)m(h)g(later)g(as)g(part)e(of)
i(a)f(researc)m(h)h(con)m(tract)g(with)f(DIA)-106 864
y(Consultan)m(ts.)68 b(F)-8 b(urther)39 b(functionalities)i(w)m(ere)f
(added)f(b)m(y)g(m)m(yself,)k(Jean-P)m(aul)d(Ampuero,)i(while)d
(preparing)-106 977 y(m)m(y)f(Ph.D.)g(at)g(IPGP)-8 b(,)39
b(also)g(under)d(the)i(advise)g(of)g(Prof.)63 b(Jean-Pierre)38
b(Vilotte.)66 b(Most)38 b(of)g(these)h(additional)-106
1090 y(features)21 b(w)m(ere)g(motiv)-5 b(ated)22 b(b)m(y)f(an)g
(ECOS-NORD/F)m(ONA)m(CYT)g(researc)m(h)g(pro)5 b(ject)21
b(for)g(the)g(study)f(of)h(the)g(seismic)-106 1203 y(resp)s(onse)36
b(of)h(the)h(v)-5 b(alley)38 b(of)f(Caracas,)j(V)-8 b(enezuela.)63
b(That)37 b(b)s(ecame)h(the)f(v)m(ersion)h(1.0)g(of)f(the)g(SEM2DP)-8
b(A)m(CK,)-106 1316 y(released)31 b(in)f(April)g(2002.)-106
1512 y(F)-8 b(or)24 b(the)f(curren)m(t)g(v)m(ersion,)j(2.x,)f(the)f(co)
s(de)f(w)m(as)h(almost)g(completely)h(rewritten)f(in)f(a)g(more)h(ob)5
b(ject-orien)m(ted)25 b(st)m(yle)-106 1625 y(in)34 b(preparation)g(to)h
(the)g(implemen)m(tation)h(of)f(higher)f(lev)m(el)i(functionalities,)h
(suc)m(h)d(as)h(m)m(ultigrid,)h(sub)s(cycling,)-106 1738
y(adaptivit)m(y)23 b(and)e(m)m(ultiscale)j(coupling.)38
b(While)23 b(the)f(extensiv)m(e)h(use)f(of)g(ob)5 b(ject-orien)m(ted)24
b(features)e(of)g(F)m(OR)-8 b(TRAN)-106 1851 y(90)35
b(can)h(degrade)f(p)s(erformance)f(this)h(is)g(not)g(critical)h(in)f
(2D)h(sim)m(ulation,)h(the)e(emphasis)f(has)h(b)s(een)f(rather)h(in)
-106 1964 y(co)s(de)30 b(reusabilit)m(y)h(and)f(expandibilit)m(y)-8
b(.)-106 2160 y(A)32 b(sim)m(ultaneous)g(dev)m(elopmen)m(t)h(for)f(the)
g(sim)m(ulation)h(of)f(earthquak)m(e)h(dynamics)e(w)m(as)i(undertak)m
(en)e(and)g(is)h(the)-106 2273 y(main)e(new)g(feature)h(of)f(the)h
(curren)m(t)f(v)m(ersion.)41 b(Sp)s(on)m(taneous)30 b(rupture)e(along)k
(m)m(ultiple)f(non-planar)f(faults)g(can)-106 2385 y(b)s(e)22
b(curren)m(tly)i(mo)s(delled.)38 b(Although)24 b(there)f(is)h(no)f(in)m
(trinsic)h(limitation)h(on)f(applying)f(di\013eren)m(t)h(friction)g(la)
m(ws,)h(as)-106 2498 y(of)k(V)-8 b(ersion)30 b(2.2)g(only)f(linear)h
(slip)f(w)m(eak)m(ening)h(friction)g(is)f(implemen)m(ted.)41
b(Dynamic)30 b(source)f(sim)m(ulations)h(using)-106 2611
y(metho)s(ds)c(that)i(discretize)h(the)f(bulk,)f(suc)m(h)g(as)h
(\014nite)f(di\013erence,)i(\014nite)e(elemen)m(t)i(and)e(sp)s(ectral)g
(elemen)m(t)i(meth-)-106 2724 y(o)s(ds,)h(are)i(more)f(prone)f(to)i
(high)f(frequency)f(n)m(umerical)i(noise)f(than)g(b)s(oundary)e(elemen)
m(t)j(metho)s(ds)f(\(e.g.)44 b(when)-106 2837 y(the)28
b(size)h(of)f(the)g(pro)s(cess)f(zone)i(is)f(not)g(w)m(ell)h(resolv)m
(ed\).)41 b(Metho)s(ds)28 b(to)g(con)m(trol)i(this)d(problem)h(w)m(ere)
g(presen)m(ted)g(in)-106 2950 y(the)k(author's)g(Ph.D.)h(dissertation)g
(\(Ampuero,)g(2002\))1841 2917 y Fl(2)1914 2950 y Fp(and)f(in)g
(Gaetano)i(F)-8 b(esta's)34 b(Ph.D.)f(dissertation)3594
2917 y Fl(3)3634 2950 y Fp(,)g(and)-106 3063 y(will)d(b)s(e)g(implemen)
m(ted)h(in)f(a)h(forthcoming)g(v)m(ersion)g(of)f(SEM2DP)-8
b(A)m(CK.)-106 3432 y Fs(1.3)135 b(Installation)p Black
30 3673 a Fo(\017)p Black 46 w Fp(Uncompress)30 b(and)g(expand)f(the)i
(SEM2DP)-8 b(A)m(CK)31 b(pac)m(k)-5 b(age:)43 b Fg(tar)k(xvfz)f
(sem2dpack.tgz)p Black 30 3860 a Fo(\017)p Black 46 w
Fp(Go)31 b(to)g(the)g(source)f(directory:)42 b Fg(cd)47
b(SEM2DPACK/SRC)p Black 30 4048 a Fo(\017)p Black 46
w Fp(Edit)i(the)g Fg(Makefile)e Fp(according)j(to)g(y)m(our)f(F)m(OR)-8
b(TRAN)50 b(95)f(compiler,)55 b(follo)m(wing)50 b(the)g(instructions)
121 4161 y(therein.)p Black 30 4348 a Fo(\017)p Black
46 w Fp(Compile:)41 b Fg(make)p Black 30 4536 a Fo(\017)p
Black 46 w Fp(Mo)m(v)m(e)32 b(to)g(the)e Fg(SEM2DPACK/POST)d
Fp(directory)-8 b(,)31 b(edit)g(the)f Fg(Makefile)f Fp(and)g(compile.)
-106 4832 y(On)f(normal)i(termination)g(y)m(ou)g(should)f(end)g(up)f
(with)i(a)g(set)g(of)f(executable)j(\014les,)e(among)g(whic)m(h)f
Fg(sem2dsolve)p Fp(,)-106 4945 y(in)43 b Fg(/home/yourhome/bin/)p
Fp(.)74 b(If)42 b(y)m(ou)i(encoun)m(ter)g(problems)e(with)h(some)h
(\(con)m(v)m(enien)m(t)h(but)e(non)f(essen)m(tial\))-106
5057 y(F)m(OR)-8 b(TRAN)35 b(95)g(features)f(of)g(the)h(co)s(de)f
(please)h(con)m(tact)i(me.)52 b(I)34 b(ha)m(v)m(e)h(b)s(een)f(dev)m
(elopping)h(the)f(co)s(de)g(with)g(the)-106 5170 y(Lahey/F)-8
b(ujitsu)22 b Fg(lf95)e Fp(compiler)i(and,)h(more)f(recen)m(tly)-8
b(,)25 b(with)c(the)h(In)m(tel)g(compiler)g(for)f(Lin)m(ux)3108
5137 y Fl(4)3147 5170 y Fp(.)38 b(Other)21 b(compilers)-106
5283 y(are)30 b(not)h(b)s(eing)f(tested)h(on)f(a)h(regular)g(basis,)f
(so)h(please)g(rep)s(ort)f(an)m(y)h(related)g(problems.)p
Black -106 5362 1578 4 v -3 5416 a Fj(2)32 5448 y Fi(Av)l(ailable)26
b(in)g(F)-6 b(renc)n(h)24 b(at)i Fh(http://www.sg.geophys.ethz.c)q
(h/ge)q(odyna)q(mics)q(/amp)q(uero/)q(phd.)q(html)-3
5507 y Fj(3)32 5539 y Fh(http://people.na.infn.it/~fes)q(ta/)-3
5599 y Fj(4)32 5631 y Fi(This)i(co)r(de)f(w)n(orks)h(prop)r(erly)f
(with)h(the)f(In)n(tel)f(compiler)j(starting)f(with)f(v)n(ersion)h
(8.0.046)p 2685 5631 24 4 v 30 w(p)r(e047.1,)i(so)d(mak)n(e)h(sure)f(y)
n(ou)g(ha)n(v)n(e)f(a)-106 5722 y(recen)n(t)f(v)n(ersion)h(of)32
b Fh(ifort)27 b Fi(!)p Black Black Black eop end
%%Page: 6 6
TeXDict begin 6 5 bop Black -106 -193 a Fn(1.4)35 b(License)3391
b(6)p -106 -155 3945 4 v Black -106 127 a Fs(1.4)135
b(License)-106 413 y Fp(This)32 b(soft)m(w)m(are)j(is)e(freely)h(a)m(v)
-5 b(ailable)35 b(for)e(scien)m(ti\014c)i(researc)m(h)f(purp)s(oses.)47
b(If)33 b(y)m(ou)h(use)f(this)g(soft)m(w)m(are)i(in)e(writing)-106
526 y(scien)m(ti\014c)e(pap)s(ers)f(include)g(prop)s(er)f(attributions)
h(to)h(its)g(author,)g(Jean-P)m(aul)g(Ampuero.)-106 722
y(This)c(program)i(is)f(free)h(soft)m(w)m(are;)i(y)m(ou)e(can)g
(redistribute)f(it)h(and/or)f(mo)s(dify)g(it)h(under)e(the)i(terms)f
(of)h(the)g(GNU)-106 835 y(General)24 b(Public)g(License)g(as)g
(published)e(b)m(y)i(the)g(F)-8 b(ree)25 b(Soft)m(w)m(are)g(F)-8
b(oundation;)27 b(either)d(v)m(ersion)g(2)h(of)f(the)g(License,)-106
947 y(or)30 b(\(at)i(y)m(our)e(option\))h(an)m(y)g(later)g(v)m(ersion.)
-106 1143 y(This)d(program)i(is)f(distributed)g(in)g(the)h(hop)s(e)f
(that)h(it)g(will)g(b)s(e)f(useful,)g(but)g(WITHOUT)g(ANY)h(W)-10
b(ARRANTY;)-106 1256 y(without)31 b(ev)m(en)i(the)f(implied)f(w)m
(arran)m(t)m(y)i(of)f(MER)m(CHANT)-8 b(ABILITY)32 b(or)g(FITNESS)f(F)m
(OR)h(A)g(P)-8 b(AR)g(TICULAR)-106 1369 y(PURPOSE.)29
b(See)i(the)f(GNU)h(General)h(Public)e(License)h(for)f(more)g(details.)
-106 1565 y(Y)-8 b(ou)26 b(should)f(ha)m(v)m(e)i(receiv)m(ed)h(a)e(cop)
m(y)h(of)f(the)g(GNU)g(General)h(Public)f(License)g(along)h(with)f
(this)g(program;)h(if)f(not,)-106 1678 y(write)31 b(to)h(the)g(F)-8
b(ree)32 b(Soft)m(w)m(are)g(F)-8 b(oundation,)33 b(Inc.,)e(59)i(T)-8
b(emple)31 b(Place)i(-)e(Suite)g(330,)j(Boston,)e(MA)g(02111-1307,)-106
1791 y(USA.)p Black Black eop end
%%Page: 7 7
TeXDict begin 7 6 bop Black Black -106 833 a Fm(Chapter)64
b(2)-106 1331 y Fu(The)77 b(solv)-6 b(er)76 b(SEM2D)-106
1895 y Fs(2.1)135 b(Ab)t(out)44 b(the)h(metho)t(d)-106
2181 y Fp(Based)37 b(on)g(a)g(mesh)f(of)h(quadrangular)f(sp)s(ectral)h
(elemen)m(ts)h(and)e(a)h(set)g(of)g(material)h(prop)s(erties,)g
(sources)f(and)-106 2294 y(receiv)m(ers)g(SEM2D)g(solv)m(es)g(the)g
(elastic)h(w)m(a)m(v)m(e)g(equation)f(applying)f(a)h(Sp)s(ectral)f
(Elemen)m(t)h(Metho)s(d)f(\(SEM\))h(in)-106 2407 y(space)28
b(and)f(a)h(second-order)g(explicit)h(Newmark)f(sc)m(heme)g(in)g(time.)
40 b(The)27 b(SEM,)h(in)m(tro)s(duced)f(b)m(y)h(P)m(atera)h(\(1984\))
-106 2520 y(in)23 b(Computational)i(Fluid)f(Dynamics,)i(can)f(b)s(e)e
(seen)h(as)h(a)f(domain)g(decomp)s(osition)h(v)m(ersion)f(of)h
(Pseudosp)s(ectral)-106 2633 y(Metho)s(ds)d(or)h(as)g(a)g(high)f(order)
g(v)m(ersion)i(of)e(the)h(Finite)h(Elemen)m(t)g(Metho)s(d.)38
b(It)23 b(inherits)f(from)g(its)h(paren)m(t)g(metho)s(ds)-106
2746 y(the)36 b(accuracy)h(\(sp)s(ectral)f(con)m(v)m(ergence\))i(and)e
(the)g(geometrical)i(\015exibilit)m(y)f(and)e(natural)h(implemen)m
(tation)h(of)-106 2859 y(mixed)30 b(b)s(oundary)e(conditions,)j(resp)s
(ectiv)m(ely)-8 b(.)-106 3055 y(In)m(tro)s(ductory)27
b(texts)j(to)f(the)f(SEM)g(can)h(b)s(e)e(found)g(at)i
Fg(www.math.lsa.umich.edu/~ka)o(rni)o(/m50)o(1/b)o(oyd.)o(pdf)-106
3167 y Fp(\(c)m(hapter)g(draft,)f(b)m(y)g(J.P)-8 b(.)29
b(Bo)m(yd\),)g(at)g Fg(www.mate.tue.nl/people/vo)o(sse/)o(doc)o(s/vo)o
(sse9)o(6b.)o(pdf)22 b Fp(\(a)28 b(tutorial)-106 3280
y(exp)s(osition)i(of)g(the)f(SEM)h(and)f(its)h(connection)h(to)f(other)
g(metho)s(ds,)f(b)m(y)h(F.N.)g(v)-5 b(an)30 b(de)f(V)-8
b(osse)31 b(and)e(P)-8 b(.D.)31 b(Minev\))-106 3393 y(and)40
b(at)i Fg(www.siam.org/siamnews/01)o(-)t(04/s)o(pec)o(tral)o(.pdf)34
b Fp(\(a)42 b(p)s(ersp)s(ectiv)m(e)f(pap)s(er\).)72 b(Details)44
b(ab)s(out)c(the)-106 3506 y(elasto)s(dynamic)c(algorithm)h(and)e
(study)f(of)i(some)g(of)f(its)h(prop)s(erties)f(are)h(presen)m(ted)f(b)
m(y)h(Komatitsc)m(h)h(\(1997\),)-106 3619 y(Komatitsc)m(h)g(and)d
(Vilotte)k(\(1998\),)h(Komatitsc)m(h)e Fk(et)g(al.)56
b Fp(\(1999\),)39 b(Komatitsc)m(h)e(and)e(T)-8 b(romp)35
b(\(1999\))j(and)c(V)-8 b(ai)-106 3732 y Fk(et)32 b(al.)41
b Fp(\(1998\).)-106 3928 y(The)35 b(implemen)m(tation)i(of)f(fault)f
(dynamics)h(is)f(similar)h(to)h(that)f(in)f(FEM,)h(or)g(the)g
("traction)h(at)f(split)g(no)s(des")-106 4041 y(metho)s(d)28
b(explained)h(b)m(y)f(Andrews)f(\(1999\).)43 b(More)29
b(details)h(can)f(b)s(e)f(found)f(in)h(the)h(author's)g(Ph.D.)g
(dissertation)-106 4154 y(\(Ampuero,)h(2002\))566 4121
y Fl(1)638 4154 y Fp(and)g(in)g(Gaetano)i(F)-8 b(esta's)32
b(Ph.D.)f(dissertation)2308 4121 y Fl(2)2348 4154 y Fp(.)-106
4350 y(More)k(accesible)i(tutorial)f(co)s(de,)g(written)f(in)g(Matlab,)
i(can)e(b)s(e)g(do)m(wnloaded)g(from)f(the)h(author's)g(w)m(ebsite,)i
(at)-106 4463 y Fg(www.sg.geophys.ethz.ch/)o(geod)o(ynam)o(ics)o(/amp)o
(uer)o(o/SE)o(M_ma)o(tla)o(b.ta)o(r.gz)o Fp(.)-106 4832
y Fs(2.2)135 b(What)45 b(SEM2D)g(is)g(and)g(what)g(it)h(is)f(not)-106
5118 y Fp(SEM2D)d(is)f(an)g(explicit)i(sp)s(ectral)f(elemen)m(t)g(solv)
m(er)h(for)e(the)g(2D)i(elastic)g(w)m(a)m(v)m(e)g(equation.)75
b(It)41 b(is)g(written)h(in)-106 5231 y(F)m(OR)-8 b(TRAN)31
b(90,)g(with)f(some)h(\(useful)f(but)g(not)g(essen)m(tial\))j(F)m(OR)-8
b(TRAN)31 b(95)g(features.)-106 5427 y(There)26 b(is)g(no)h(built-in)f
(general)i(mesh)e(generator)h(for)g(unstructured)d(grids,)j(only)g
(some)g(basic)g(mesh)f(functional-)-106 5540 y(ities.)42
b(If)31 b(y)m(our)f(geological)35 b(mo)s(del)30 b(is)h(complicated)h(y)
m(ou)f(need)g(to)g(generate)h(a)f(mesh)f(with)h(some)g(external)g(to)s
(ol.)p Black -106 5619 1578 4 v -3 5673 a Fj(1)32 5704
y Fh(www.sg.geophys.ethz.ch/geodyn)q(amics)q(/amp)q(uero/)q(phd.)q
(html)-3 5764 y Fj(2)32 5796 y Fh(people.na.infn.it/~festa/)p
Black Black Black eop end
%%Page: 8 8
TeXDict begin 8 7 bop Black -106 -193 a Fn(2.3)35 b(F)-9
b(ormat)35 b(of)g(the)g(input)f(\014le)2644 b(8)p -106
-155 3945 4 v Black -106 127 a Fp(An)30 b(example)h(using)f(EMC2)g(is)h
(describ)s(ed)e(in)h(a)h(later)g(c)m(hapter.)-106 323
y(There)38 b(is)h(curren)m(tly)g(a)g(limited)h(n)m(um)m(b)s(er)d(of)i
(p)s(ost-pro)s(cessing)g(and)f(graphic)h(to)s(ols)h(included.)65
b(Most)40 b(output)-106 436 y(is)33 b(in)g(the)h(form)f(of)g(ra)m(w)g
(binary)g(or)g(ASCI)s(I)f(data)i(\014les)g(and)e(sample)i(scripts)f
(are)h(pro)m(vided)f(for)g(Seismic)g(Unix,)-106 549 y(Gn)m(uplot)d(and)
g(Matlab.)-106 918 y Fs(2.3)135 b(F)-11 b(ormat)45 b(of)g(the)h(input)e
(\014le)-106 1204 y Fp(The)e(input)f(\014le)i(m)m(ust)f(b)s(e)g(called)
i Fg(Par.inp)p Fp(.)75 b(Most)43 b(of)g(this)f(\014le)h(follo)m(ws)g
(the)g(syn)m(tax)g(of)f(F)m(OR)-8 b(TRAN)44 b(90's)-106
1317 y(NAMELIST)36 b(input)f(blo)s(c)m(ks.)60 b(Y)-8
b(ou)37 b(should)e(refer)h(to)i(an)m(y)f(F)m(OR)-8 b(TRAN)37
b(90)g(textb)s(o)s(ok)g(to)g(b)s(e)f(sure)g(of)h(what)f(a)-106
1430 y(NAMELIST)g(is.)61 b(Y)-8 b(ou)38 b(can)f(also)h(\014gure)f(it)h
(out)f(from)g(the)g(follo)m(wing)i(examples.)61 b(The)37
b(t)m(ypical)i(structure)d(of)-106 1543 y Fg(Par.inp)29
b Fp(is)i(illustrated)g(b)m(y)g(t)m(w)m(o)i(examples)e(in)g(Figure)g
(2.1)h(and)f(Figure)g(2.2,)i(follo)m(w)m(ed)f(b)m(y)f(the)h(full)e(do)s
(cumen-)-106 1656 y(tation)h(of)g(the)f(input)g(blo)s(c)m(ks.)41
b(Before)31 b(con)m(tin)m(uing)h(with)e(this)g(man)m(ual,)h(y)m(ou)g
(should)e(get)j(acquain)m(ted)f(with)f(the)-106 1769
y(syn)m(tax)e(of)g(the)h(input)e(blo)s(c)m(ks)h(y)m(ou)h(are)f(most)g
(lik)m(ely)i(to)f(use.)39 b(The)28 b(mandatory)g(and/or)g(more)g(imp)s
(ortan)m(t)g(input)-106 1881 y(blo)s(c)m(ks)i(are:)p
Black 30 2177 a Fo(\017)p Black 46 w Fp(ECHO)p Black
30 2365 a Fo(\017)p Black 46 w Fp(GENERAL)p Black 30
2552 a Fo(\017)p Black 46 w Fp(MESH)p 390 2552 28 4 v
33 w(DEF,)h(follo)m(w)m(ed)h(b)m(y)e(a)h(MESH)p 1486
2552 V 32 w(Metho)s(d)g(blo)s(c)m(k)p Black 30 2740 a
Fo(\017)p Black 46 w Fp(MA)-8 b(TERIAL)p Black 30 2928
a Fo(\017)p Black 46 w Fp(BC)p 256 2928 V 33 w(DEF)31
b(\(one)g(for)f(eac)m(h)h(b)s(oundary)e(condition\),)i(follo)m(w)m(ed)h
(b)m(y)f(a)f(BC)p 2607 2928 V 33 w(Kind)f(blo)s(c)m(k)p
Black 30 3115 a Fo(\017)p Black 46 w Fp(TIME)p Black
30 3303 a Fo(\017)p Black 46 w Fp(SR)m(C)p 307 3303 V
32 w(DEF,)i(follo)m(w)m(ed)h(b)m(y)f(SR)m(C)p 1244 3303
V 32 w(TimeF)-8 b(unction)31 b(and)f(SR)m(C)p 2221 3303
V 32 w(Mec)m(hanism)h(blo)s(c)m(ks)g(if)g(needed)p Black
30 3490 a Fo(\017)p Black 46 w Fp(REC)p 321 3490 V 32
w(LINE)p Black Black eop end
%%Page: 9 9
TeXDict begin 9 8 bop Black -106 -193 a Fn(2.3)35 b(F)-9
b(ormat)35 b(of)g(the)g(input)f(\014le)2644 b(9)p -106
-155 3945 4 v Black Black 288 5068 a @beginspecial 24
@llx 24 @lly 571 @urx 818 @ury 3787 @rwi @setspecial
%%BeginDocument: ../FIGURES/Par.inp.ex1.ps
%!PS-Adobe-3.0
%%Title: Par.inp
%%For: ampuero
%%Creator: a2ps version 4.13
%%CreationDate: Mon Oct 13 18:18:35 2003
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 842 def
/sw 595 def
/llx 24 def
/urx 571 def
/ury 818 def
/lly 24 def
/#copies 1 def
/th 20.000000 def
/fnfs 15 def
/bfs 11.199836 def
/cw 6.719901 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   747.029046 th add
def
/pmw 0 def
/pmh 0 def
/v 0 def
/x [
  0
] def
/y [
  pmh ph add 0 mul ph add
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.703931 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(# Parameter file for SEM2DPACK 2.0 ) p n
() N
(#----- Some general parameters ----------------) N
(&ECHO title = 'Example 1: a box', verbose='1111') N
(    , ItInfo = 100, ItSnapshots = 100 /) N
(&GENERAL iexec=1, ngll=6, fmax=7.5 /) N
() N
(#----- Build the mesh ---------------------------) N
(&MESH_DEF  method = 'CARTESIAN' /) N
(&MESH_CART xlim=-1.d3,1.d3 ,zlim=-1.d3,1.d3 , nelem=10,10 /) N
() N
(#---- Elastic material parameters --------------) N
(#&MATERIAL tag=1, mode='ISOTR' /) N
(#2400.d0 3800.d0 2000.d0) N
() N
(&MATERIAL tag=1, mode='GRADI' /) N
(&DIST_GRADIENT file='flat_1000.topo',grad=0.d0 ,valref=2400.d0 / # rho) N
(&DIST_GRADIENT file='flat_1000.topo',grad=0.8d0 ,valref=3800.d0 / # vp) N
(&DIST_GRADIENT file='flat_1000.topo',grad=0.4d0 ,valref=2000.d0 / # vs) N
() N
(#----- Boundary conditions ---------------------) N
(# Assign tags and kinds to boundaries: \(comment it if free\) ) N
(#The default kind is FREE SURFACE) N
() N
(&BC_DEF  tag = 1 , kind = 'ABSORB' /) N
(&BC_ABSORB side = 'D' /) N
() N
(&BC_DEF  tag = 2 , kind = 'ABSORB' /) N
(&BC_ABSORB side = 'R' /) N
() N
(&BC_DEF  tag = 3 , kind = 'ABSORB' /  ) N
(&BC_ABSORB side = 'U' /) N
() N
(&BC_DEF  tag = 4 , kind = 'ABSORB' /) N
(&BC_ABSORB side = 'L' /) N
() N
(#&BC_DEF  tags =1,3 ,kind = 'PERIOD' /) N
(#&BC_DEF  tags =2,4 ,kind = 'PERIOD' /) N
() N
() N
(#---- Time scheme settings ----------------------) N
(&TIME  TotalTime=2.d0, courant = 0.5d0 /) N
() N
(#---- Sources ----------------------------------) N
(&SRC_DEF TimeFunction= 'RICKER' ,mechanism= 'FORCE' ,coord= 0.d0,0.d0 /) N
(        ,mechanism     = 'WAVE') N
() N
(&SRC_RICKER  f0= 3.d0, onset = 0.35d0, ampli = 1.d9 /) N
() N
(&SRC_FORCE angle = 0d0/) N
(&SRC_WAVE angle = 90d0 , phase= 'S' /) N
() N
(#----- Receivers ---------------------------------) N
(&REC_LINE number = 10 , first = -1.d3,1.d3, last = 1.d3,1.d3, isamp=20 / ) N
() N
(#--------- Plots settings ----------------------) N
(&POSTSCRIPT  vectors =.true., CpModel=.true., interpol = F   /) N
() S 8 T (     ,ScaleField = 1.d0) N
(Par.inp) (Page 1/1) (13 oct 03 18:17) title
border
grestore
(Imprim\351 par ampuero) rhead
() (1/1) (lundi 13 octobre 2003) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF

%%EndDocument
 @endspecial -106 5264 a Fp(Figure)32 b(2.1:)45 b(Input)31
b(\014le)h Fg(Par.inp)e Fp(for)i(an)g(elemen)m(tary)i(example:)45
b(a)32 b(b)s(o)m(xed)g(region)h(with)e(a)i(structured)e(mesh.)-106
5377 y(Note)g(the)g(de\014nition)f(of)h(v)m(elo)s(cit)m(y)h(gradien)m
(ts.)42 b(Av)-5 b(ailable)32 b(in)e Fg(EXAMPLES/InaBox/)p
Black Black Black eop end
%%Page: 10 10
TeXDict begin 10 9 bop Black -106 -193 a Fn(2.3)35 b(F)-9
b(ormat)35 b(of)g(the)g(input)f(\014le)2592 b(10)p -106
-155 3945 4 v Black Black 288 5067 a @beginspecial 24
@llx 24 @lly 571 @urx 818 @ury 3787 @rwi @setspecial
%%BeginDocument: ../FIGURES/Par.inp.ex2.ps
%!PS-Adobe-3.0
%%Title: Par.inp
%%For: ampuero
%%Creator: a2ps version 4.13
%%CreationDate: Mon Oct 13 18:21:20 2003
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 842 def
/sw 595 def
/llx 24 def
/urx 571 def
/ury 818 def
/lly 24 def
/#copies 1 def
/th 20.000000 def
/fnfs 15 def
/bfs 11.199836 def
/cw 6.719901 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   747.029046 th add
def
/pmw 0 def
/pmh 0 def
/v 0 def
/x [
  0
] def
/y [
  pmh ph add 0 mul ph add
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.703931 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(# Parameter file for SEM2DPACK_2.0) p n
() N
(#----- Some general parameters ----------------) N
(&ECHO Title = 'Example 2: using EMC2, Palos Grandes NS' ,) N
(      Verbose='1111', ItInfo = 200, ItSnapshots = 3500 /) N
(&GENERAL Iexec =1 , Ngll = 6 , fmax = 3.0 /) N
() N
(#----- Build the mesh ---------------------------) N
(&MESH_DEF  Method = 'EMC2' /) N
(&MESH_EMC2 File= 'NS03qb.ftq'  /) N
() N
(#---- Elastic material parameters --------------) N
() N
(&MATERIAL Tag=1, Mode='ISOTR' /) N
(1800.d0 850.d0 450.d0) N
() N
(&MATERIAL Tag=2, Mode='ISOTR' /) N
(2100.d0 1800.d0 750.d0) N
() N
(&MATERIAL Tag=3, Mode='ISOTR' /) N
(2400.d0 2300.d0 950.d0) N
() N
(&MATERIAL Tag=4, Mode='ISOTR' /) N
(2500.d0 5000.d0 2900.d0) N
() N
(#----- Boundary conditions ---------------------) N
() N
(&BC_DEF  Tag = 2, Kind = 'ABSORB' /) N
(&BC_ABSORB Side='D',Stacey=F /) N
() N
(&BC_DEF  Tag = 3, Kind = 'ABSORB' /  ) N
(&BC_ABSORB Side='L',Stacey=F /) N
() N
(&BC_DEF  Tag = 4, Kind = 'ABSORB' /) N
(&BC_ABSORB Side='R',Stacey=F /) N
() N
(#---- Time scheme settings ----------------------) N
(&TIME  TotalTime=8.d0, Courant = 0.5d0 /) N
(&TIME_NEWMARK alpha=0.5d0, beta=0.5d0, gamma=1.d0 /) N
() N
(#---- Sources ----------------------------------) N
(&SRC_DEF  TimeFunction='RICKER', Mechanism='FORCE', Coord= -1160000.d0,-2000.d0 ) N
(/) N
(&SRC_RICKER  f0 = 1.d0 , Onset = 1.0d0 ,Ampli = 1.d12 /  ) N
(# use Ampli=1.d12 for explosion) N
(#&WAVE Angle = 90. , Phase = 'S' /) N
(&SRC_FORCE Angle = 90. /) N
() N
(#----- Receivers ---------------------------------) N
(&REC_LINE Number = 10 , First = -1163068.0d0,1.d3, Last = -1159697.36d0,1.d3,) N
(          Isamp=130 / ) N
() N
(#--------- Plots settings ----------------------) N
(&PLOTS_POSTSCRIPT  CpModel=F ,Mesh=F,Vectors=T,Color=T, Interpol = T /) N
(Par.inp) (Page 1/1) (13 oct 03 18:21) title
border
grestore
(Imprim\351 par ampuero) rhead
() (1/1) (lundi 13 octobre 2003) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF

%%EndDocument
 @endspecial -106 5263 a Fp(Figure)22 b(2.2:)37 b(Input)20
b(\014le)h Fg(Par.inp)f Fp(for)h(a)g(more)h(realistic)h(example:)37
b(a)22 b(sedimen)m(tary)f(basin)g(with)g(an)g(unstructured)-106
5376 y(mesh)30 b(generated)h(b)m(y)g Fg(EMC2)p Fp(.)40
b(Av)-5 b(ailable)32 b(in)e Fg(EXAMPLES/UsingEMC2/)p
Fp(.)p Black Black Black eop end
%%Page: 11 11
TeXDict begin 11 10 bop Black -106 -193 a Fn(2.3)35 b(F)-9
b(ormat)35 b(of)g(the)g(input)f(\014le)2592 b(11)p -106
-155 3945 4 v Black -106 5240 a @beginspecial 24 @llx
24 @lly 588 @urx 768 @ury 4733 @rwi @setspecial
%%BeginDocument: ../FIGURES/selfdoc_1.ps
%!PS-Adobe-3.0
%%Title: doc.txt
%%For: Jean-Paul Ampuero
%%Creator: a2ps version 4.13
%%CreationDate: Mon Feb  7 17:17:13 2005
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1 0
%%PageOrder: Ascend
%%DocumentMedia: letter 612 792 0 () ()
%%DocumentNeededResources: font Symbol
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-15Encoding
%%+ font Courier-Bold-Ogonki
%%+ font Courier-BoldOblique-Ogonki
%%+ font Courier-Oblique-Ogonki
%%+ font Courier-Ogonki
%%+ font Helvetica-Bold-Ogonki
%%+ font Helvetica-Ogonki
%%+ font Times-Bold-Ogonki
%%+ font Times-Roman-Ogonki
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Symbol
%%BeginResource: encoding ISO-8859-15Encoding
/ISO-8859-15Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /Euro /yen /Scaron /section 
/scaron /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /Zcaron /mu /paragraph /bullet 
/zcaron /onesuperior /ordmasculine /guillemotright /OE /oe /Ydieresis /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
%%BeginResource: font Courier-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Bold-Ogonki
/Courier-Bold /Courier-Bold-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -50 123 27] put
dup /Aring [65 -10 123 31] put
dup /Atilde [65 -30 123 29] put
dup /Ecircumflex [69 0 123 28] put
dup /Egrave [69 0 123 27] put
dup /Gcaron [71 10 123 183] put
dup /Idieresis [73 0 123 168] put
dup /Igrave [73 0 123 27] put
dup /Ntilde [78 0 123 29] put
dup /Ograve [79 0 123 27] put
dup /Otilde [79 0 123 29] put
dup /Ucircumflex [85 0 123 28] put
dup /Ugrave [85 -30 123 27] put
dup /Ydieresis [89 0 123 168] put
dup /agrave [97 -30 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -40 0 183] put
dup /idieresis [136 -40 0 168] put
dup /igrave [136 0 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -20 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 130 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 130 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 0 130 180] put
dup /ccaron [99 18 0 183] put
dup /Ccaron [67 18 130 183] put
dup /ccircumflex [99 18 0 28] put
dup /Ccircumflex [67 18 130 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 0 130 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 0 130 183] put
dup /dcaron [100 30 195 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 0 130 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 0 130 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 0 130 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 18 130 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 18 130 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 18 130 255] put
dup /hcircumflex [104 -20 195 28] put
dup /Hcircumflex [72 0 130 28] put
dup /Iogonek [73 20 0 178] put
dup /iogonek [105 20 0 178] put
dup /Idotaccent [73 0 130 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 0 130 30] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 0 130 29] put
dup /Jcircumflex [74 85 130 28] put
dup /Lacute [76 -100 130 180] put
dup /lacute [108 -20 195 180] put
dup /Lcaron [76 -100 130 183] put
dup /lcaron [108 0 195 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 0 130 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 0 130 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 0 130 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 0 130 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 0 130 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 0 130 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 0 130 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 0 130 28] put
dup /tcaron [116 0 107 183] put
dup /Tcaron [84 0 130 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 0 130 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 0 130 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 0 130 30] put
dup /uogonek [117 109 0 178] put
dup /Uogonek [85 5 23 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 0 130 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 0 130 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 0 130 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 0 130 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-BoldOblique-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-BoldOblique-Ogonki
/Courier-BoldOblique /Courier-BoldOblique-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -24 123 27] put
dup /Aring [65 16 123 31] put
dup /Atilde [65 -4 123 29] put
dup /Ecircumflex [69 26 123 28] put
dup /Egrave [69 26 123 27] put
dup /Gcaron [71 36 123 183] put
dup /Idieresis [73 26 123 168] put
dup /Igrave [73 26 123 27] put
dup /Ntilde [78 26 123 29] put
dup /Ograve [79 26 123 27] put
dup /Otilde [79 26 123 29] put
dup /Ucircumflex [85 26 123 28] put
dup /Ugrave [85 -4 123 27] put
dup /Ydieresis [89 26 123 168] put
dup /agrave [97 -30 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -40 0 183] put
dup /idieresis [136 -40 0 168] put
dup /igrave [136 0 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -20 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 10 0 168] put
dup /Abreve [65 -18 130 162] put
dup /abreve [97 0 0 162] put
dup /Amacron [65 -15 130 30] put
dup /amacron [97 0 0 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 30 130 180] put
dup /ccaron [99 0 0 183] put
dup /Ccaron [67 30 130 183] put
dup /ccircumflex [99 0 0 28] put
dup /Ccircumflex [67 30 130 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 30 130 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 -12 130 183] put
dup /dcaron [100 35 178 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 30 130 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 30 130 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 30 130 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 30 130 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 30 130 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 30 130 255] put
dup /hcircumflex [104 0 178 28] put
dup /Hcircumflex [72 30 130 28] put
dup /Idotaccent [73 30 130 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 30 130 30] put
dup /Iogonek [73 20 0 178] put
dup /iogonek [105 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 30 130 29] put
dup /Jcircumflex [74 95 130 28] put
dup /Lacute [76 -88 130 180] put
dup /lacute [108 0 178 180] put
dup /Lcaron [76 -88 130 183] put
dup /lcaron [108 0 178 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 30 130 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 30 130 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 30 130 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 30 130 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 30 130 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 30 130 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 30 130 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 30 130 28] put
dup /tcaron [116 -59 106 183] put
dup /Tcaron [84 30 130 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 30 130 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 30 130 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 30 130 30] put
dup /Uogonek [85 0 7 178] put
dup /uogonek [117 108 0 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 30 130 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 30 130 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 30 130 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 30 130 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-Oblique-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Oblique-Ogonki
/Courier-Oblique /Courier-Oblique-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -4 121 27] put
dup /Aring [65 12 126 31] put
dup /Atilde [65 27 126 29] put
dup /Ecircumflex [69 26 121 28] put
dup /Egrave [69 26 121 27] put
dup /Gcaron [71 29 136 183] put
dup /Idieresis [73 29 136 168] put
dup /Igrave [73 26 121 27] put
dup /Ntilde [78 27 126 29] put
dup /Ograve [79 26 121 27] put
dup /Otilde [79 27 126 29] put
dup /Ucircumflex [85 26 121 28] put
dup /Ugrave [85 -4 121 27] put
dup /Ydieresis [89 29 136 168] put
dup /agrave [97 0 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -30 0 183] put
dup /idieresis [136 -30 0 168] put
dup /igrave [136 -30 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -10 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 -10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 133 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 133 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 53 133 180] put
dup /ccaron [99 0 0 183] put
dup /Ccaron [67 53 133 183] put
dup /ccircumflex [99 0 2 28] put
dup /Ccircumflex [67 53 133 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 53 133 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 20 182 183] put
dup /Dcaron [68 33 133 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 53 133 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 53 133 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 53 133 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 -10 0 180] put
dup /gbreve [103 -10 0 162] put
dup /Gbreve [71 53 133 162] put
dup /gcircumflex [103 -10 0 28] put
dup /Gcircumflex [71 53 133 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 53 186 255] put
dup /hcircumflex [104 0 182 28] put
dup /Hcircumflex [72 30 133 28] put
dup /Idotaccent [73 30 133 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 30 133 30] put
dup /iogonek [105 20 0 178] put
dup /Iogonek [73 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 30 133 29] put
dup /Jcircumflex [74 98 133 28] put
dup /Lacute [76 -83 133 180] put
dup /lacute [108 0 182 180] put
dup /Lcaron [76 -83 133 183] put
dup /lcaron [108 0 182 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 53 133 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 53 133 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 53 133 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 53 133 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 53 133 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 40 133 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 53 133 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 53 133 28] put
dup /tcaron [116 -65 118 183] put
dup /Tcaron [84 40 133 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 53 133 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 53 133 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 53 133 30] put
dup /uogonek [117 120 0 178] put
dup /Uogonek [85 5 15 178] put
dup /uring [117 -30 0 31] put
dup /Uring [85 53 133 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 53 133 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 40 133 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 40 133 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Ogonki
/Courier /Courier-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -30 121 27] put
dup /Aring [65 -15 126 31] put
dup /Atilde [65 0 126 29] put
dup /Ecircumflex [69 0 121 28] put
dup /Egrave [69 0 121 27] put
dup /Gcaron [71 0 136 183] put
dup /Idieresis [73 0 136 168] put
dup /Igrave [73 0 121 27] put
dup /Ntilde [78 0 126 29] put
dup /Ograve [79 0 121 27] put
dup /Otilde [79 0 126 29] put
dup /Ucircumflex [85 0 121 28] put
dup /Ugrave [85 -30 121 27] put
dup /Ydieresis [89 0 136 168] put
dup /agrave [97 0 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -30 0 183] put
dup /idieresis [136 -30 0 168] put
dup /igrave [136 -30 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -10 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 -10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 133 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 133 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 17 0 180] put
dup /Cacute [67 30 133 180] put
dup /ccaron [99 17 0 183] put
dup /Ccaron [67 30 133 183] put
dup /ccircumflex [99 17 2 28] put
dup /Ccircumflex [67 30 133 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 30 133 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 0 133 183] put
dup /dcaron [100 17 156 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 0 133 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 0 133 255] put
dup /Emacron [69 0 133 30] put
dup /emacron [101 17 0 30] put
dup /Eogonek [69 100 0 178] put
dup /eogonek [101 100 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 30 133 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 30 133 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 0 133 255] put
dup /Hcircumflex [72 0 133 28] put
dup /hcircumflex [104 0 164 28] put
dup /Idotaccent [73 0 133 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 0 133 30] put
dup /iogonek [105 20 0 178] put
dup /Iogonek [73 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 0 133 29] put
dup /Jcircumflex [74 100 133 28] put
dup /Lacute [76 -100 133 180] put
dup /lacute [108 -12 147 180] put
dup /Lcaron [76 -100 133 183] put
dup /lcaron [108 -12 144 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 0 133 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 0 133 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 0 133 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 0 133 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 0 133 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 0 133 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 0 133 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 0 133 28] put
dup /tcaron [116 -77 92 183] put
dup /Tcaron [84 0 133 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 0 133 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 0 133 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 0 133 30] put
dup /uogonek [117 120 0 178] put
dup /Uogonek [85 5 20 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 0 133 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 0 133 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 0 133 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 0 133 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Helvetica-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Helvetica-Bold-Ogonki
/Helvetica-Bold /Helvetica-Bold-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 167 191 168] put
dup /ydieresis [121 111 0 168] put
dup /Ucircumflex [85 197 191 28] put
dup /Ugrave [85 197 191 27] put
dup /ucircumflex [117 139 0 28] put
dup /ugrave [117 139 0 27] put
dup /Idieresis [73 -27 191 168] put
dup /Igrave [73 -27 191 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /Ecircumflex [69 188 191 28] put
dup /Egrave [69 188 191 27] put
dup /ecircumflex [101 111 0 28] put
dup /egrave [101 111 0 27] put
dup /Agrave [65 197 191 27] put
dup /agrave [97 111 0 27] put
dup /Ograve [79 222 191 27] put
dup /ograve [111 139 0 27] put
dup /Atilde [65 197 191 29] put
dup /atilde [97 111 0 29] put
dup /Ntilde [78 200 191 29] put
dup /ntilde [110 146 0 29] put
dup /Otilde [79 222 191 29] put
dup /otilde [111 139 0 29] put
dup /Aring [65 197 191 31] put
dup /aring [97 111 0 31] put
dup /abreve [97 111 0 162] put
dup /Abreve [65 194 202 162] put
dup /aogonek [97 270 0 178] put
dup /Aogonek [65 444 0 178] put
dup /cacute [99 111 0 180] put
dup /Cacute [67 194 193 180] put
dup /ccaron [99 122 0 183] put
dup /Ccaron [67 210 191 183] put
dup /dbar [100 302 298 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 493 73 39] put
dup /Dcaron [68 194 190 183] put
dup /ecaron [101 111 0 183] put
dup /Ecaron [69 167 190 183] put
dup /edotaccent [101 103 0 255] put
dup /Edotaccent [69 188 191 255] put
dup /eogonek [101 150 0 178] put
dup /Eogonek [69 290 0 178] put
dup /gbreve [103 139 0 162] put
dup /Gbreve [71 222 191 162] put
dup /Idotaccent [73 -27 191 255] put
dup /iogonek [105 -39 0 178] put
dup /Iogonek [73 -30 0 178] put
dup /lacute [108 -7 193 180] put
dup /Lacute [76 139 193 180] put
dup /lcaron [108 155 73 39] put
dup /Lcaron [76 161 73 39] put
dup /nacute [110 159 0 180] put
dup /Nacute [78 231 193 180] put
dup /ncaron [110 111 0 183] put
dup /Ncaron [78 194 215 183] put
dup /ohungarumlaut [111 139 0 189] put
dup /Ohungarumlaut [79 222 191 189] put
dup /racute [114 48 0 180] put
dup /Racute [82 231 193 180] put
dup /rcaron [114 28 0 183] put
dup /Rcaron [82 194 190 183] put
dup /sacute [115 111 0 180] put
dup /Sacute [83 167 193 180] put
dup /scedilla [115 111 0 184] put
dup /Scedilla [83 167 0 184] put
dup /tcaron [116 249 0 39] put
dup /Tcaron [84 139 190 183] put
dup /tcedilla [116 86 0 184] put
dup /Tcedilla [84 197 0 184] put
dup /uhungarumlaut [117 139 0 189] put
dup /Uhungarumlaut [85 197 191 189] put
dup /uring [117 139 0 31] put
dup /Uring [85 194 190 31] put
dup /umacron [117 139 0 30] put
dup /Umacron [85 199 191 30] put
dup /uogonek [117 286 0 178] put
dup /Uogonek [85 260 0 178] put
dup /zacute [122 103 0 180] put
dup /Zacute [90 139 193 180] put
dup /zdotaccent [122 83 0 255] put
dup /Zdotaccent [90 139 206 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Helvetica-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Helvetica-Ogonki
/Helvetica /Helvetica-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 167 199 168] put
dup /ydieresis [121 83 0 168] put
dup /Ucircumflex [85 194 199 28] put
dup /Ugrave [85 194 199 27] put
dup /ucircumflex [117 111 0 28] put
dup /ugrave [117 111 0 27] put
dup /Idieresis [73 -21 199 168] put
dup /Igrave [73 -21 199 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /Ecircumflex [69 188 199 28] put
dup /Egrave [69 188 199 27] put
dup /ecircumflex [101 117 0 28] put
dup /egrave [101 117 0 27] put
dup /Agrave [65 167 199 27] put
dup /agrave [97 111 0 27] put
dup /Ograve [79 222 199 27] put
dup /ograve [111 111 0 27] put
dup /Atilde [65 167 199 29] put
dup /atilde [97 111 0 29] put
dup /Ntilde [78 200 199 29] put
dup /ntilde [110 117 0 29] put
dup /Otilde [79 222 199 29] put
dup /otilde [111 111 0 29] put
dup /Aring [65 167 199 31] put
dup /aring [97 111 0 31] put
dup /abreve [97 96 0 162] put
dup /Abreve [65 174 195 162] put
dup /aogonek [97 270 0 178] put
dup /Aogonek [65 424 0 178] put
dup /cacute [99 84 0 180] put
dup /Cacute [67 196 195 180] put
dup /ccaron [99 84 0 183] put
dup /Ccaron [67 196 195 183] put
dup /dbar [100 270 330 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 523 0 39] put
dup /Dcaron [68 102 195 183] put
dup /ecaron [101 93 0 183] put
dup /Ecaron [69 102 195 183] put
dup /edotaccent [101 111 0 255] put
dup /Edotaccent [69 188 199 255] put
dup /eogonek [101 150 0 178] put
dup /Eogonek [69 290 0 178] put
dup /gbreve [103 111 0 162] put
dup /Gbreve [71 222 199 162] put
dup /Idotaccent [73 -21 199 255] put
dup /iogonek [105 -75 0 178] put
dup /Iogonek [73 -30 0 178] put
dup /lacute [108 -27 195 180] put
dup /Lacute [76 -27 195 180] put
dup /lcaron [108 169 0 39] put
dup /Lcaron [76 276 0 39] put
dup /nacute [110 160 0 180] put
dup /Nacute [78 220 195 180] put
dup /ncaron [110 70 0 183] put
dup /Ncaron [78 160 195 183] put
dup /ohungarumlaut [111 112 0 189] put
dup /Ohungarumlaut [79 223 195 189] put
dup /racute [114 25 0 180] put
dup /Racute [82 200 195 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 100 195 183] put
dup /sacute [115 84 0 180] put
dup /Sacute [83 167 195 180] put
dup /scedilla [115 83 0 184] put
dup /Scedilla [83 167 0 184] put
dup /tcaron [116 291 0 39] put
dup /Tcaron [84 165 195 183] put
dup /tcedilla [116 84 0 184] put
dup /Tcedilla [84 185 0 184] put
dup /uhungarumlaut [117 112 0 189] put
dup /Uhungarumlaut [85 195 195 189] put
dup /umacron [117 111 0 30] put
dup /Umacron [85 194 199 30] put
dup /uogonek [117 255 0 178] put
dup /Uogonek [85 288 5 178] put
dup /uring [117 112 0 31] put
dup /Uring [85 195 195 31] put
dup /zacute [122 84 0 180] put
dup /Zacute [90 139 195 180] put
dup /zdotaccent [122 84 0 255] put
dup /Zdotaccent [90 139 195 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Times-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Times-Bold-Ogonki
/Times-Bold /Times-Bold-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 194 219 168] put
dup /ydieresis [121 83 0 168] put
dup /Ucircumflex [85 221 219 28] put
dup /Ugrave [85 221 219 27] put
dup /ucircumflex [117 104 0 28] put
dup /ugrave [117 104 0 27] put
dup /Idieresis [73 28 219 168] put
dup /Igrave [73 28 219 27] put
dup /idieresis [136 -34 0 168] put
dup /igrave [136 -34 0 27] put
dup /Ecircumflex [69 174 219 28] put
dup /Egrave [69 174 219 27] put
dup /ecircumflex [101 61 0 28] put
dup /egrave [101 61 0 27] put
dup /Agrave [65 187 219 27] put
dup /agrave [97 76 0 27] put
dup /Ograve [79 222 219 27] put
dup /ograve [111 83 0 27] put
dup /Atilde [65 187 219 29] put
dup /atilde [97 76 0 29] put
dup /Ntilde [78 194 219 29] put
dup /ntilde [110 111 0 29] put
dup /Otilde [79 222 219 29] put
dup /otilde [111 83 0 29] put
dup /Aring [65 187 219 31] put
dup /aring [97 76 0 31] put
dup /abreve [97 83 0 162] put
dup /Abreve [65 194 240 162] put
dup /aogonek [97 175 -30 178] put
dup /Aogonek [65 384 -30 178] put
dup /cacute [99 70 0 180] put
dup /Cacute [67 210 219 180] put
dup /ccaron [99 84 0 183] put
dup /Ccaron [67 232 219 183] put
dup /dbar [100 240 300 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 473 53 39] put
dup /Dcaron [68 194 210 183] put
dup /ecaron [101 61 0 183] put
dup /Ecaron [69 174 219 183] put
dup /edotaccent [101 61 0 255] put
dup /Edotaccent [69 187 219 255] put
dup /eogonek [101 114 -30 178] put
dup /Eogonek [69 295 -30 178] put
dup /gbreve [103 83 0 162] put
dup /Gbreve [71 222 219 162] put
dup /Idotaccent [73 28 219 255] put
dup /iogonek [105 -50 -30 178] put
dup /Iogonek [73 63 -30 178] put
dup /lacute [108 -3 210 180] put
dup /Lacute [76 167 210 180] put
dup /lcaron [108 194 53 39] put
dup /Lcaron [76 309 53 39] put
dup /nacute [110 90 0 180] put
dup /Nacute [78 190 219 180] put
dup /ncaron [110 111 0 183] put
dup /Ncaron [78 194 210 183] put
dup /ohungarumlaut [111 83 0 189] put
dup /Ohungarumlaut [79 222 219 189] put
dup /racute [114 79 0 180] put
dup /Racute [82 239 210 180] put
dup /rcaron [114 55 0 183] put
dup /Rcaron [82 194 210 183] put
dup /sacute [115 20 0 180] put
dup /Sacute [83 100 219 180] put
dup /scedilla [115 12 0 184] put
dup /Scedilla [83 94 0 184] put
dup /tcaron [116 271 0 39] put
dup /Tcaron [84 167 210 183] put
dup /tcedilla [116 89 0 184] put
dup /Tcedilla [84 227 0 184] put
dup /umacron [117 104 0 30] put
dup /Umacron [85 215 219 30] put
dup /uhungarumlaut [117 104 0 189] put
dup /Uhungarumlaut [85 221 219 189] put
dup /uogonek [117 236 -25 178] put
dup /Uogonek [85 299 -25 178] put
dup /uring [117 111 0 31] put
dup /Uring [85 194 174 31] put
dup /zacute [122 80 0 180] put
dup /Zacute [90 160 219 180] put
dup /zdotaccent [122 70 0 255] put
dup /Zdotaccent [90 200 219 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Times-Roman-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Times-Roman-Ogonki
/Times-Roman /Times-Roman-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Agrave [65 195 212 27] put
dup /Aring [65 185 187 31] put
dup /Atilde [65 195 212 29] put
dup /Ecircumflex [69 139 212 28] put
dup /Egrave [69 139 212 27] put
dup /Idieresis [73 0 212 168] put
dup /Igrave [73 0 212 27] put
dup /Ntilde [78 195 212 29] put
dup /Ograve [79 195 212 27] put
dup /Otilde [79 195 212 29] put
dup /Ucircumflex [85 195 212 28] put
dup /Ugrave [85 195 212 27] put
dup /Ydieresis [89 195 212 168] put
dup /agrave [97 56 0 27] put
dup /aring [97 56 0 31] put
dup /atilde [97 56 0 29] put
dup /ecircumflex [101 56 0 28] put
dup /egrave [101 56 0 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /ntilde [110 84 0 29] put
dup /ograve [111 84 0 27] put
dup /otilde [111 84 0 29] put
dup /ucircumflex [117 84 0 28] put
dup /ugrave [117 84 0 27] put
dup /ydieresis [121 84 0 168] put
dup /abreve [97 55 0 162] put
dup /Abreve [65 194 223 162] put
dup /aogonek [97 209 0 178] put
dup /Aogonek [65 465 0 178] put
dup /cacute [99 70 0 180] put
dup /Cacute [67 212 212 180] put
dup /ccaron [99 69 0 183] put
dup /Ccaron [67 196 212 183] put
dup /dbar [100 200 300 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 426 75 39] put
dup /Dcaron [68 194 216 183] put
dup /ecaron [101 55 0 183] put
dup /Ecaron [69 139 214 183] put
dup /edotaccent [101 61 0 255] put
dup /Edotaccent [69 154 212 255] put
dup /eogonek [101 142 9 178] put
dup /Eogonek [69 320 0 178] put
dup /gbreve [103 84 0 162] put
dup /Gbreve [71 195 212 162] put
dup /Idotaccent [73 0 212 255] put
dup /iogonek [105 12 0 178] put
dup /Iogonek [73 67 0 178] put
dup /lacute [108 -5 216 180] put
dup /Lacute [76 139 216 180] put
dup /lcaron [108 192 75 39] put
dup /Lcaron [76 250 52 39] put
dup /nacute [110 90 0 180] put
dup /Nacute [78 190 212 180] put
dup /ncaron [110 83 0 183] put
dup /Ncaron [78 194 214 183] put
dup /ohungarumlaut [111 83 0 189] put
dup /Ohungarumlaut [79 194 214 189] put
dup /racute [114 22 0 180] put
dup /Racute [82 210 216 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 167 216 183] put
dup /sacute [115 20 0 180] put
dup /Sacute [83 100 212 180] put
dup /scedilla [115 28 0 184] put
dup /Scedilla [83 112 0 184] put
dup /tcedilla [116 53 0 184] put
dup /Tcedilla [84 197 0 184] put
dup /tcaron [116 214 0 39] put
dup /Tcaron [84 139 216 183] put
dup /uhungarumlaut [117 83 0 189] put
dup /Uhungarumlaut [85 194 214 189] put
dup /umacron [117 81 0 30] put
dup /Umacron [85 205 212 30] put
dup /uogonek [117 236 5 178] put
dup /Uogonek [85 287 5 178] put
dup /uring [117 83 0 31] put
dup /Uring [85 194 179 31] put
dup /zacute [122 60 0 180] put
dup /Zacute [90 120 212 180] put
dup /zdotaccent [122 50 0 255] put
dup /Zdotaccent [90 140 212 255] put
makeComposite
%%EndResource

%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-15 support
/iso15dict 8 dict begin
  /fCourier ISO-8859-15Encoding /Courier-Ogonki reencode_font
  /fCourier-Bold ISO-8859-15Encoding /Courier-Bold-Ogonki reencode_font
  /fCourier-BoldOblique ISO-8859-15Encoding /Courier-BoldOblique-Ogonki reencode_font
  /fCourier-Oblique ISO-8859-15Encoding /Courier-Oblique-Ogonki reencode_font
  /fHelvetica ISO-8859-15Encoding /Helvetica-Ogonki reencode_font
  /fHelvetica-Bold ISO-8859-15Encoding /Helvetica-Bold-Ogonki reencode_font
  /fTimes-Bold ISO-8859-15Encoding /Times-Bold-Ogonki reencode_font
  /fTimes-Roman ISO-8859-15Encoding /Times-Roman-Ogonki reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(      =============================================================) p n
(      = Self-documentation for the INPUT BLOCKS of the SEM2D code =) N
(      =============================================================) N
( ) N
( ) N
( ----------------------------------------------------------------------------) N
() N
( NAME   : BC_ABSORB [boundary condition]) N
( PURPOSE: Absorbing boundary) N
( SYNTAX : &BC_ABSORB side,stacey,periodic /) N
() N
(  side     [char] [none] Which side of the model corresponds to this) N
(               boundary:       'U'     Up,top) N
(                               'D'     Down,bottom) N
(                               'L'     Left) N
(                               'R'     Right) N
(  stacey   [log] [T] Apply or not Stacey absorbing conditions. If F, we) N
(                will simply use Clayton and Engquist.) N
(  Periodic [log] [F]  Enable if the fault crosses a periodic boundary) N
() N
( NOTE   : Only implemented for vertical and horizontal boundaries.) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : BC_DEF) N
( PURPOSE: Define a boundary condition) N
( SYNTAX : &BC_DEF tag, tags, kind /) N
(            followed eventually by &BC_XXXX blocks ) N
() N
(   tag     [int] [none] A number assigned to the boundary. If you are) N
(               using SEM2D built-in structured mesher the conventions are:) N
(                       1       bottom) N
(                       2       right) N
(                       3       up) N
(                       4       left) N
(               If you are importing a mesh, you must use the tags assigned) N
(               to the boundaries during the mesh construction.) N
(   tags    [int\(2\)] [none] Two tags are needed for interfaces \(split-node\)) N
(               and for periodic boundaries.) N
(   kind    [char*6] [none] Type of boundary condition. The following are) N
(               implemented:) N
(               'DT0TN0', ' DTTTN0', 'ABSORB', 'PERIOD', 'LISFLT', 'SWFFLT') N
() N
( NOTE   : you must DEFINE FIRST ALL PERIODIC BOUNDARIES) N
() N
( NOTE   : Some of the boundary conditions need additional data. See their) N
(          respective input blocks if any.) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : BC_LSF [boundary condition]) N
( PURPOSE: Linear slip fault, a displacement discontinuity interface) N
(          where stress and disp.discont. are linearly related) N
( SYNTAX : &BC_LSF Ktang,Knorm,Periodic /) N
() N
(  Ktang    [dble] [Inf] Tangential stiffness) N
(  Ctang    [dble] [0d0] Tangential compliance) N
(  Knorm    [dble] [Inf] Normal stiffness) N
(  Cnorm    [dble] [0d0] Normal compliance) N
(  Periodic [log] [F]  Enable if the fault crosses a periodic boundary) N
() N
( NOTE: for each component you can set K _or_ C, but _not_both_) N
(       ) N
( NOTE: if one of the C=0d0 or K=Inf \(the default\) then) N
(       no displacement discontinuity is allowed for that component) N
(       \(transparent\),) N
(       if K=0d0 the fault is a free stress boundary for that component) N
(       In summary the fault can behave as:) N
(               -1      transparent T&N \(Tangent and Normal\)) N
(doc.txt) (Page 1/8) (Feb 07, 05 17:17) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(               0       stress free T&N) p n
(               1       linear-slip/free T, transparent N ) N
(               2       transparent T, linear-slip/free N) N
(               3       linear-slip/free T&N) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : BC_SWFFLT [boundary condition]) N
( PURPOSE: Slip weakening friction fault) N
( SYNTAX : &BC_SWFFLT Dc|DcHet, MuS|MuSHet ,MuD|MuDHet, ) N
(                     StrN|StrNHet, StrT|StrTHet,) N
(                     Periodic,) N
(                     FirstOutput, DtOutput, IxOut /) N
(             followed eventually by distribution input blocks &DIST_XXX) N
(             for Dc,MuS,MuD,StrN and/or StrT \(the order is important\)) N
() N
( Friction law:) N
(  Dc       [dble] [0.5d0] Critical slip ) N
(  MuS      [dble] [0.6d0] Static friction coefficient) N
(  MuD      [dble] [0.5d0] Dynamic friction coefficient) N
(  DcHet    [dble] [none] Heterogeneous distribution for critical slip ) N
(  MuSHet   [dble] [none] Het. dist. for static friction coefficient) N
(  MuDHet   [dble] [none] Het. dist. for dynamic friction coefficient) N
() N
( Initial stress:) N
(  StrT     [dble] [5.5d6] Constant shear stress) N
(  StrN     [dble] [10.d6] Constant normal stress) N
(  StrTHet  [name] [none] Het. dist. for shear stress) N
(  StrNHet  [name] [none] Het. dist. for normal stress) N
() N
(  Periodic [log] [F]  Enable if the fault crosses a periodic boundary) N
() N
( For outputs in FltXX_sem2d.dat:) N
(  DtOutput [dble] [0.d0] Time lag between outputs \(in seconds\)) N
(               Default resets DtOutput = global timestep) N
(  FirstOutput [dble] [0.d0] Start output at this time) N
(  IxOut    [int\(3\)] [\(1,huge,1\)] First node, last node and stride) N
(               Default resets Ixout\(2\)= last point) N
() N
( NOTE: several heterogeneous distributions are available, ) N
(       see DIST_XXX for their syntax) N
() N
( NOTE: DtOutput is internally adjusted to the nearest multiple ) N
(       of the global timestep) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : DIST_GAUSSIAN [distributions]) N
( PURPOSE: Bell shaped \(Gaussian\) 2D distribution) N
( SYNTAX : &DIST_GAUSSIAN centered_at, length, offset, ampli /) N
() N
(  centered_at      [dble\(2\)] [none] Coordinates of the center point.) N
(  length           [dble\(2\)] [none] Characteristic lengths on each axis.) N
(  offset           [dble] [none]    Background level.    ) N
(  ampli            [dble] [none]    Amplitude from background.) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : DIST_GRADIENT [distributions]) N
( PURPOSE: Constant gradient 2D distribution.) N
( SYNTAX : &DIST_GRADIENT file,valref ,grad,angle/) N
() N
(  file             [name] [none]    Name of the reference-line file.) N
(                        This ASCII file contains the number of points to be read) N
(                        \(first line\), followed by a coordinate table \(two rows, ) N
(                        double precision\) ) N
(  valref           [dble] [none]    Value along the reference line) N
(  grad             [dble >0] [none] Positive gradient \(valref_units/meter\)) N
(  angle            [dble] [none]    Angle \(degrees\) between the vertical down ) N
(doc.txt) (Page 2/8) (Feb 07, 05 17:17) title
border
grestore
(Printed by Jean-Paul Ampuero) rhead
(doc.txt) (1/4) (Monday February 07, 2005) footer
end % of iso15dict
pagesave restore
showpage
%%Trailer
end
%%EOF

%%EndDocument
 @endspecial Black Black eop end
%%Page: 12 12
TeXDict begin 12 11 bop Black -106 -193 a Fn(2.3)35 b(F)-9
b(ormat)35 b(of)g(the)g(input)f(\014le)2592 b(12)p -106
-155 3945 4 v Black -106 5240 a @beginspecial 24 @llx
24 @lly 588 @urx 768 @ury 4733 @rwi @setspecial
%%BeginDocument: ../FIGURES/selfdoc_2.ps
%!PS-Adobe-3.0
%%Title: doc.txt
%%For: Jean-Paul Ampuero
%%Creator: a2ps version 4.13
%%CreationDate: Mon Feb  7 17:17:13 2005
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1 0
%%PageOrder: Ascend
%%DocumentMedia: letter 612 792 0 () ()
%%DocumentNeededResources: font Symbol
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-15Encoding
%%+ font Courier-Bold-Ogonki
%%+ font Courier-BoldOblique-Ogonki
%%+ font Courier-Oblique-Ogonki
%%+ font Courier-Ogonki
%%+ font Helvetica-Bold-Ogonki
%%+ font Helvetica-Ogonki
%%+ font Times-Bold-Ogonki
%%+ font Times-Roman-Ogonki
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Symbol
%%BeginResource: encoding ISO-8859-15Encoding
/ISO-8859-15Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /Euro /yen /Scaron /section 
/scaron /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /Zcaron /mu /paragraph /bullet 
/zcaron /onesuperior /ordmasculine /guillemotright /OE /oe /Ydieresis /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
%%BeginResource: font Courier-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Bold-Ogonki
/Courier-Bold /Courier-Bold-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -50 123 27] put
dup /Aring [65 -10 123 31] put
dup /Atilde [65 -30 123 29] put
dup /Ecircumflex [69 0 123 28] put
dup /Egrave [69 0 123 27] put
dup /Gcaron [71 10 123 183] put
dup /Idieresis [73 0 123 168] put
dup /Igrave [73 0 123 27] put
dup /Ntilde [78 0 123 29] put
dup /Ograve [79 0 123 27] put
dup /Otilde [79 0 123 29] put
dup /Ucircumflex [85 0 123 28] put
dup /Ugrave [85 -30 123 27] put
dup /Ydieresis [89 0 123 168] put
dup /agrave [97 -30 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -40 0 183] put
dup /idieresis [136 -40 0 168] put
dup /igrave [136 0 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -20 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 130 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 130 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 0 130 180] put
dup /ccaron [99 18 0 183] put
dup /Ccaron [67 18 130 183] put
dup /ccircumflex [99 18 0 28] put
dup /Ccircumflex [67 18 130 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 0 130 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 0 130 183] put
dup /dcaron [100 30 195 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 0 130 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 0 130 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 0 130 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 18 130 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 18 130 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 18 130 255] put
dup /hcircumflex [104 -20 195 28] put
dup /Hcircumflex [72 0 130 28] put
dup /Iogonek [73 20 0 178] put
dup /iogonek [105 20 0 178] put
dup /Idotaccent [73 0 130 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 0 130 30] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 0 130 29] put
dup /Jcircumflex [74 85 130 28] put
dup /Lacute [76 -100 130 180] put
dup /lacute [108 -20 195 180] put
dup /Lcaron [76 -100 130 183] put
dup /lcaron [108 0 195 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 0 130 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 0 130 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 0 130 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 0 130 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 0 130 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 0 130 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 0 130 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 0 130 28] put
dup /tcaron [116 0 107 183] put
dup /Tcaron [84 0 130 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 0 130 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 0 130 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 0 130 30] put
dup /uogonek [117 109 0 178] put
dup /Uogonek [85 5 23 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 0 130 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 0 130 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 0 130 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 0 130 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-BoldOblique-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-BoldOblique-Ogonki
/Courier-BoldOblique /Courier-BoldOblique-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -24 123 27] put
dup /Aring [65 16 123 31] put
dup /Atilde [65 -4 123 29] put
dup /Ecircumflex [69 26 123 28] put
dup /Egrave [69 26 123 27] put
dup /Gcaron [71 36 123 183] put
dup /Idieresis [73 26 123 168] put
dup /Igrave [73 26 123 27] put
dup /Ntilde [78 26 123 29] put
dup /Ograve [79 26 123 27] put
dup /Otilde [79 26 123 29] put
dup /Ucircumflex [85 26 123 28] put
dup /Ugrave [85 -4 123 27] put
dup /Ydieresis [89 26 123 168] put
dup /agrave [97 -30 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -40 0 183] put
dup /idieresis [136 -40 0 168] put
dup /igrave [136 0 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -20 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 10 0 168] put
dup /Abreve [65 -18 130 162] put
dup /abreve [97 0 0 162] put
dup /Amacron [65 -15 130 30] put
dup /amacron [97 0 0 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 30 130 180] put
dup /ccaron [99 0 0 183] put
dup /Ccaron [67 30 130 183] put
dup /ccircumflex [99 0 0 28] put
dup /Ccircumflex [67 30 130 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 30 130 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 -12 130 183] put
dup /dcaron [100 35 178 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 30 130 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 30 130 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 30 130 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 30 130 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 30 130 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 30 130 255] put
dup /hcircumflex [104 0 178 28] put
dup /Hcircumflex [72 30 130 28] put
dup /Idotaccent [73 30 130 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 30 130 30] put
dup /Iogonek [73 20 0 178] put
dup /iogonek [105 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 30 130 29] put
dup /Jcircumflex [74 95 130 28] put
dup /Lacute [76 -88 130 180] put
dup /lacute [108 0 178 180] put
dup /Lcaron [76 -88 130 183] put
dup /lcaron [108 0 178 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 30 130 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 30 130 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 30 130 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 30 130 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 30 130 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 30 130 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 30 130 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 30 130 28] put
dup /tcaron [116 -59 106 183] put
dup /Tcaron [84 30 130 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 30 130 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 30 130 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 30 130 30] put
dup /Uogonek [85 0 7 178] put
dup /uogonek [117 108 0 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 30 130 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 30 130 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 30 130 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 30 130 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-Oblique-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Oblique-Ogonki
/Courier-Oblique /Courier-Oblique-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -4 121 27] put
dup /Aring [65 12 126 31] put
dup /Atilde [65 27 126 29] put
dup /Ecircumflex [69 26 121 28] put
dup /Egrave [69 26 121 27] put
dup /Gcaron [71 29 136 183] put
dup /Idieresis [73 29 136 168] put
dup /Igrave [73 26 121 27] put
dup /Ntilde [78 27 126 29] put
dup /Ograve [79 26 121 27] put
dup /Otilde [79 27 126 29] put
dup /Ucircumflex [85 26 121 28] put
dup /Ugrave [85 -4 121 27] put
dup /Ydieresis [89 29 136 168] put
dup /agrave [97 0 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -30 0 183] put
dup /idieresis [136 -30 0 168] put
dup /igrave [136 -30 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -10 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 -10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 133 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 133 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 53 133 180] put
dup /ccaron [99 0 0 183] put
dup /Ccaron [67 53 133 183] put
dup /ccircumflex [99 0 2 28] put
dup /Ccircumflex [67 53 133 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 53 133 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 20 182 183] put
dup /Dcaron [68 33 133 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 53 133 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 53 133 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 53 133 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 -10 0 180] put
dup /gbreve [103 -10 0 162] put
dup /Gbreve [71 53 133 162] put
dup /gcircumflex [103 -10 0 28] put
dup /Gcircumflex [71 53 133 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 53 186 255] put
dup /hcircumflex [104 0 182 28] put
dup /Hcircumflex [72 30 133 28] put
dup /Idotaccent [73 30 133 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 30 133 30] put
dup /iogonek [105 20 0 178] put
dup /Iogonek [73 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 30 133 29] put
dup /Jcircumflex [74 98 133 28] put
dup /Lacute [76 -83 133 180] put
dup /lacute [108 0 182 180] put
dup /Lcaron [76 -83 133 183] put
dup /lcaron [108 0 182 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 53 133 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 53 133 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 53 133 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 53 133 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 53 133 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 40 133 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 53 133 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 53 133 28] put
dup /tcaron [116 -65 118 183] put
dup /Tcaron [84 40 133 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 53 133 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 53 133 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 53 133 30] put
dup /uogonek [117 120 0 178] put
dup /Uogonek [85 5 15 178] put
dup /uring [117 -30 0 31] put
dup /Uring [85 53 133 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 53 133 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 40 133 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 40 133 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Ogonki
/Courier /Courier-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -30 121 27] put
dup /Aring [65 -15 126 31] put
dup /Atilde [65 0 126 29] put
dup /Ecircumflex [69 0 121 28] put
dup /Egrave [69 0 121 27] put
dup /Gcaron [71 0 136 183] put
dup /Idieresis [73 0 136 168] put
dup /Igrave [73 0 121 27] put
dup /Ntilde [78 0 126 29] put
dup /Ograve [79 0 121 27] put
dup /Otilde [79 0 126 29] put
dup /Ucircumflex [85 0 121 28] put
dup /Ugrave [85 -30 121 27] put
dup /Ydieresis [89 0 136 168] put
dup /agrave [97 0 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -30 0 183] put
dup /idieresis [136 -30 0 168] put
dup /igrave [136 -30 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -10 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 -10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 133 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 133 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 17 0 180] put
dup /Cacute [67 30 133 180] put
dup /ccaron [99 17 0 183] put
dup /Ccaron [67 30 133 183] put
dup /ccircumflex [99 17 2 28] put
dup /Ccircumflex [67 30 133 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 30 133 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 0 133 183] put
dup /dcaron [100 17 156 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 0 133 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 0 133 255] put
dup /Emacron [69 0 133 30] put
dup /emacron [101 17 0 30] put
dup /Eogonek [69 100 0 178] put
dup /eogonek [101 100 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 30 133 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 30 133 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 0 133 255] put
dup /Hcircumflex [72 0 133 28] put
dup /hcircumflex [104 0 164 28] put
dup /Idotaccent [73 0 133 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 0 133 30] put
dup /iogonek [105 20 0 178] put
dup /Iogonek [73 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 0 133 29] put
dup /Jcircumflex [74 100 133 28] put
dup /Lacute [76 -100 133 180] put
dup /lacute [108 -12 147 180] put
dup /Lcaron [76 -100 133 183] put
dup /lcaron [108 -12 144 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 0 133 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 0 133 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 0 133 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 0 133 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 0 133 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 0 133 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 0 133 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 0 133 28] put
dup /tcaron [116 -77 92 183] put
dup /Tcaron [84 0 133 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 0 133 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 0 133 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 0 133 30] put
dup /uogonek [117 120 0 178] put
dup /Uogonek [85 5 20 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 0 133 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 0 133 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 0 133 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 0 133 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Helvetica-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Helvetica-Bold-Ogonki
/Helvetica-Bold /Helvetica-Bold-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 167 191 168] put
dup /ydieresis [121 111 0 168] put
dup /Ucircumflex [85 197 191 28] put
dup /Ugrave [85 197 191 27] put
dup /ucircumflex [117 139 0 28] put
dup /ugrave [117 139 0 27] put
dup /Idieresis [73 -27 191 168] put
dup /Igrave [73 -27 191 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /Ecircumflex [69 188 191 28] put
dup /Egrave [69 188 191 27] put
dup /ecircumflex [101 111 0 28] put
dup /egrave [101 111 0 27] put
dup /Agrave [65 197 191 27] put
dup /agrave [97 111 0 27] put
dup /Ograve [79 222 191 27] put
dup /ograve [111 139 0 27] put
dup /Atilde [65 197 191 29] put
dup /atilde [97 111 0 29] put
dup /Ntilde [78 200 191 29] put
dup /ntilde [110 146 0 29] put
dup /Otilde [79 222 191 29] put
dup /otilde [111 139 0 29] put
dup /Aring [65 197 191 31] put
dup /aring [97 111 0 31] put
dup /abreve [97 111 0 162] put
dup /Abreve [65 194 202 162] put
dup /aogonek [97 270 0 178] put
dup /Aogonek [65 444 0 178] put
dup /cacute [99 111 0 180] put
dup /Cacute [67 194 193 180] put
dup /ccaron [99 122 0 183] put
dup /Ccaron [67 210 191 183] put
dup /dbar [100 302 298 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 493 73 39] put
dup /Dcaron [68 194 190 183] put
dup /ecaron [101 111 0 183] put
dup /Ecaron [69 167 190 183] put
dup /edotaccent [101 103 0 255] put
dup /Edotaccent [69 188 191 255] put
dup /eogonek [101 150 0 178] put
dup /Eogonek [69 290 0 178] put
dup /gbreve [103 139 0 162] put
dup /Gbreve [71 222 191 162] put
dup /Idotaccent [73 -27 191 255] put
dup /iogonek [105 -39 0 178] put
dup /Iogonek [73 -30 0 178] put
dup /lacute [108 -7 193 180] put
dup /Lacute [76 139 193 180] put
dup /lcaron [108 155 73 39] put
dup /Lcaron [76 161 73 39] put
dup /nacute [110 159 0 180] put
dup /Nacute [78 231 193 180] put
dup /ncaron [110 111 0 183] put
dup /Ncaron [78 194 215 183] put
dup /ohungarumlaut [111 139 0 189] put
dup /Ohungarumlaut [79 222 191 189] put
dup /racute [114 48 0 180] put
dup /Racute [82 231 193 180] put
dup /rcaron [114 28 0 183] put
dup /Rcaron [82 194 190 183] put
dup /sacute [115 111 0 180] put
dup /Sacute [83 167 193 180] put
dup /scedilla [115 111 0 184] put
dup /Scedilla [83 167 0 184] put
dup /tcaron [116 249 0 39] put
dup /Tcaron [84 139 190 183] put
dup /tcedilla [116 86 0 184] put
dup /Tcedilla [84 197 0 184] put
dup /uhungarumlaut [117 139 0 189] put
dup /Uhungarumlaut [85 197 191 189] put
dup /uring [117 139 0 31] put
dup /Uring [85 194 190 31] put
dup /umacron [117 139 0 30] put
dup /Umacron [85 199 191 30] put
dup /uogonek [117 286 0 178] put
dup /Uogonek [85 260 0 178] put
dup /zacute [122 103 0 180] put
dup /Zacute [90 139 193 180] put
dup /zdotaccent [122 83 0 255] put
dup /Zdotaccent [90 139 206 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Helvetica-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Helvetica-Ogonki
/Helvetica /Helvetica-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 167 199 168] put
dup /ydieresis [121 83 0 168] put
dup /Ucircumflex [85 194 199 28] put
dup /Ugrave [85 194 199 27] put
dup /ucircumflex [117 111 0 28] put
dup /ugrave [117 111 0 27] put
dup /Idieresis [73 -21 199 168] put
dup /Igrave [73 -21 199 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /Ecircumflex [69 188 199 28] put
dup /Egrave [69 188 199 27] put
dup /ecircumflex [101 117 0 28] put
dup /egrave [101 117 0 27] put
dup /Agrave [65 167 199 27] put
dup /agrave [97 111 0 27] put
dup /Ograve [79 222 199 27] put
dup /ograve [111 111 0 27] put
dup /Atilde [65 167 199 29] put
dup /atilde [97 111 0 29] put
dup /Ntilde [78 200 199 29] put
dup /ntilde [110 117 0 29] put
dup /Otilde [79 222 199 29] put
dup /otilde [111 111 0 29] put
dup /Aring [65 167 199 31] put
dup /aring [97 111 0 31] put
dup /abreve [97 96 0 162] put
dup /Abreve [65 174 195 162] put
dup /aogonek [97 270 0 178] put
dup /Aogonek [65 424 0 178] put
dup /cacute [99 84 0 180] put
dup /Cacute [67 196 195 180] put
dup /ccaron [99 84 0 183] put
dup /Ccaron [67 196 195 183] put
dup /dbar [100 270 330 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 523 0 39] put
dup /Dcaron [68 102 195 183] put
dup /ecaron [101 93 0 183] put
dup /Ecaron [69 102 195 183] put
dup /edotaccent [101 111 0 255] put
dup /Edotaccent [69 188 199 255] put
dup /eogonek [101 150 0 178] put
dup /Eogonek [69 290 0 178] put
dup /gbreve [103 111 0 162] put
dup /Gbreve [71 222 199 162] put
dup /Idotaccent [73 -21 199 255] put
dup /iogonek [105 -75 0 178] put
dup /Iogonek [73 -30 0 178] put
dup /lacute [108 -27 195 180] put
dup /Lacute [76 -27 195 180] put
dup /lcaron [108 169 0 39] put
dup /Lcaron [76 276 0 39] put
dup /nacute [110 160 0 180] put
dup /Nacute [78 220 195 180] put
dup /ncaron [110 70 0 183] put
dup /Ncaron [78 160 195 183] put
dup /ohungarumlaut [111 112 0 189] put
dup /Ohungarumlaut [79 223 195 189] put
dup /racute [114 25 0 180] put
dup /Racute [82 200 195 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 100 195 183] put
dup /sacute [115 84 0 180] put
dup /Sacute [83 167 195 180] put
dup /scedilla [115 83 0 184] put
dup /Scedilla [83 167 0 184] put
dup /tcaron [116 291 0 39] put
dup /Tcaron [84 165 195 183] put
dup /tcedilla [116 84 0 184] put
dup /Tcedilla [84 185 0 184] put
dup /uhungarumlaut [117 112 0 189] put
dup /Uhungarumlaut [85 195 195 189] put
dup /umacron [117 111 0 30] put
dup /Umacron [85 194 199 30] put
dup /uogonek [117 255 0 178] put
dup /Uogonek [85 288 5 178] put
dup /uring [117 112 0 31] put
dup /Uring [85 195 195 31] put
dup /zacute [122 84 0 180] put
dup /Zacute [90 139 195 180] put
dup /zdotaccent [122 84 0 255] put
dup /Zdotaccent [90 139 195 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Times-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Times-Bold-Ogonki
/Times-Bold /Times-Bold-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 194 219 168] put
dup /ydieresis [121 83 0 168] put
dup /Ucircumflex [85 221 219 28] put
dup /Ugrave [85 221 219 27] put
dup /ucircumflex [117 104 0 28] put
dup /ugrave [117 104 0 27] put
dup /Idieresis [73 28 219 168] put
dup /Igrave [73 28 219 27] put
dup /idieresis [136 -34 0 168] put
dup /igrave [136 -34 0 27] put
dup /Ecircumflex [69 174 219 28] put
dup /Egrave [69 174 219 27] put
dup /ecircumflex [101 61 0 28] put
dup /egrave [101 61 0 27] put
dup /Agrave [65 187 219 27] put
dup /agrave [97 76 0 27] put
dup /Ograve [79 222 219 27] put
dup /ograve [111 83 0 27] put
dup /Atilde [65 187 219 29] put
dup /atilde [97 76 0 29] put
dup /Ntilde [78 194 219 29] put
dup /ntilde [110 111 0 29] put
dup /Otilde [79 222 219 29] put
dup /otilde [111 83 0 29] put
dup /Aring [65 187 219 31] put
dup /aring [97 76 0 31] put
dup /abreve [97 83 0 162] put
dup /Abreve [65 194 240 162] put
dup /aogonek [97 175 -30 178] put
dup /Aogonek [65 384 -30 178] put
dup /cacute [99 70 0 180] put
dup /Cacute [67 210 219 180] put
dup /ccaron [99 84 0 183] put
dup /Ccaron [67 232 219 183] put
dup /dbar [100 240 300 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 473 53 39] put
dup /Dcaron [68 194 210 183] put
dup /ecaron [101 61 0 183] put
dup /Ecaron [69 174 219 183] put
dup /edotaccent [101 61 0 255] put
dup /Edotaccent [69 187 219 255] put
dup /eogonek [101 114 -30 178] put
dup /Eogonek [69 295 -30 178] put
dup /gbreve [103 83 0 162] put
dup /Gbreve [71 222 219 162] put
dup /Idotaccent [73 28 219 255] put
dup /iogonek [105 -50 -30 178] put
dup /Iogonek [73 63 -30 178] put
dup /lacute [108 -3 210 180] put
dup /Lacute [76 167 210 180] put
dup /lcaron [108 194 53 39] put
dup /Lcaron [76 309 53 39] put
dup /nacute [110 90 0 180] put
dup /Nacute [78 190 219 180] put
dup /ncaron [110 111 0 183] put
dup /Ncaron [78 194 210 183] put
dup /ohungarumlaut [111 83 0 189] put
dup /Ohungarumlaut [79 222 219 189] put
dup /racute [114 79 0 180] put
dup /Racute [82 239 210 180] put
dup /rcaron [114 55 0 183] put
dup /Rcaron [82 194 210 183] put
dup /sacute [115 20 0 180] put
dup /Sacute [83 100 219 180] put
dup /scedilla [115 12 0 184] put
dup /Scedilla [83 94 0 184] put
dup /tcaron [116 271 0 39] put
dup /Tcaron [84 167 210 183] put
dup /tcedilla [116 89 0 184] put
dup /Tcedilla [84 227 0 184] put
dup /umacron [117 104 0 30] put
dup /Umacron [85 215 219 30] put
dup /uhungarumlaut [117 104 0 189] put
dup /Uhungarumlaut [85 221 219 189] put
dup /uogonek [117 236 -25 178] put
dup /Uogonek [85 299 -25 178] put
dup /uring [117 111 0 31] put
dup /Uring [85 194 174 31] put
dup /zacute [122 80 0 180] put
dup /Zacute [90 160 219 180] put
dup /zdotaccent [122 70 0 255] put
dup /Zdotaccent [90 200 219 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Times-Roman-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Times-Roman-Ogonki
/Times-Roman /Times-Roman-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Agrave [65 195 212 27] put
dup /Aring [65 185 187 31] put
dup /Atilde [65 195 212 29] put
dup /Ecircumflex [69 139 212 28] put
dup /Egrave [69 139 212 27] put
dup /Idieresis [73 0 212 168] put
dup /Igrave [73 0 212 27] put
dup /Ntilde [78 195 212 29] put
dup /Ograve [79 195 212 27] put
dup /Otilde [79 195 212 29] put
dup /Ucircumflex [85 195 212 28] put
dup /Ugrave [85 195 212 27] put
dup /Ydieresis [89 195 212 168] put
dup /agrave [97 56 0 27] put
dup /aring [97 56 0 31] put
dup /atilde [97 56 0 29] put
dup /ecircumflex [101 56 0 28] put
dup /egrave [101 56 0 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /ntilde [110 84 0 29] put
dup /ograve [111 84 0 27] put
dup /otilde [111 84 0 29] put
dup /ucircumflex [117 84 0 28] put
dup /ugrave [117 84 0 27] put
dup /ydieresis [121 84 0 168] put
dup /abreve [97 55 0 162] put
dup /Abreve [65 194 223 162] put
dup /aogonek [97 209 0 178] put
dup /Aogonek [65 465 0 178] put
dup /cacute [99 70 0 180] put
dup /Cacute [67 212 212 180] put
dup /ccaron [99 69 0 183] put
dup /Ccaron [67 196 212 183] put
dup /dbar [100 200 300 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 426 75 39] put
dup /Dcaron [68 194 216 183] put
dup /ecaron [101 55 0 183] put
dup /Ecaron [69 139 214 183] put
dup /edotaccent [101 61 0 255] put
dup /Edotaccent [69 154 212 255] put
dup /eogonek [101 142 9 178] put
dup /Eogonek [69 320 0 178] put
dup /gbreve [103 84 0 162] put
dup /Gbreve [71 195 212 162] put
dup /Idotaccent [73 0 212 255] put
dup /iogonek [105 12 0 178] put
dup /Iogonek [73 67 0 178] put
dup /lacute [108 -5 216 180] put
dup /Lacute [76 139 216 180] put
dup /lcaron [108 192 75 39] put
dup /Lcaron [76 250 52 39] put
dup /nacute [110 90 0 180] put
dup /Nacute [78 190 212 180] put
dup /ncaron [110 83 0 183] put
dup /Ncaron [78 194 214 183] put
dup /ohungarumlaut [111 83 0 189] put
dup /Ohungarumlaut [79 194 214 189] put
dup /racute [114 22 0 180] put
dup /Racute [82 210 216 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 167 216 183] put
dup /sacute [115 20 0 180] put
dup /Sacute [83 100 212 180] put
dup /scedilla [115 28 0 184] put
dup /Scedilla [83 112 0 184] put
dup /tcedilla [116 53 0 184] put
dup /Tcedilla [84 197 0 184] put
dup /tcaron [116 214 0 39] put
dup /Tcaron [84 139 216 183] put
dup /uhungarumlaut [117 83 0 189] put
dup /Uhungarumlaut [85 194 214 189] put
dup /umacron [117 81 0 30] put
dup /Umacron [85 205 212 30] put
dup /uogonek [117 236 5 178] put
dup /Uogonek [85 287 5 178] put
dup /uring [117 83 0 31] put
dup /Uring [85 194 179 31] put
dup /zacute [122 60 0 180] put
dup /Zacute [90 120 212 180] put
dup /zdotaccent [122 50 0 255] put
dup /Zdotaccent [90 140 212 255] put
makeComposite
%%EndResource

%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-15 support
/iso15dict 8 dict begin
  /fCourier ISO-8859-15Encoding /Courier-Ogonki reencode_font
  /fCourier-Bold ISO-8859-15Encoding /Courier-Bold-Ogonki reencode_font
  /fCourier-BoldOblique ISO-8859-15Encoding /Courier-BoldOblique-Ogonki reencode_font
  /fCourier-Oblique ISO-8859-15Encoding /Courier-Oblique-Ogonki reencode_font
  /fHelvetica ISO-8859-15Encoding /Helvetica-Ogonki reencode_font
  /fHelvetica-Bold ISO-8859-15Encoding /Helvetica-Bold-Ogonki reencode_font
  /fTimes-Bold ISO-8859-15Encoding /Times-Bold-Ogonki reencode_font
  /fTimes-Roman ISO-8859-15Encoding /Times-Roman-Ogonki reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (3-4) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(                        and the grad+ direction. Anticlockwise convention \(grad+) p n
(                        points down if 0, right if 90\)) N
() N
( NOTE   : Be sure that your angle and ref-line are compatible. The code will) N
(          abort if the ref-line is too short: some points of the domain) N
(          cannot be projected to ref-line in the angle direction.) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : DIST_LINEAR [distributions]) N
( PURPOSE: Piecewise linear 1D distribution along X.) N
( SYNTAX : &DIST_LINEAR file,length /) N
() N
(  file     [name] [none] Name of the ASCII file containing) N
(               the data to be interpolated in this format:) N
(                       n               \(number of points to be read\)) N
(                       x\(1\) v\(1\)       \(coordinate and value\)) N
(                       ...  ...) N
(                       x\(n\) v\(n\)) N
(               X must be sorted in increasing order) N
(  length   [dble] [0]    Smoothing length \(sliding average window\)) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : DIST_ORDER0 [distributions]) N
( PURPOSE: Blockwise constant 2D distribution.) N
( SYNTAX : &DIST_ORDER0 xn, zn /) N
(          x\(1\) ...  x\(xn-1\)) N
(          z\(1\) ...  z\(zn-1\)) N
(          v\(1,1\)  ... v\(xn,1\)          ) N
(            ...   ...   ...) N
(          v\(1,zn\) ... v\(xn,zn\)          ) N
() N
(  xn       [int] [none] Number of zones along X) N
(  zn       [int] [none] Number of zones along Z) N
(  x        [dble\(xn-1\)] [none] Boundaries of X-zones: first zone X < x\(1\), ) N
(                second zone x\(1\) < X < x\(2\), ... , last zone x\(xn-1\) < X) N
(  z        [dble\(zn-1\)] [none] Boundaries of Z-zones) N
(  v        [dble\(xn,zn\)] [none] Values inside each zone) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : DIST_PWCONR [distributions]) N
( PURPOSE: Piecewise constant radial \(2D\) distribution.) N
( SYNTAX : &DIST_PWCONR num, ref /) N
(             r\(1\)  ... ...  r\(num-1\)) N
(          v\(1\) v\(2\) ... v\(num-1\) v\(num\)) N
() N
(  num      [int] [none] Number of radial zones \(including outermost\)) N
(  ref      [dble\(2\)] [\(0d0,0d0\)] Reference point: center of radial zones) N
(  r        [dble\(num-1\)] [none] External radius of zones: ) N
(                first zone R < r\(1\), second r\(1\) =< R < r\(2\), ...) N
(                last r\(num-1\) =< R ) N
(  v        [dble\(num\)] [none] Values inside each zone) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : DIST_SPLINE [distributions]) N
( PURPOSE: Spline interpolated 1D distribution along X.) N
( SYNTAX : &DIST_SPLINE file /) N
() N
(  file     [name] [none] Name of the ASCII file containing) N
(               the data to be interpolated in this format:) N
(                       n               \(number of points to be read\)) N
(                       x\(1\) v\(1\)       \(coordinate and value\)) N
(                       ...  ...) N
(                       x\(n\) v\(n\)) N
(               X must be sorted in increasing order) N
() N
(doc.txt) (Page 3/8) (Feb 07, 05 17:17) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
( ----------------------------------------------------------------------------) p n
() N
( NAME   : ECHO) N
( PURPOSE: Parameters controlling runtime output) N
( SYNTAX : &ECHO Verbose,ItInfo,ItSnapshots,ItSnapshot1,OutputFile /) N
() N
(  Title            [word] [none] Title of the simulation) N
(  Verbose          [char\(4\)] ['1101'] Verbose flags for input,initialization,) N
(                        check and solver phases. Example: '0001' is verbose only) N
(                        during solver.) N
(  ItInfo           [int] [100] Frequency \(in number of timesteps\) at which) N
(                        solver echoes some basic information.) N
(  ItSnapshots      [int] [100] Frequency \(in number of timesteps\) at which) N
(                        snapshots are dumped \(usually PostScript\) ) N
(  ItSnaphot1       [int] [0]   Time step at which first snapshot is dumped) N
(  OutputFile       [name] ['NONE'] Name of a file for echo instead of screen) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : MATERIAL) N
( PURPOSE: Define material properties of a tagged domain) N
( SYNTAX : &MATERIAL tag, mode /) N
(          Followed by material data, with format depending on the mode \(see) N
(          below\)) N
() N
(  tag      [int] [none] The number assigned to a domain during mesh generation) N
(  mode     [char*5] ['ISOTR'] Type of material and/or spatial distribution.) N
(               The following modes are implemented and this is their data) N
(               format:) N
() N
(               'ISOTR' homogeneous isotropic elastic) N
(               One line, dble\(3\):) N
(               density, P-wave-velocity, S-wave-velocity) N
() N
(               'ANISO' homogeneous anisotropic) N
(               One line, dble\(5\):) N
(               density, c11, c13, c33, c44) N
() N
(               'GRADI' isotropic with constant gradient) N
(               Three $DIST_GRADIENT blocks: ) N
(               density, P-velocity, S-velocity) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : GENERAL) N
( PURPOSE: General parameters) N
( SYNTAX : &GENERAL iexec,ngll,fmax /) N
() N
(  iexec    [int] [0] Run level:) N
(                       0 = just check) N
(                       1 = solve) N
(  ngll     [int] [9] Number of GLL nodes per edge on each spectral element) N
(               \( polynomial order +1 \). Usually 5 to 9.) N
(  fmax     [dble] [0.d0] Maximum frequency to be well resolved. Mandatory.) N
(               This is a target frequency, the code will check if it is) N
(               compatible with the mesh and eventually issue a warning. To) N
(               improve the resolution for a given fmax you must increase ngll ) N
(               \(but you will have to use shorter timesteps\) or refine/redesign ) N
(               the mesh.) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : MESH_CART [mesh]) N
( PURPOSE: Rectangular box with structured mesh.) N
( SYNTAX : &CART xlim,zlim,nelem /) N
() N
(  xlim     [dble\(2\)] [none] X limits of the box \(min and max\)) N
(  zlim     [dble\(2\)] [none] Z limits of the box \(min and max\)) N
(  nelem    [int\(2\)] [none]  Number of elements along each direction) N
(doc.txt) (Page 4/8) (Feb 07, 05 17:17) title
border
grestore
(Printed by Jean-Paul Ampuero) rhead
(doc.txt) (2/4) (Monday February 07, 2005) footer
end % of iso15dict
pagesave restore
showpage
%%Trailer
end
%%EOF

%%EndDocument
 @endspecial Black Black eop end
%%Page: 13 13
TeXDict begin 13 12 bop Black -106 -193 a Fn(2.3)35 b(F)-9
b(ormat)35 b(of)g(the)g(input)f(\014le)2592 b(13)p -106
-155 3945 4 v Black -106 5240 a @beginspecial 24 @llx
24 @lly 588 @urx 768 @ury 4733 @rwi @setspecial
%%BeginDocument: ../FIGURES/selfdoc_3.ps
%!PS-Adobe-3.0
%%Title: doc.txt
%%For: Jean-Paul Ampuero
%%Creator: a2ps version 4.13
%%CreationDate: Mon Feb  7 17:17:13 2005
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1 0
%%PageOrder: Ascend
%%DocumentMedia: letter 612 792 0 () ()
%%DocumentNeededResources: font Symbol
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-15Encoding
%%+ font Courier-Bold-Ogonki
%%+ font Courier-BoldOblique-Ogonki
%%+ font Courier-Oblique-Ogonki
%%+ font Courier-Ogonki
%%+ font Helvetica-Bold-Ogonki
%%+ font Helvetica-Ogonki
%%+ font Times-Bold-Ogonki
%%+ font Times-Roman-Ogonki
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Symbol
%%BeginResource: encoding ISO-8859-15Encoding
/ISO-8859-15Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /Euro /yen /Scaron /section 
/scaron /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /Zcaron /mu /paragraph /bullet 
/zcaron /onesuperior /ordmasculine /guillemotright /OE /oe /Ydieresis /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
%%BeginResource: font Courier-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Bold-Ogonki
/Courier-Bold /Courier-Bold-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -50 123 27] put
dup /Aring [65 -10 123 31] put
dup /Atilde [65 -30 123 29] put
dup /Ecircumflex [69 0 123 28] put
dup /Egrave [69 0 123 27] put
dup /Gcaron [71 10 123 183] put
dup /Idieresis [73 0 123 168] put
dup /Igrave [73 0 123 27] put
dup /Ntilde [78 0 123 29] put
dup /Ograve [79 0 123 27] put
dup /Otilde [79 0 123 29] put
dup /Ucircumflex [85 0 123 28] put
dup /Ugrave [85 -30 123 27] put
dup /Ydieresis [89 0 123 168] put
dup /agrave [97 -30 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -40 0 183] put
dup /idieresis [136 -40 0 168] put
dup /igrave [136 0 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -20 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 130 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 130 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 0 130 180] put
dup /ccaron [99 18 0 183] put
dup /Ccaron [67 18 130 183] put
dup /ccircumflex [99 18 0 28] put
dup /Ccircumflex [67 18 130 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 0 130 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 0 130 183] put
dup /dcaron [100 30 195 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 0 130 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 0 130 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 0 130 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 18 130 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 18 130 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 18 130 255] put
dup /hcircumflex [104 -20 195 28] put
dup /Hcircumflex [72 0 130 28] put
dup /Iogonek [73 20 0 178] put
dup /iogonek [105 20 0 178] put
dup /Idotaccent [73 0 130 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 0 130 30] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 0 130 29] put
dup /Jcircumflex [74 85 130 28] put
dup /Lacute [76 -100 130 180] put
dup /lacute [108 -20 195 180] put
dup /Lcaron [76 -100 130 183] put
dup /lcaron [108 0 195 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 0 130 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 0 130 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 0 130 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 0 130 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 0 130 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 0 130 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 0 130 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 0 130 28] put
dup /tcaron [116 0 107 183] put
dup /Tcaron [84 0 130 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 0 130 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 0 130 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 0 130 30] put
dup /uogonek [117 109 0 178] put
dup /Uogonek [85 5 23 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 0 130 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 0 130 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 0 130 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 0 130 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-BoldOblique-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-BoldOblique-Ogonki
/Courier-BoldOblique /Courier-BoldOblique-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -24 123 27] put
dup /Aring [65 16 123 31] put
dup /Atilde [65 -4 123 29] put
dup /Ecircumflex [69 26 123 28] put
dup /Egrave [69 26 123 27] put
dup /Gcaron [71 36 123 183] put
dup /Idieresis [73 26 123 168] put
dup /Igrave [73 26 123 27] put
dup /Ntilde [78 26 123 29] put
dup /Ograve [79 26 123 27] put
dup /Otilde [79 26 123 29] put
dup /Ucircumflex [85 26 123 28] put
dup /Ugrave [85 -4 123 27] put
dup /Ydieresis [89 26 123 168] put
dup /agrave [97 -30 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -40 0 183] put
dup /idieresis [136 -40 0 168] put
dup /igrave [136 0 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -20 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 10 0 168] put
dup /Abreve [65 -18 130 162] put
dup /abreve [97 0 0 162] put
dup /Amacron [65 -15 130 30] put
dup /amacron [97 0 0 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 30 130 180] put
dup /ccaron [99 0 0 183] put
dup /Ccaron [67 30 130 183] put
dup /ccircumflex [99 0 0 28] put
dup /Ccircumflex [67 30 130 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 30 130 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 -12 130 183] put
dup /dcaron [100 35 178 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 30 130 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 30 130 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 30 130 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 30 130 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 30 130 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 30 130 255] put
dup /hcircumflex [104 0 178 28] put
dup /Hcircumflex [72 30 130 28] put
dup /Idotaccent [73 30 130 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 30 130 30] put
dup /Iogonek [73 20 0 178] put
dup /iogonek [105 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 30 130 29] put
dup /Jcircumflex [74 95 130 28] put
dup /Lacute [76 -88 130 180] put
dup /lacute [108 0 178 180] put
dup /Lcaron [76 -88 130 183] put
dup /lcaron [108 0 178 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 30 130 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 30 130 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 30 130 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 30 130 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 30 130 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 30 130 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 30 130 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 30 130 28] put
dup /tcaron [116 -59 106 183] put
dup /Tcaron [84 30 130 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 30 130 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 30 130 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 30 130 30] put
dup /Uogonek [85 0 7 178] put
dup /uogonek [117 108 0 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 30 130 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 30 130 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 30 130 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 30 130 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-Oblique-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Oblique-Ogonki
/Courier-Oblique /Courier-Oblique-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -4 121 27] put
dup /Aring [65 12 126 31] put
dup /Atilde [65 27 126 29] put
dup /Ecircumflex [69 26 121 28] put
dup /Egrave [69 26 121 27] put
dup /Gcaron [71 29 136 183] put
dup /Idieresis [73 29 136 168] put
dup /Igrave [73 26 121 27] put
dup /Ntilde [78 27 126 29] put
dup /Ograve [79 26 121 27] put
dup /Otilde [79 27 126 29] put
dup /Ucircumflex [85 26 121 28] put
dup /Ugrave [85 -4 121 27] put
dup /Ydieresis [89 29 136 168] put
dup /agrave [97 0 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -30 0 183] put
dup /idieresis [136 -30 0 168] put
dup /igrave [136 -30 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -10 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 -10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 133 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 133 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 53 133 180] put
dup /ccaron [99 0 0 183] put
dup /Ccaron [67 53 133 183] put
dup /ccircumflex [99 0 2 28] put
dup /Ccircumflex [67 53 133 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 53 133 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 20 182 183] put
dup /Dcaron [68 33 133 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 53 133 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 53 133 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 53 133 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 -10 0 180] put
dup /gbreve [103 -10 0 162] put
dup /Gbreve [71 53 133 162] put
dup /gcircumflex [103 -10 0 28] put
dup /Gcircumflex [71 53 133 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 53 186 255] put
dup /hcircumflex [104 0 182 28] put
dup /Hcircumflex [72 30 133 28] put
dup /Idotaccent [73 30 133 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 30 133 30] put
dup /iogonek [105 20 0 178] put
dup /Iogonek [73 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 30 133 29] put
dup /Jcircumflex [74 98 133 28] put
dup /Lacute [76 -83 133 180] put
dup /lacute [108 0 182 180] put
dup /Lcaron [76 -83 133 183] put
dup /lcaron [108 0 182 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 53 133 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 53 133 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 53 133 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 53 133 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 53 133 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 40 133 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 53 133 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 53 133 28] put
dup /tcaron [116 -65 118 183] put
dup /Tcaron [84 40 133 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 53 133 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 53 133 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 53 133 30] put
dup /uogonek [117 120 0 178] put
dup /Uogonek [85 5 15 178] put
dup /uring [117 -30 0 31] put
dup /Uring [85 53 133 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 53 133 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 40 133 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 40 133 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Ogonki
/Courier /Courier-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -30 121 27] put
dup /Aring [65 -15 126 31] put
dup /Atilde [65 0 126 29] put
dup /Ecircumflex [69 0 121 28] put
dup /Egrave [69 0 121 27] put
dup /Gcaron [71 0 136 183] put
dup /Idieresis [73 0 136 168] put
dup /Igrave [73 0 121 27] put
dup /Ntilde [78 0 126 29] put
dup /Ograve [79 0 121 27] put
dup /Otilde [79 0 126 29] put
dup /Ucircumflex [85 0 121 28] put
dup /Ugrave [85 -30 121 27] put
dup /Ydieresis [89 0 136 168] put
dup /agrave [97 0 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -30 0 183] put
dup /idieresis [136 -30 0 168] put
dup /igrave [136 -30 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -10 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 -10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 133 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 133 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 17 0 180] put
dup /Cacute [67 30 133 180] put
dup /ccaron [99 17 0 183] put
dup /Ccaron [67 30 133 183] put
dup /ccircumflex [99 17 2 28] put
dup /Ccircumflex [67 30 133 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 30 133 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 0 133 183] put
dup /dcaron [100 17 156 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 0 133 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 0 133 255] put
dup /Emacron [69 0 133 30] put
dup /emacron [101 17 0 30] put
dup /Eogonek [69 100 0 178] put
dup /eogonek [101 100 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 30 133 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 30 133 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 0 133 255] put
dup /Hcircumflex [72 0 133 28] put
dup /hcircumflex [104 0 164 28] put
dup /Idotaccent [73 0 133 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 0 133 30] put
dup /iogonek [105 20 0 178] put
dup /Iogonek [73 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 0 133 29] put
dup /Jcircumflex [74 100 133 28] put
dup /Lacute [76 -100 133 180] put
dup /lacute [108 -12 147 180] put
dup /Lcaron [76 -100 133 183] put
dup /lcaron [108 -12 144 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 0 133 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 0 133 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 0 133 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 0 133 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 0 133 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 0 133 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 0 133 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 0 133 28] put
dup /tcaron [116 -77 92 183] put
dup /Tcaron [84 0 133 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 0 133 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 0 133 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 0 133 30] put
dup /uogonek [117 120 0 178] put
dup /Uogonek [85 5 20 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 0 133 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 0 133 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 0 133 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 0 133 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Helvetica-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Helvetica-Bold-Ogonki
/Helvetica-Bold /Helvetica-Bold-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 167 191 168] put
dup /ydieresis [121 111 0 168] put
dup /Ucircumflex [85 197 191 28] put
dup /Ugrave [85 197 191 27] put
dup /ucircumflex [117 139 0 28] put
dup /ugrave [117 139 0 27] put
dup /Idieresis [73 -27 191 168] put
dup /Igrave [73 -27 191 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /Ecircumflex [69 188 191 28] put
dup /Egrave [69 188 191 27] put
dup /ecircumflex [101 111 0 28] put
dup /egrave [101 111 0 27] put
dup /Agrave [65 197 191 27] put
dup /agrave [97 111 0 27] put
dup /Ograve [79 222 191 27] put
dup /ograve [111 139 0 27] put
dup /Atilde [65 197 191 29] put
dup /atilde [97 111 0 29] put
dup /Ntilde [78 200 191 29] put
dup /ntilde [110 146 0 29] put
dup /Otilde [79 222 191 29] put
dup /otilde [111 139 0 29] put
dup /Aring [65 197 191 31] put
dup /aring [97 111 0 31] put
dup /abreve [97 111 0 162] put
dup /Abreve [65 194 202 162] put
dup /aogonek [97 270 0 178] put
dup /Aogonek [65 444 0 178] put
dup /cacute [99 111 0 180] put
dup /Cacute [67 194 193 180] put
dup /ccaron [99 122 0 183] put
dup /Ccaron [67 210 191 183] put
dup /dbar [100 302 298 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 493 73 39] put
dup /Dcaron [68 194 190 183] put
dup /ecaron [101 111 0 183] put
dup /Ecaron [69 167 190 183] put
dup /edotaccent [101 103 0 255] put
dup /Edotaccent [69 188 191 255] put
dup /eogonek [101 150 0 178] put
dup /Eogonek [69 290 0 178] put
dup /gbreve [103 139 0 162] put
dup /Gbreve [71 222 191 162] put
dup /Idotaccent [73 -27 191 255] put
dup /iogonek [105 -39 0 178] put
dup /Iogonek [73 -30 0 178] put
dup /lacute [108 -7 193 180] put
dup /Lacute [76 139 193 180] put
dup /lcaron [108 155 73 39] put
dup /Lcaron [76 161 73 39] put
dup /nacute [110 159 0 180] put
dup /Nacute [78 231 193 180] put
dup /ncaron [110 111 0 183] put
dup /Ncaron [78 194 215 183] put
dup /ohungarumlaut [111 139 0 189] put
dup /Ohungarumlaut [79 222 191 189] put
dup /racute [114 48 0 180] put
dup /Racute [82 231 193 180] put
dup /rcaron [114 28 0 183] put
dup /Rcaron [82 194 190 183] put
dup /sacute [115 111 0 180] put
dup /Sacute [83 167 193 180] put
dup /scedilla [115 111 0 184] put
dup /Scedilla [83 167 0 184] put
dup /tcaron [116 249 0 39] put
dup /Tcaron [84 139 190 183] put
dup /tcedilla [116 86 0 184] put
dup /Tcedilla [84 197 0 184] put
dup /uhungarumlaut [117 139 0 189] put
dup /Uhungarumlaut [85 197 191 189] put
dup /uring [117 139 0 31] put
dup /Uring [85 194 190 31] put
dup /umacron [117 139 0 30] put
dup /Umacron [85 199 191 30] put
dup /uogonek [117 286 0 178] put
dup /Uogonek [85 260 0 178] put
dup /zacute [122 103 0 180] put
dup /Zacute [90 139 193 180] put
dup /zdotaccent [122 83 0 255] put
dup /Zdotaccent [90 139 206 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Helvetica-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Helvetica-Ogonki
/Helvetica /Helvetica-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 167 199 168] put
dup /ydieresis [121 83 0 168] put
dup /Ucircumflex [85 194 199 28] put
dup /Ugrave [85 194 199 27] put
dup /ucircumflex [117 111 0 28] put
dup /ugrave [117 111 0 27] put
dup /Idieresis [73 -21 199 168] put
dup /Igrave [73 -21 199 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /Ecircumflex [69 188 199 28] put
dup /Egrave [69 188 199 27] put
dup /ecircumflex [101 117 0 28] put
dup /egrave [101 117 0 27] put
dup /Agrave [65 167 199 27] put
dup /agrave [97 111 0 27] put
dup /Ograve [79 222 199 27] put
dup /ograve [111 111 0 27] put
dup /Atilde [65 167 199 29] put
dup /atilde [97 111 0 29] put
dup /Ntilde [78 200 199 29] put
dup /ntilde [110 117 0 29] put
dup /Otilde [79 222 199 29] put
dup /otilde [111 111 0 29] put
dup /Aring [65 167 199 31] put
dup /aring [97 111 0 31] put
dup /abreve [97 96 0 162] put
dup /Abreve [65 174 195 162] put
dup /aogonek [97 270 0 178] put
dup /Aogonek [65 424 0 178] put
dup /cacute [99 84 0 180] put
dup /Cacute [67 196 195 180] put
dup /ccaron [99 84 0 183] put
dup /Ccaron [67 196 195 183] put
dup /dbar [100 270 330 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 523 0 39] put
dup /Dcaron [68 102 195 183] put
dup /ecaron [101 93 0 183] put
dup /Ecaron [69 102 195 183] put
dup /edotaccent [101 111 0 255] put
dup /Edotaccent [69 188 199 255] put
dup /eogonek [101 150 0 178] put
dup /Eogonek [69 290 0 178] put
dup /gbreve [103 111 0 162] put
dup /Gbreve [71 222 199 162] put
dup /Idotaccent [73 -21 199 255] put
dup /iogonek [105 -75 0 178] put
dup /Iogonek [73 -30 0 178] put
dup /lacute [108 -27 195 180] put
dup /Lacute [76 -27 195 180] put
dup /lcaron [108 169 0 39] put
dup /Lcaron [76 276 0 39] put
dup /nacute [110 160 0 180] put
dup /Nacute [78 220 195 180] put
dup /ncaron [110 70 0 183] put
dup /Ncaron [78 160 195 183] put
dup /ohungarumlaut [111 112 0 189] put
dup /Ohungarumlaut [79 223 195 189] put
dup /racute [114 25 0 180] put
dup /Racute [82 200 195 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 100 195 183] put
dup /sacute [115 84 0 180] put
dup /Sacute [83 167 195 180] put
dup /scedilla [115 83 0 184] put
dup /Scedilla [83 167 0 184] put
dup /tcaron [116 291 0 39] put
dup /Tcaron [84 165 195 183] put
dup /tcedilla [116 84 0 184] put
dup /Tcedilla [84 185 0 184] put
dup /uhungarumlaut [117 112 0 189] put
dup /Uhungarumlaut [85 195 195 189] put
dup /umacron [117 111 0 30] put
dup /Umacron [85 194 199 30] put
dup /uogonek [117 255 0 178] put
dup /Uogonek [85 288 5 178] put
dup /uring [117 112 0 31] put
dup /Uring [85 195 195 31] put
dup /zacute [122 84 0 180] put
dup /Zacute [90 139 195 180] put
dup /zdotaccent [122 84 0 255] put
dup /Zdotaccent [90 139 195 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Times-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Times-Bold-Ogonki
/Times-Bold /Times-Bold-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 194 219 168] put
dup /ydieresis [121 83 0 168] put
dup /Ucircumflex [85 221 219 28] put
dup /Ugrave [85 221 219 27] put
dup /ucircumflex [117 104 0 28] put
dup /ugrave [117 104 0 27] put
dup /Idieresis [73 28 219 168] put
dup /Igrave [73 28 219 27] put
dup /idieresis [136 -34 0 168] put
dup /igrave [136 -34 0 27] put
dup /Ecircumflex [69 174 219 28] put
dup /Egrave [69 174 219 27] put
dup /ecircumflex [101 61 0 28] put
dup /egrave [101 61 0 27] put
dup /Agrave [65 187 219 27] put
dup /agrave [97 76 0 27] put
dup /Ograve [79 222 219 27] put
dup /ograve [111 83 0 27] put
dup /Atilde [65 187 219 29] put
dup /atilde [97 76 0 29] put
dup /Ntilde [78 194 219 29] put
dup /ntilde [110 111 0 29] put
dup /Otilde [79 222 219 29] put
dup /otilde [111 83 0 29] put
dup /Aring [65 187 219 31] put
dup /aring [97 76 0 31] put
dup /abreve [97 83 0 162] put
dup /Abreve [65 194 240 162] put
dup /aogonek [97 175 -30 178] put
dup /Aogonek [65 384 -30 178] put
dup /cacute [99 70 0 180] put
dup /Cacute [67 210 219 180] put
dup /ccaron [99 84 0 183] put
dup /Ccaron [67 232 219 183] put
dup /dbar [100 240 300 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 473 53 39] put
dup /Dcaron [68 194 210 183] put
dup /ecaron [101 61 0 183] put
dup /Ecaron [69 174 219 183] put
dup /edotaccent [101 61 0 255] put
dup /Edotaccent [69 187 219 255] put
dup /eogonek [101 114 -30 178] put
dup /Eogonek [69 295 -30 178] put
dup /gbreve [103 83 0 162] put
dup /Gbreve [71 222 219 162] put
dup /Idotaccent [73 28 219 255] put
dup /iogonek [105 -50 -30 178] put
dup /Iogonek [73 63 -30 178] put
dup /lacute [108 -3 210 180] put
dup /Lacute [76 167 210 180] put
dup /lcaron [108 194 53 39] put
dup /Lcaron [76 309 53 39] put
dup /nacute [110 90 0 180] put
dup /Nacute [78 190 219 180] put
dup /ncaron [110 111 0 183] put
dup /Ncaron [78 194 210 183] put
dup /ohungarumlaut [111 83 0 189] put
dup /Ohungarumlaut [79 222 219 189] put
dup /racute [114 79 0 180] put
dup /Racute [82 239 210 180] put
dup /rcaron [114 55 0 183] put
dup /Rcaron [82 194 210 183] put
dup /sacute [115 20 0 180] put
dup /Sacute [83 100 219 180] put
dup /scedilla [115 12 0 184] put
dup /Scedilla [83 94 0 184] put
dup /tcaron [116 271 0 39] put
dup /Tcaron [84 167 210 183] put
dup /tcedilla [116 89 0 184] put
dup /Tcedilla [84 227 0 184] put
dup /umacron [117 104 0 30] put
dup /Umacron [85 215 219 30] put
dup /uhungarumlaut [117 104 0 189] put
dup /Uhungarumlaut [85 221 219 189] put
dup /uogonek [117 236 -25 178] put
dup /Uogonek [85 299 -25 178] put
dup /uring [117 111 0 31] put
dup /Uring [85 194 174 31] put
dup /zacute [122 80 0 180] put
dup /Zacute [90 160 219 180] put
dup /zdotaccent [122 70 0 255] put
dup /Zdotaccent [90 200 219 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Times-Roman-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Times-Roman-Ogonki
/Times-Roman /Times-Roman-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Agrave [65 195 212 27] put
dup /Aring [65 185 187 31] put
dup /Atilde [65 195 212 29] put
dup /Ecircumflex [69 139 212 28] put
dup /Egrave [69 139 212 27] put
dup /Idieresis [73 0 212 168] put
dup /Igrave [73 0 212 27] put
dup /Ntilde [78 195 212 29] put
dup /Ograve [79 195 212 27] put
dup /Otilde [79 195 212 29] put
dup /Ucircumflex [85 195 212 28] put
dup /Ugrave [85 195 212 27] put
dup /Ydieresis [89 195 212 168] put
dup /agrave [97 56 0 27] put
dup /aring [97 56 0 31] put
dup /atilde [97 56 0 29] put
dup /ecircumflex [101 56 0 28] put
dup /egrave [101 56 0 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /ntilde [110 84 0 29] put
dup /ograve [111 84 0 27] put
dup /otilde [111 84 0 29] put
dup /ucircumflex [117 84 0 28] put
dup /ugrave [117 84 0 27] put
dup /ydieresis [121 84 0 168] put
dup /abreve [97 55 0 162] put
dup /Abreve [65 194 223 162] put
dup /aogonek [97 209 0 178] put
dup /Aogonek [65 465 0 178] put
dup /cacute [99 70 0 180] put
dup /Cacute [67 212 212 180] put
dup /ccaron [99 69 0 183] put
dup /Ccaron [67 196 212 183] put
dup /dbar [100 200 300 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 426 75 39] put
dup /Dcaron [68 194 216 183] put
dup /ecaron [101 55 0 183] put
dup /Ecaron [69 139 214 183] put
dup /edotaccent [101 61 0 255] put
dup /Edotaccent [69 154 212 255] put
dup /eogonek [101 142 9 178] put
dup /Eogonek [69 320 0 178] put
dup /gbreve [103 84 0 162] put
dup /Gbreve [71 195 212 162] put
dup /Idotaccent [73 0 212 255] put
dup /iogonek [105 12 0 178] put
dup /Iogonek [73 67 0 178] put
dup /lacute [108 -5 216 180] put
dup /Lacute [76 139 216 180] put
dup /lcaron [108 192 75 39] put
dup /Lcaron [76 250 52 39] put
dup /nacute [110 90 0 180] put
dup /Nacute [78 190 212 180] put
dup /ncaron [110 83 0 183] put
dup /Ncaron [78 194 214 183] put
dup /ohungarumlaut [111 83 0 189] put
dup /Ohungarumlaut [79 194 214 189] put
dup /racute [114 22 0 180] put
dup /Racute [82 210 216 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 167 216 183] put
dup /sacute [115 20 0 180] put
dup /Sacute [83 100 212 180] put
dup /scedilla [115 28 0 184] put
dup /Scedilla [83 112 0 184] put
dup /tcedilla [116 53 0 184] put
dup /Tcedilla [84 197 0 184] put
dup /tcaron [116 214 0 39] put
dup /Tcaron [84 139 216 183] put
dup /uhungarumlaut [117 83 0 189] put
dup /Uhungarumlaut [85 194 214 189] put
dup /umacron [117 81 0 30] put
dup /Umacron [85 205 212 30] put
dup /uogonek [117 236 5 178] put
dup /Uogonek [85 287 5 178] put
dup /uring [117 83 0 31] put
dup /Uring [85 194 179 31] put
dup /zacute [122 60 0 180] put
dup /Zacute [90 120 212 180] put
dup /zdotaccent [122 50 0 255] put
dup /Zdotaccent [90 140 212 255] put
makeComposite
%%EndResource

%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-15 support
/iso15dict 8 dict begin
  /fCourier ISO-8859-15Encoding /Courier-Ogonki reencode_font
  /fCourier-Bold ISO-8859-15Encoding /Courier-Bold-Ogonki reencode_font
  /fCourier-BoldOblique ISO-8859-15Encoding /Courier-BoldOblique-Ogonki reencode_font
  /fCourier-Oblique ISO-8859-15Encoding /Courier-Oblique-Ogonki reencode_font
  /fHelvetica ISO-8859-15Encoding /Helvetica-Ogonki reencode_font
  /fHelvetica-Bold ISO-8859-15Encoding /Helvetica-Bold-Ogonki reencode_font
  /fTimes-Bold ISO-8859-15Encoding /Times-Bold-Ogonki reencode_font
  /fTimes-Roman ISO-8859-15Encoding /Times-Roman-Ogonki reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (5-6) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  FaultX   [log] [F] Cut the box in the middle by a horizontal fault) p n
(                         If enabled, nelem\(2\) must be even) N
() N
( NOTE: the tags for the boundaries are) N
(               1       Bottom ) N
(               2       Right        ) N
(               3       Top  ) N
(               4       Left) N
(               5       FaultBottom) N
(               6       FaultTop) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : MESH_CART_DOMAIN) N
( PURPOSE: Define a subdomain within a structured meshed box.) N
( SYNTAX : &MESH_CART_DOMAIN tag,ex,ez /) N
() N
(  tag      [int] [none] Tag number assigned to this domain. ) N
(  ex       [int\(2\)] [none]  First and last element along the X direction.) N
(  ez       [int\(2\)] [none]  First and last element along the Z direction.) N
() N
( NOTE   : If you ignore this input block a single domain \(tag=1\) will span ) N
(          the whole box ) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : MESH_EMC2 [mesh]) N
( PURPOSE: Imports a mesh from INRIA's EMC2 mesh generator in FTQ format) N
( SYNTAX : &MESH_EMC2 file /) N
() N
(  file     [name] [none] Name of the FTQ file, including suffix) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : MESH_DEF) N
( PURPOSE: Selects a method to import/generate a mesh.) N
( SYNTAX : &MESH_DEF method /) N
() N
(  method   [name] [none] Choices are: 'CARTESIAN' or 'EMC2') N
(               ) N
( ----------------------------------------------------------------------------) N
() N
( NAME   : PLOTS) N
( PURPOSE: Selects a format to export snapshots) N
( SYNTAX : &PLOTS visual3,avs,postscript,fields /) N
() N
(  fields   [char*] ['V'] Which fields to export in snapshots) N
(                       \(in parenthesis: field code of output files\)) N
(                               'D'     displacements \(dx,dz\)) N
(                               'V'     velocity \(vx,vz\)) N
(                               'A'     acceleration \(ax,az\)) N
(                               'E'     strain \(e11,e22,e12\)) N
(                               'S'     stress \(s11,s22,s12,s33\)) N
(  postscript [log] [T] PostScript) N
(  avs      [log] [F] AVS) N
(  visual3  [log] [F] Visual3) N
(  bin      [log] [T] binary) N
(               ) N
( NOTE   : if you choose PostScript you may want to provide a $POSTSCRIPT input b) N
(lock) N
(          Other formats apply only for 'DVA' fields, 'ES' are exported as binary) N
(.) N
() N
( NOTE   : Visual3 and AVS have not been tested/checked recently) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : PLOTS_POSTCRIPT [plots]) N
( PURPOSE: Preferences for PostScript snapshots) N
(doc.txt) (Page 5/8) (Feb 07, 05 17:17) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
( SYNTAX : &PLOTS_POSTSCRIPT vectors, mesh, CpModel, color,) p n
(               isubsamp, boundaries, symbols, numbers,) N
(               ScaleField, CutVect, SizeMax, ) N
(               ArrowHeadAngle, ArrowHBRatio,) N
(               Interpol, DisplayPts,) N
(               ScaleX, ScaleZ, USLetter, PageX0, PageZ0 /) N
() N
(  vectors          [log] [F] Plots a vectorial field \(with arrows\)) N
(  mesh             [log] [F] Plots the mesh on background) N
(  CpModel          [log] [F] Plots the P-velocity model as background) N
(  color            [log] [F] Color output) N
(  isubsamp         [int] [0] Subsampling of the GLL nodes for the) N
(                                 output of velocity model. The default uses ) N
(                                 vertex and middle point values only. ) N
(                                 isubsamp=3 samples every 3 GLL point, etc) N
(  boundaries       [log] [T] Colors every tagged boundary) N
(  symbols          [log] [T] Plots symbols for sources and receivers) N
(  numbers          [log] [F] Plots the element numbers) N
(  ScaleField       [dble] [0d0] Scale factor for the field amplitude. The) N
(                       default scales each snapshot by its maximum amplitude.) N
(                       This is not convenient for comparing snapshots or ) N
(                       running movies) N
(  CutVect          [dble] [1.d0] Minimum arrow length as a percentage of ) N
(                       scale factor) N
(  SizeMax          [dble] [1.d0] Maximum arrow length \(in cm\)) N
(  ArrowHeadAngle   [dble] [20d0] Angle between arrow body and head \(degrees\)) N
(  ArrowHBRatio     [dble] [0.4d0] Arrow head to body ratio ) N
(  Interpol         [log] [T] Interpolate field. Subsampling allows smaller ) N
(                       snapshot files.) N
(  DisplayPts       [log] [3] Number of points/element/direction for ) N
(                       interpolation. The default subsamples using only vertex ) N
(                       and middle point values) N
(  ScaleX           [dble] [1d0] Scale factor in the X direction) N
(  ScaleZ           [dble] [1d0] Scale factor in the Z direction) N
(  USLetter         [log] [T] US letter format or French A4) N
(  PageX0           [dble] [2.2d0] X-origin in the page \(cm\)) N
(  PageZ0           [dble] [2.2d0] Z-origin in the page \(cm\)) N
(               ) N
( ----------------------------------------------------------------------------) N
() N
( NAME   : REC_LINE) N
( PURPOSE: Defines a line of receivers) N
( SYNTAX : &REC_LINE number,isamp,field,first,last,RelocTo,file,irepr /) N
() N
(  number   [int] [0] Number of stations in the line) N
(  isamp    [int] [20] Sampling stride \(in number of timesteps\). Beware that) N
(               for stability reasons the timestep can be very small.) N
(  field    [char] ['V'] The field in the seismogram:) N
(                               'D'     displacement) N
(                               'V'     velocity) N
(                               'A'     acceleration) N
(  First    [dble\(2\)] Coordinates of the first station) N
(  Last     [dble\(2\)] Coordinates of the last station) N
(  RelocTo  [int] [none] Stations can be relocated to one of the boundaries, ) N
(               usually the free surface. You must give here the boundary tag.) N
(  file     [name] [none] Station coordinates can be read from a file.) N
(  irepr    [char] ['D'] Abscissa for the seismic multitraces plot:) N
(                               'X' Horizontal coordinate ) N
(                               'Z' Depth) N
(                               'D' Distance to the first station) N
() N
( NOTE   : There are two methods to set the receivers coordinates:) N
(               - by ~equally sampling between given First and Last stations) N
(               - from a coordinates file) N
() N
( NOTE   : The stations are automatically relocated to the nearest GLL node or) N
(          vertically projected to the boundary tagged by RelocTo) N
() N
( ----------------------------------------------------------------------------) N
(doc.txt) (Page 6/8) (Feb 07, 05 17:17) title
border
grestore
(Printed by Jean-Paul Ampuero) rhead
(doc.txt) (3/4) (Monday February 07, 2005) footer
end % of iso15dict
pagesave restore
showpage
%%Trailer
end
%%EOF

%%EndDocument
 @endspecial Black Black eop end
%%Page: 14 14
TeXDict begin 14 13 bop Black -106 -193 a Fn(2.3)35 b(F)-9
b(ormat)35 b(of)g(the)g(input)f(\014le)2592 b(14)p -106
-155 3945 4 v Black -106 5240 a @beginspecial 24 @llx
24 @lly 588 @urx 768 @ury 4733 @rwi @setspecial
%%BeginDocument: ../FIGURES/selfdoc_4.ps
%!PS-Adobe-3.0
%%Title: doc.txt
%%For: Jean-Paul Ampuero
%%Creator: a2ps version 4.13
%%CreationDate: Mon Feb  7 17:17:13 2005
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1 0
%%PageOrder: Ascend
%%DocumentMedia: letter 612 792 0 () ()
%%DocumentNeededResources: font Symbol
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-15Encoding
%%+ font Courier-Bold-Ogonki
%%+ font Courier-BoldOblique-Ogonki
%%+ font Courier-Oblique-Ogonki
%%+ font Courier-Ogonki
%%+ font Helvetica-Bold-Ogonki
%%+ font Helvetica-Ogonki
%%+ font Times-Bold-Ogonki
%%+ font Times-Roman-Ogonki
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Symbol
%%BeginResource: encoding ISO-8859-15Encoding
/ISO-8859-15Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /Euro /yen /Scaron /section 
/scaron /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /Zcaron /mu /paragraph /bullet 
/zcaron /onesuperior /ordmasculine /guillemotright /OE /oe /Ydieresis /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
%%BeginResource: font Courier-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Bold-Ogonki
/Courier-Bold /Courier-Bold-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -50 123 27] put
dup /Aring [65 -10 123 31] put
dup /Atilde [65 -30 123 29] put
dup /Ecircumflex [69 0 123 28] put
dup /Egrave [69 0 123 27] put
dup /Gcaron [71 10 123 183] put
dup /Idieresis [73 0 123 168] put
dup /Igrave [73 0 123 27] put
dup /Ntilde [78 0 123 29] put
dup /Ograve [79 0 123 27] put
dup /Otilde [79 0 123 29] put
dup /Ucircumflex [85 0 123 28] put
dup /Ugrave [85 -30 123 27] put
dup /Ydieresis [89 0 123 168] put
dup /agrave [97 -30 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -40 0 183] put
dup /idieresis [136 -40 0 168] put
dup /igrave [136 0 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -20 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 130 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 130 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 0 130 180] put
dup /ccaron [99 18 0 183] put
dup /Ccaron [67 18 130 183] put
dup /ccircumflex [99 18 0 28] put
dup /Ccircumflex [67 18 130 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 0 130 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 0 130 183] put
dup /dcaron [100 30 195 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 0 130 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 0 130 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 0 130 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 18 130 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 18 130 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 18 130 255] put
dup /hcircumflex [104 -20 195 28] put
dup /Hcircumflex [72 0 130 28] put
dup /Iogonek [73 20 0 178] put
dup /iogonek [105 20 0 178] put
dup /Idotaccent [73 0 130 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 0 130 30] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 0 130 29] put
dup /Jcircumflex [74 85 130 28] put
dup /Lacute [76 -100 130 180] put
dup /lacute [108 -20 195 180] put
dup /Lcaron [76 -100 130 183] put
dup /lcaron [108 0 195 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 0 130 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 0 130 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 0 130 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 0 130 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 0 130 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 0 130 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 0 130 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 0 130 28] put
dup /tcaron [116 0 107 183] put
dup /Tcaron [84 0 130 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 0 130 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 0 130 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 0 130 30] put
dup /uogonek [117 109 0 178] put
dup /Uogonek [85 5 23 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 0 130 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 0 130 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 0 130 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 0 130 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-BoldOblique-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-BoldOblique-Ogonki
/Courier-BoldOblique /Courier-BoldOblique-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -24 123 27] put
dup /Aring [65 16 123 31] put
dup /Atilde [65 -4 123 29] put
dup /Ecircumflex [69 26 123 28] put
dup /Egrave [69 26 123 27] put
dup /Gcaron [71 36 123 183] put
dup /Idieresis [73 26 123 168] put
dup /Igrave [73 26 123 27] put
dup /Ntilde [78 26 123 29] put
dup /Ograve [79 26 123 27] put
dup /Otilde [79 26 123 29] put
dup /Ucircumflex [85 26 123 28] put
dup /Ugrave [85 -4 123 27] put
dup /Ydieresis [89 26 123 168] put
dup /agrave [97 -30 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -40 0 183] put
dup /idieresis [136 -40 0 168] put
dup /igrave [136 0 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -20 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 10 0 168] put
dup /Abreve [65 -18 130 162] put
dup /abreve [97 0 0 162] put
dup /Amacron [65 -15 130 30] put
dup /amacron [97 0 0 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 30 130 180] put
dup /ccaron [99 0 0 183] put
dup /Ccaron [67 30 130 183] put
dup /ccircumflex [99 0 0 28] put
dup /Ccircumflex [67 30 130 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 30 130 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 -12 130 183] put
dup /dcaron [100 35 178 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 30 130 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 30 130 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 30 130 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 30 130 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 30 130 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 30 130 255] put
dup /hcircumflex [104 0 178 28] put
dup /Hcircumflex [72 30 130 28] put
dup /Idotaccent [73 30 130 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 30 130 30] put
dup /Iogonek [73 20 0 178] put
dup /iogonek [105 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 30 130 29] put
dup /Jcircumflex [74 95 130 28] put
dup /Lacute [76 -88 130 180] put
dup /lacute [108 0 178 180] put
dup /Lcaron [76 -88 130 183] put
dup /lcaron [108 0 178 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 30 130 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 30 130 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 30 130 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 30 130 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 30 130 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 30 130 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 30 130 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 30 130 28] put
dup /tcaron [116 -59 106 183] put
dup /Tcaron [84 30 130 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 30 130 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 30 130 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 30 130 30] put
dup /Uogonek [85 0 7 178] put
dup /uogonek [117 108 0 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 30 130 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 30 130 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 30 130 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 30 130 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-Oblique-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Oblique-Ogonki
/Courier-Oblique /Courier-Oblique-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -4 121 27] put
dup /Aring [65 12 126 31] put
dup /Atilde [65 27 126 29] put
dup /Ecircumflex [69 26 121 28] put
dup /Egrave [69 26 121 27] put
dup /Gcaron [71 29 136 183] put
dup /Idieresis [73 29 136 168] put
dup /Igrave [73 26 121 27] put
dup /Ntilde [78 27 126 29] put
dup /Ograve [79 26 121 27] put
dup /Otilde [79 27 126 29] put
dup /Ucircumflex [85 26 121 28] put
dup /Ugrave [85 -4 121 27] put
dup /Ydieresis [89 29 136 168] put
dup /agrave [97 0 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -30 0 183] put
dup /idieresis [136 -30 0 168] put
dup /igrave [136 -30 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -10 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 -10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 133 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 133 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 0 0 180] put
dup /Cacute [67 53 133 180] put
dup /ccaron [99 0 0 183] put
dup /Ccaron [67 53 133 183] put
dup /ccircumflex [99 0 2 28] put
dup /Ccircumflex [67 53 133 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 53 133 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 20 182 183] put
dup /Dcaron [68 33 133 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 53 133 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 53 133 255] put
dup /emacron [101 0 0 30] put
dup /Emacron [69 53 133 30] put
dup /Eogonek [69 0 0 178] put
dup /eogonek [101 0 0 178] put
dup /gacute [103 -10 0 180] put
dup /gbreve [103 -10 0 162] put
dup /Gbreve [71 53 133 162] put
dup /gcircumflex [103 -10 0 28] put
dup /Gcircumflex [71 53 133 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 53 186 255] put
dup /hcircumflex [104 0 182 28] put
dup /Hcircumflex [72 30 133 28] put
dup /Idotaccent [73 30 133 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 30 133 30] put
dup /iogonek [105 20 0 178] put
dup /Iogonek [73 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 30 133 29] put
dup /Jcircumflex [74 98 133 28] put
dup /Lacute [76 -83 133 180] put
dup /lacute [108 0 182 180] put
dup /Lcaron [76 -83 133 183] put
dup /lcaron [108 0 182 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 53 133 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 53 133 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 53 133 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 53 133 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 53 133 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 40 133 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 53 133 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 53 133 28] put
dup /tcaron [116 -65 118 183] put
dup /Tcaron [84 40 133 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 53 133 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 53 133 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 53 133 30] put
dup /uogonek [117 120 0 178] put
dup /Uogonek [85 5 15 178] put
dup /uring [117 -30 0 31] put
dup /Uring [85 53 133 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 53 133 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 40 133 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 40 133 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Courier-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Courier-Ogonki
/Courier /Courier-Ogonki OgonkiEncoding StandardEncoding 111 dict
dup /Agrave [65 -30 121 27] put
dup /Aring [65 -15 126 31] put
dup /Atilde [65 0 126 29] put
dup /Ecircumflex [69 0 121 28] put
dup /Egrave [69 0 121 27] put
dup /Gcaron [71 0 136 183] put
dup /Idieresis [73 0 136 168] put
dup /Igrave [73 0 121 27] put
dup /Ntilde [78 0 126 29] put
dup /Ograve [79 0 121 27] put
dup /Otilde [79 0 126 29] put
dup /Ucircumflex [85 0 121 28] put
dup /Ugrave [85 -30 121 27] put
dup /Ydieresis [89 0 136 168] put
dup /agrave [97 0 0 27] put
dup /aring [97 0 0 31] put
dup /atilde [97 0 0 29] put
dup /ecircumflex [101 0 0 28] put
dup /egrave [101 0 0 27] put
dup /gcaron [103 -30 0 183] put
dup /idieresis [136 -30 0 168] put
dup /igrave [136 -30 0 27] put
dup /ntilde [110 0 0 29] put
dup /ograve [111 0 0 27] put
dup /otilde [111 0 0 29] put
dup /ucircumflex [117 -10 0 28] put
dup /ugrave [117 -30 0 27] put
dup /ydieresis [121 -10 0 168] put
dup /abreve [97 0 0 162] put
dup /Abreve [65 0 133 162] put
dup /amacron [97 0 0 30] put
dup /Amacron [65 0 133 30] put
dup /Aogonek [65 200 0 178] put
dup /aogonek [97 200 0 178] put
dup /cacute [99 17 0 180] put
dup /Cacute [67 30 133 180] put
dup /ccaron [99 17 0 183] put
dup /Ccaron [67 30 133 183] put
dup /ccircumflex [99 17 2 28] put
dup /Ccircumflex [67 30 133 28] put
dup /cdotaccent [99 0 0 255] put
dup /Cdotaccent [67 30 133 255] put
dup /dbar [100 200 250 173] put
dup /Dbar [208 0 0 160] put
dup /Dcaron [68 0 133 183] put
dup /dcaron [100 17 156 183] put
dup /ecaron [101 0 0 183] put
dup /Ecaron [69 0 133 183] put
dup /edotaccent [101 0 0 255] put
dup /Edotaccent [69 0 133 255] put
dup /Emacron [69 0 133 30] put
dup /emacron [101 17 0 30] put
dup /Eogonek [69 100 0 178] put
dup /eogonek [101 100 0 178] put
dup /gacute [103 0 0 180] put
dup /gbreve [103 0 0 162] put
dup /Gbreve [71 30 133 162] put
dup /gcircumflex [103 0 0 28] put
dup /Gcircumflex [71 30 133 28] put
dup /gdotaccent [103 0 0 255] put
dup /Gdotaccent [71 0 133 255] put
dup /Hcircumflex [72 0 133 28] put
dup /hcircumflex [104 0 164 28] put
dup /Idotaccent [73 0 133 255] put
dup /imacron [136 0 0 30] put
dup /Imacron [73 0 133 30] put
dup /iogonek [105 20 0 178] put
dup /Iogonek [73 20 0 178] put
dup /itilde [136 0 0 29] put
dup /Itilde [73 0 133 29] put
dup /Jcircumflex [74 100 133 28] put
dup /Lacute [76 -100 133 180] put
dup /lacute [108 -12 147 180] put
dup /Lcaron [76 -100 133 183] put
dup /lcaron [108 -12 144 183] put
dup /nacute [110 0 0 180] put
dup /Nacute [78 0 133 180] put
dup /ncaron [110 0 0 183] put
dup /Ncaron [78 0 133 183] put
dup /ohungarumlaut [111 0 0 189] put
dup /Ohungarumlaut [79 0 133 189] put
dup /omacron [111 0 0 30] put
dup /Omacron [79 0 133 30] put
dup /racute [114 0 0 180] put
dup /Racute [82 0 133 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 0 133 183] put
dup /sacute [115 0 0 180] put
dup /Sacute [83 0 133 180] put
dup /scircumflex [115 0 0 28] put
dup /Scircumflex [83 0 133 28] put
dup /tcaron [116 -77 92 183] put
dup /Tcaron [84 0 133 183] put
dup /Tcedilla [84 0 0 184] put
dup /tcedilla [116 0 0 184] put
dup /ubreve [117 0 0 162] put
dup /Ubreve [85 0 133 162] put
dup /uhungarumlaut [117 0 0 189] put
dup /Uhungarumlaut [85 0 133 189] put
dup /umacron [117 0 0 30] put
dup /Umacron [85 0 133 30] put
dup /uogonek [117 120 0 178] put
dup /Uogonek [85 5 20 178] put
dup /uring [117 0 0 31] put
dup /Uring [85 0 133 31] put
dup /utilde [117 0 0 29] put
dup /Utilde [85 0 133 29] put
dup /zacute [122 0 0 180] put
dup /Zacute [90 0 133 180] put
dup /zdotaccent [122 0 0 255] put
dup /Zdotaccent [90 0 133 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Helvetica-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Helvetica-Bold-Ogonki
/Helvetica-Bold /Helvetica-Bold-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 167 191 168] put
dup /ydieresis [121 111 0 168] put
dup /Ucircumflex [85 197 191 28] put
dup /Ugrave [85 197 191 27] put
dup /ucircumflex [117 139 0 28] put
dup /ugrave [117 139 0 27] put
dup /Idieresis [73 -27 191 168] put
dup /Igrave [73 -27 191 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /Ecircumflex [69 188 191 28] put
dup /Egrave [69 188 191 27] put
dup /ecircumflex [101 111 0 28] put
dup /egrave [101 111 0 27] put
dup /Agrave [65 197 191 27] put
dup /agrave [97 111 0 27] put
dup /Ograve [79 222 191 27] put
dup /ograve [111 139 0 27] put
dup /Atilde [65 197 191 29] put
dup /atilde [97 111 0 29] put
dup /Ntilde [78 200 191 29] put
dup /ntilde [110 146 0 29] put
dup /Otilde [79 222 191 29] put
dup /otilde [111 139 0 29] put
dup /Aring [65 197 191 31] put
dup /aring [97 111 0 31] put
dup /abreve [97 111 0 162] put
dup /Abreve [65 194 202 162] put
dup /aogonek [97 270 0 178] put
dup /Aogonek [65 444 0 178] put
dup /cacute [99 111 0 180] put
dup /Cacute [67 194 193 180] put
dup /ccaron [99 122 0 183] put
dup /Ccaron [67 210 191 183] put
dup /dbar [100 302 298 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 493 73 39] put
dup /Dcaron [68 194 190 183] put
dup /ecaron [101 111 0 183] put
dup /Ecaron [69 167 190 183] put
dup /edotaccent [101 103 0 255] put
dup /Edotaccent [69 188 191 255] put
dup /eogonek [101 150 0 178] put
dup /Eogonek [69 290 0 178] put
dup /gbreve [103 139 0 162] put
dup /Gbreve [71 222 191 162] put
dup /Idotaccent [73 -27 191 255] put
dup /iogonek [105 -39 0 178] put
dup /Iogonek [73 -30 0 178] put
dup /lacute [108 -7 193 180] put
dup /Lacute [76 139 193 180] put
dup /lcaron [108 155 73 39] put
dup /Lcaron [76 161 73 39] put
dup /nacute [110 159 0 180] put
dup /Nacute [78 231 193 180] put
dup /ncaron [110 111 0 183] put
dup /Ncaron [78 194 215 183] put
dup /ohungarumlaut [111 139 0 189] put
dup /Ohungarumlaut [79 222 191 189] put
dup /racute [114 48 0 180] put
dup /Racute [82 231 193 180] put
dup /rcaron [114 28 0 183] put
dup /Rcaron [82 194 190 183] put
dup /sacute [115 111 0 180] put
dup /Sacute [83 167 193 180] put
dup /scedilla [115 111 0 184] put
dup /Scedilla [83 167 0 184] put
dup /tcaron [116 249 0 39] put
dup /Tcaron [84 139 190 183] put
dup /tcedilla [116 86 0 184] put
dup /Tcedilla [84 197 0 184] put
dup /uhungarumlaut [117 139 0 189] put
dup /Uhungarumlaut [85 197 191 189] put
dup /uring [117 139 0 31] put
dup /Uring [85 194 190 31] put
dup /umacron [117 139 0 30] put
dup /Umacron [85 199 191 30] put
dup /uogonek [117 286 0 178] put
dup /Uogonek [85 260 0 178] put
dup /zacute [122 103 0 180] put
dup /Zacute [90 139 193 180] put
dup /zdotaccent [122 83 0 255] put
dup /Zdotaccent [90 139 206 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Helvetica-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Helvetica-Ogonki
/Helvetica /Helvetica-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 167 199 168] put
dup /ydieresis [121 83 0 168] put
dup /Ucircumflex [85 194 199 28] put
dup /Ugrave [85 194 199 27] put
dup /ucircumflex [117 111 0 28] put
dup /ugrave [117 111 0 27] put
dup /Idieresis [73 -21 199 168] put
dup /Igrave [73 -21 199 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /Ecircumflex [69 188 199 28] put
dup /Egrave [69 188 199 27] put
dup /ecircumflex [101 117 0 28] put
dup /egrave [101 117 0 27] put
dup /Agrave [65 167 199 27] put
dup /agrave [97 111 0 27] put
dup /Ograve [79 222 199 27] put
dup /ograve [111 111 0 27] put
dup /Atilde [65 167 199 29] put
dup /atilde [97 111 0 29] put
dup /Ntilde [78 200 199 29] put
dup /ntilde [110 117 0 29] put
dup /Otilde [79 222 199 29] put
dup /otilde [111 111 0 29] put
dup /Aring [65 167 199 31] put
dup /aring [97 111 0 31] put
dup /abreve [97 96 0 162] put
dup /Abreve [65 174 195 162] put
dup /aogonek [97 270 0 178] put
dup /Aogonek [65 424 0 178] put
dup /cacute [99 84 0 180] put
dup /Cacute [67 196 195 180] put
dup /ccaron [99 84 0 183] put
dup /Ccaron [67 196 195 183] put
dup /dbar [100 270 330 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 523 0 39] put
dup /Dcaron [68 102 195 183] put
dup /ecaron [101 93 0 183] put
dup /Ecaron [69 102 195 183] put
dup /edotaccent [101 111 0 255] put
dup /Edotaccent [69 188 199 255] put
dup /eogonek [101 150 0 178] put
dup /Eogonek [69 290 0 178] put
dup /gbreve [103 111 0 162] put
dup /Gbreve [71 222 199 162] put
dup /Idotaccent [73 -21 199 255] put
dup /iogonek [105 -75 0 178] put
dup /Iogonek [73 -30 0 178] put
dup /lacute [108 -27 195 180] put
dup /Lacute [76 -27 195 180] put
dup /lcaron [108 169 0 39] put
dup /Lcaron [76 276 0 39] put
dup /nacute [110 160 0 180] put
dup /Nacute [78 220 195 180] put
dup /ncaron [110 70 0 183] put
dup /Ncaron [78 160 195 183] put
dup /ohungarumlaut [111 112 0 189] put
dup /Ohungarumlaut [79 223 195 189] put
dup /racute [114 25 0 180] put
dup /Racute [82 200 195 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 100 195 183] put
dup /sacute [115 84 0 180] put
dup /Sacute [83 167 195 180] put
dup /scedilla [115 83 0 184] put
dup /Scedilla [83 167 0 184] put
dup /tcaron [116 291 0 39] put
dup /Tcaron [84 165 195 183] put
dup /tcedilla [116 84 0 184] put
dup /Tcedilla [84 185 0 184] put
dup /uhungarumlaut [117 112 0 189] put
dup /Uhungarumlaut [85 195 195 189] put
dup /umacron [117 111 0 30] put
dup /Umacron [85 194 199 30] put
dup /uogonek [117 255 0 178] put
dup /Uogonek [85 288 5 178] put
dup /uring [117 112 0 31] put
dup /Uring [85 195 195 31] put
dup /zacute [122 84 0 180] put
dup /Zacute [90 139 195 180] put
dup /zdotaccent [122 84 0 255] put
dup /Zdotaccent [90 139 195 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Times-Bold-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Times-Bold-Ogonki
/Times-Bold /Times-Bold-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Ydieresis [89 194 219 168] put
dup /ydieresis [121 83 0 168] put
dup /Ucircumflex [85 221 219 28] put
dup /Ugrave [85 221 219 27] put
dup /ucircumflex [117 104 0 28] put
dup /ugrave [117 104 0 27] put
dup /Idieresis [73 28 219 168] put
dup /Igrave [73 28 219 27] put
dup /idieresis [136 -34 0 168] put
dup /igrave [136 -34 0 27] put
dup /Ecircumflex [69 174 219 28] put
dup /Egrave [69 174 219 27] put
dup /ecircumflex [101 61 0 28] put
dup /egrave [101 61 0 27] put
dup /Agrave [65 187 219 27] put
dup /agrave [97 76 0 27] put
dup /Ograve [79 222 219 27] put
dup /ograve [111 83 0 27] put
dup /Atilde [65 187 219 29] put
dup /atilde [97 76 0 29] put
dup /Ntilde [78 194 219 29] put
dup /ntilde [110 111 0 29] put
dup /Otilde [79 222 219 29] put
dup /otilde [111 83 0 29] put
dup /Aring [65 187 219 31] put
dup /aring [97 76 0 31] put
dup /abreve [97 83 0 162] put
dup /Abreve [65 194 240 162] put
dup /aogonek [97 175 -30 178] put
dup /Aogonek [65 384 -30 178] put
dup /cacute [99 70 0 180] put
dup /Cacute [67 210 219 180] put
dup /ccaron [99 84 0 183] put
dup /Ccaron [67 232 219 183] put
dup /dbar [100 240 300 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 473 53 39] put
dup /Dcaron [68 194 210 183] put
dup /ecaron [101 61 0 183] put
dup /Ecaron [69 174 219 183] put
dup /edotaccent [101 61 0 255] put
dup /Edotaccent [69 187 219 255] put
dup /eogonek [101 114 -30 178] put
dup /Eogonek [69 295 -30 178] put
dup /gbreve [103 83 0 162] put
dup /Gbreve [71 222 219 162] put
dup /Idotaccent [73 28 219 255] put
dup /iogonek [105 -50 -30 178] put
dup /Iogonek [73 63 -30 178] put
dup /lacute [108 -3 210 180] put
dup /Lacute [76 167 210 180] put
dup /lcaron [108 194 53 39] put
dup /Lcaron [76 309 53 39] put
dup /nacute [110 90 0 180] put
dup /Nacute [78 190 219 180] put
dup /ncaron [110 111 0 183] put
dup /Ncaron [78 194 210 183] put
dup /ohungarumlaut [111 83 0 189] put
dup /Ohungarumlaut [79 222 219 189] put
dup /racute [114 79 0 180] put
dup /Racute [82 239 210 180] put
dup /rcaron [114 55 0 183] put
dup /Rcaron [82 194 210 183] put
dup /sacute [115 20 0 180] put
dup /Sacute [83 100 219 180] put
dup /scedilla [115 12 0 184] put
dup /Scedilla [83 94 0 184] put
dup /tcaron [116 271 0 39] put
dup /Tcaron [84 167 210 183] put
dup /tcedilla [116 89 0 184] put
dup /Tcedilla [84 227 0 184] put
dup /umacron [117 104 0 30] put
dup /Umacron [85 215 219 30] put
dup /uhungarumlaut [117 104 0 189] put
dup /Uhungarumlaut [85 221 219 189] put
dup /uogonek [117 236 -25 178] put
dup /Uogonek [85 299 -25 178] put
dup /uring [117 111 0 31] put
dup /Uring [85 194 174 31] put
dup /zacute [122 80 0 180] put
dup /Zacute [90 160 219 180] put
dup /zdotaccent [122 70 0 255] put
dup /Zdotaccent [90 200 219 255] put
makeComposite
%%EndResource

%%EndResource
%%BeginResource: font Times-Roman-Ogonki
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding OgonkiEncoding
/OgonkiEncoding [
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /quotesingle
/quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl /endash /dagger
/daggerdbl /periodcentered /paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright
/ellipsis /perthousand /questiondown /grave /circumflex /tilde /macron /ring
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /emdash /AE /ordfeminine /Oslash /OE /ordmasculine /ae
/dotlessi /oslash /oe /threesuperior /thorn /twosuperior /threequarters /Eth
/trademark /registered /onequarter /Thorn /logicalnot /plusminus /minus /onesuperior
/copyright /mu /eth /brokenbar /onehalf /dotlessj /Euro /.notdef
/space /Aogonek /breve /Lslash /currency /Lcaron /Sacute /section
/dieresis /Scaron /Scedilla /Tcaron /Zacute /hyphen /Zcaron /Zdotaccent
/degree /aogonek /ogonek /lslash /acute /lcaron /sacute /caron
/cedilla /scaron /scedilla /tcaron /zacute /hungarumlaut /zcaron /zdotaccent
% 300
/Racute /Aacute /Acircumflex /Abreve /Adieresis /Lacute /Cacute /Ccedilla
/Ccaron /Eacute /Eogonek /Edieresis /Ecaron /Iacute /Icircumflex /Dcaron
/Eth /Nacute /Ncaron /Oacute /Ocircumflex /Ohungarumlaut /Odieresis /multiply
/Rcaron /Uring /Uacute /Uhungarumlaut /Udieresis /Yacute /Tcedilla /germandbls
/racute /aacute /acircumflex /abreve /adieresis /lacute /cacute /ccedilla
/ccaron /eacute /eogonek /edieresis /ecaron /iacute /icircumflex /dcaron
/dbar /nacute /ncaron /oacute /ocircumflex /ohungarumlaut /odieresis /divide
/rcaron /uring /uacute /uhungarumlaut /udieresis /yacute /tcedilla /dotaccent
] def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: encoding StandardEncoding
/StandardEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
% 100
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
% 200
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /exclamdown /cent /sterling /fraction /yen /florin /section
/currency /quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright /fi /fl
/.notdef /endash /dagger /daggerdbl /periodcentered /.notdef /paragraph /bullet
/quotesinglbase /quotedblbase /quotedblright /guillemotright /ellipsis /perthousand /.notdef /questiondown
% 300
/.notdef /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/emdash /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /AE /.notdef /ordfeminine /.notdef /.notdef /.notdef /.notdef
/Lslash /Oslash /OE /ordmasculine /.notdef /.notdef /.notdef /.notdef
/.notdef /ae /.notdef /.notdef /.notdef /dotlessi /.notdef /.notdef
/lslash /oslash /oe /germandbls /.notdef /.notdef /.notdef /.notdef
] def
%%EndResource
%!
% Add composite (i.e. accented) characters to any font
% By J. Chroboczek <jec@dcs.ed.ac.uk>
%
% -- code follows this line --
%%BeginResource: procset compose 0.8 1
% Copyright (c) 1996-1999 by J. Chroboczek
% This code may be distributed under the terms of the 
% GNU Public License, either version 2 of the license, or (at your
% option) any later version.
/makeCompositeDict 20 dict def
makeCompositeDict begin
/nameUnique {                           % name nameUnique namexxxxxx
  dup length exch 1 index string cvs    % length (name)
  1 index 12 add string dup             % length (name) (...) (...)
  3 2 roll 0 exch putinterval           % length (name...)
  dup 3 2 roll
  rand 12 string cvs
  putinterval
} bind def

/doMakeComposite
{
  /compositeChars exch def
  /targetEncoding exch def
  /baseEncoding exch def
  /newfontname exch def
  /oldfontname exch def
  /oldfont oldfontname findfont def
  /newfont 20 dict def
  /oldFontMatrix oldfont /FontMatrix get def
  /oldFontBBox oldfont /FontBBox get cvlit def
  /oldfontcopy oldfont length dict def

  newfont begin
    /FontType 3 def
    /PaintType 0 def      % not used
    /FontMatrix [0.001 0 0 0.001 0 0] def
    /FontBBox
    [
      oldFontBBox 0 get oldFontBBox 1 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
      oldFontBBox 2 get oldFontBBox 3 get
      oldFontMatrix transform
      [1000 0 0 1000 0 0] transform
    ] cvx def

    /StrokeWidth 0 def                  % not used

    /Encoding targetEncoding def

    /Decoding 256 dict def              % invert base encoding vector
    Decoding begin
      0 1 255
      { dup baseEncoding exch get exch def } bind for
    end

    newfont /compositeChars compositeChars put

    /FontName newfontname def

% make a copy of the original font, reencoding it
    oldfont
    oldfontcopy begin
      {1 index /FID ne
        {def}
        {pop pop} ifelse
      } bind forall
    end
    oldfontcopy /Encoding baseEncoding put
    oldfontname nameUnique oldfontcopy definefont
    1000 scalefont /OriginalFont exch def

    /BuildChar                          % newfont n BuildChar -
    {
      exch begin                        % n
        /OriginalFont load setfont
        /Encoding load exch get         % glyphName
        /compositeChars load dup
        2 index known                   % glyphName compositeChars known-p
        { 1 index get                   % glyphName [ 65 x y 129 ]
          dup 0 get ( ) dup             % glyphName [...] 65 ( ) ( )
          0 3 index put                 % glyphName [...] 65 (A)
          dup stringwidth setcharwidth
          0 0 moveto
          show pop                      % glyphName [...]
          dup 1 get 1 index 2 get       % glyphName [...] x y
          moveto                        % glyphName [...]
          3 get ( ) dup 3 2 roll        % glyphName ( ) ( ) 129
          0 exch put                    % glyphName (')
          show                          % glyphName
        }
        { pop
          /Decoding load                % glyphName Decoding
          dup 2 index known             % glyphName Decoding known-p
          { exch get }
          { pop pop 0 } ifelse          % n'
          ( ) dup 0 3 index put dup     % n' (A) (A)
          stringwidth setcharwidth
          0 0 moveto
          show                          % n'
        } ifelse
        pop
      end
    } bind def
  end                                   % newfont
  newfontname newfont definefont pop
} def                                   % doMakeComposite

/fillEuro {                             % w h --
  gsave exch 1000 div exch 1000 div scale
  955.852 232.172 moveto
  904.495 180.815 lineto
  829.454 117.848 734.626 83.333 636.667 83.333 curveto
  406.667 83.333 220 270 220 500 curveto
  220 730 406.667 916.667 636.667 916.667 curveto
  759.831 916.667 876.684 862.177 955.852 767.828 curveto
  988.474 855.291 lineto
  894.851 947.996 768.422 1000 636.667 1000 curveto
  360.667 1000 136.667 776 136.667 500 curveto
  136.667 224 360.667 0 636.667 0 curveto
  753.23 0 866.13 40.725 955.852 115.135 curveto
  closepath fill
  
  869.037 541.667 moveto
  901.025 625 lineto
  31.989 625 lineto
  0 541.667 lineto
  closepath fill
  
  805.059 375 moveto
  837.048 458.333 lineto
  31.989 458.333 lineto
  0 375 lineto
  closepath fill
  grestore
} bind def

/makeEuroCharstring {                   % w h -- charstring
  [ /pop cvx                            % w h mark pop
    3 index 0 0 0                       % w h mark pop w 0 0 0
    7 index 7 index /setcachedevice cvx 
                                % w h mark pop w 0 0 0 w h setcachedevice
    10 index 10 index /fillEuro load /exec cvx ] 
  cvx bind 3 1 roll pop pop
} def

/doEurifyFont {                         % oldname newname --
  exch
  findfont dup dup                      % newname dict dict dict
  /FontMatrix get matrix invertmatrix   % newname dict dict m
  {} forall pop pop [ 5 1 roll 0 0] makefont setfont   % newnamedict
  0 0 moveto
  (5) stringwidth pop                     % newname dict w
  (M) false charpath pathbbox newpath 4 1 roll pop pop pop 
                                          % newnamedict w h
  3 2 roll                                % newname w h dict
  
  dup length dict dup 3 1 roll begin      % newname w h newdict
    {1 index /FID ne {def} {pop pop} ifelse} forall
    CharStrings dup length 1 add dict dup 3 1 roll begin % newnamew h newdict newdict'
      {def} forall
      /Euro                               % newname w h newdict newdict' /Euro
      4 index 4 index makeEuroCharstring def
    end                                   % newname w h newdict newdict'
    /CharStrings exch def
  end
  3 1 roll pop pop                      % newname dict
  definefont pop
} bind def

end                                     % makeCompositeDict

% oldfontname newfontname baseEncoding targetEncoding compositeChars --
/makeComposite
{
  makeCompositeDict begin doMakeComposite end
} bind def

% oldfontname newfontname
/eurifyFont
{
  makeCompositeDict begin doEurifyFont end
} bind def
%%EndResource
%!
% Automatically generated by the Ogonkify package
% Do not modify
% -- code follows this line --
%%BeginResource: font Times-Roman-Ogonki
/Times-Roman /Times-Roman-Ogonki OgonkiEncoding StandardEncoding 83 dict
dup /Agrave [65 195 212 27] put
dup /Aring [65 185 187 31] put
dup /Atilde [65 195 212 29] put
dup /Ecircumflex [69 139 212 28] put
dup /Egrave [69 139 212 27] put
dup /Idieresis [73 0 212 168] put
dup /Igrave [73 0 212 27] put
dup /Ntilde [78 195 212 29] put
dup /Ograve [79 195 212 27] put
dup /Otilde [79 195 212 29] put
dup /Ucircumflex [85 195 212 28] put
dup /Ugrave [85 195 212 27] put
dup /Ydieresis [89 195 212 168] put
dup /agrave [97 56 0 27] put
dup /aring [97 56 0 31] put
dup /atilde [97 56 0 29] put
dup /ecircumflex [101 56 0 28] put
dup /egrave [101 56 0 27] put
dup /idieresis [136 -27 0 168] put
dup /igrave [136 -27 0 27] put
dup /ntilde [110 84 0 29] put
dup /ograve [111 84 0 27] put
dup /otilde [111 84 0 29] put
dup /ucircumflex [117 84 0 28] put
dup /ugrave [117 84 0 27] put
dup /ydieresis [121 84 0 168] put
dup /abreve [97 55 0 162] put
dup /Abreve [65 194 223 162] put
dup /aogonek [97 209 0 178] put
dup /Aogonek [65 465 0 178] put
dup /cacute [99 70 0 180] put
dup /Cacute [67 212 212 180] put
dup /ccaron [99 69 0 183] put
dup /Ccaron [67 196 212 183] put
dup /dbar [100 200 300 173] put
dup /Dbar [208 0 0 160] put
dup /dcaron [100 426 75 39] put
dup /Dcaron [68 194 216 183] put
dup /ecaron [101 55 0 183] put
dup /Ecaron [69 139 214 183] put
dup /edotaccent [101 61 0 255] put
dup /Edotaccent [69 154 212 255] put
dup /eogonek [101 142 9 178] put
dup /Eogonek [69 320 0 178] put
dup /gbreve [103 84 0 162] put
dup /Gbreve [71 195 212 162] put
dup /Idotaccent [73 0 212 255] put
dup /iogonek [105 12 0 178] put
dup /Iogonek [73 67 0 178] put
dup /lacute [108 -5 216 180] put
dup /Lacute [76 139 216 180] put
dup /lcaron [108 192 75 39] put
dup /Lcaron [76 250 52 39] put
dup /nacute [110 90 0 180] put
dup /Nacute [78 190 212 180] put
dup /ncaron [110 83 0 183] put
dup /Ncaron [78 194 214 183] put
dup /ohungarumlaut [111 83 0 189] put
dup /Ohungarumlaut [79 194 214 189] put
dup /racute [114 22 0 180] put
dup /Racute [82 210 216 180] put
dup /rcaron [114 0 0 183] put
dup /Rcaron [82 167 216 183] put
dup /sacute [115 20 0 180] put
dup /Sacute [83 100 212 180] put
dup /scedilla [115 28 0 184] put
dup /Scedilla [83 112 0 184] put
dup /tcedilla [116 53 0 184] put
dup /Tcedilla [84 197 0 184] put
dup /tcaron [116 214 0 39] put
dup /Tcaron [84 139 216 183] put
dup /uhungarumlaut [117 83 0 189] put
dup /Uhungarumlaut [85 194 214 189] put
dup /umacron [117 81 0 30] put
dup /Umacron [85 205 212 30] put
dup /uogonek [117 236 5 178] put
dup /Uogonek [85 287 5 178] put
dup /uring [117 83 0 31] put
dup /Uring [85 194 179 31] put
dup /zacute [122 60 0 180] put
dup /Zacute [90 120 212 180] put
dup /zdotaccent [122 50 0 255] put
dup /Zdotaccent [90 140 212 255] put
makeComposite
%%EndResource

%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-15 support
/iso15dict 8 dict begin
  /fCourier ISO-8859-15Encoding /Courier-Ogonki reencode_font
  /fCourier-Bold ISO-8859-15Encoding /Courier-Bold-Ogonki reencode_font
  /fCourier-BoldOblique ISO-8859-15Encoding /Courier-BoldOblique-Ogonki reencode_font
  /fCourier-Oblique ISO-8859-15Encoding /Courier-Oblique-Ogonki reencode_font
  /fHelvetica ISO-8859-15Encoding /Helvetica-Ogonki reencode_font
  /fHelvetica-Bold ISO-8859-15Encoding /Helvetica-Bold-Ogonki reencode_font
  /fTimes-Bold ISO-8859-15Encoding /Times-Bold-Ogonki reencode_font
  /fTimes-Roman ISO-8859-15Encoding /Times-Roman-Ogonki reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (7-8) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso15dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
( NAME   : SRC_RICKER [time functions]) N
( PURPOSE: The Ricker wavelet is the second derivative of a gaussian.) N
( SYNTAX : &SRC_RICKER ampli, f0, onset /) N
() N
(  ampli    [real] [1.] Signed amplitude of the central peak) N
(  f0       [real >0] [0] Fundamental frequency \(Hz\).) N
(                 distribution: it has a peak at f0 and an exponential) N
(                 decay at high frequency. The cut-off high frequency is usually) N
(                 taken as fmax = 2.5 x f0. ) N
(  onset    [real >1/f0] [0] Delay time \(secs\) with respect to the peak value. ) N
() N
( NOTE   : The spectrum has a peak at f0 and decays exponentially at high ) N
(          frequencies. Beyond 2.5*f0 there is little energy, this is a ) N
(          recommended value for fmax.) N
( NOTE   : onset>1/f0 is needed to avoid a strong jump at t=0, which can cause) N
(          numerical oscillations. Ignore if using incident waves.) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : SRC_FORCE [source mechanism]) N
( PURPOSE: Point force source) N
( SYNTAX : &SRC_FORCE angle /) N
() N
(  angle    [dble] [0d0]   The angle of the force applied, in degrees,) N
(                              counterclockwise with respect to Z-UP: 90 points) N
(                              left, 180 points down) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : SRC_DEF) N
( PURPOSE: Define the sources.) N
( SYNTAX : &SRC_DEF   TimeFunction,mechanism,coord,relocate_to /) N
(          Immediately followed by SRC_TIMEFUNCTION then SRC_MECHANISM blocks) N
() N
(  TimeFunction    [name] [none]   The name of the source time function:) N
(                        'RICKER' or 'BUTTERWORTH') N
(  mechanism        [name] [none]   The name of the source mechanism:) N
(                        'EXPLOSION','WAVE' or 'FORCE') N
(  coord            [dble] [huge]   Location of the source \(m\). ) N
(  relocate_to      [int] [0]       The coordinates can be relocated \(projected\)) N
(                        to a boundary if you give here one of the "tags" read in) N
(                        the DEF_BC input blocks. Usually 1 for the free surface.) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : SRC_WAVE [source mechanism]) N
( PURPOSE: Incident plane wave) N
( SYNTAX : &SRC_WAVE angle /) N
() N
(  angle    [dble] [90d0]   Incidence angle, in degrees, counterclockwise with ) N
(                               respect to X+ : 45 comes from bottom left, ) N
(                               135 comes from bottom right) N
(  phase    [char] ['S']    Phase: 'S' or 'P') N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : TIME) N
( PURPOSE: Defines time integration scheme) N
( SYNTAX : &TIME NbSteps, Dt, Courant, TotalTime /) N
() N
(  NbSteps  [int] [none] Number of timesteps to be performed) N
(  Dt       [dble] [none] Amplitude of the timestep) N
(  Courant  [dble] [0.5d0] Courant stability number: the maximum ratio) N
(               Dt*wave_velocity/dx where dx is the inter-GLL node distance) N
(               Tipically <= 0.5) N
(  TotalTime[int] [none] Total duration \(in seconds\) of simulation) N
() N
( NOTE   :      Not all combinations of parameters need to be set at once.) N
(doc.txt) (Page 7/8) (Feb 07, 05 17:17) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(               You can set the total duration \(secs\) or the number of steps.) p n
(               You can set the timestep or the Courant number \(or use default\).) N
() N
( ----------------------------------------------------------------------------) N
() N
( NAME   : TIME_NEWMARK) N
( PURPOSE: Parameters of the explicit Newmark-alpha time scheme) N
( SYNTAX : &TIME_NEWMARK alpha|gamma, beta|rho /) N
() N
(  alpha    [dble] [0.5d0]) N
(  beta     [dble] [0.5d0] ) N
(  gamma    [dble] [1.d0] ) N
(  rho      [dble] [1.d0] high frequencies are damped by a factor>=rho. ) N
(               The default is non-dissipative. Dissipation is limited however ) N
(               to rho>=0.5 . For max dissipation you should work close to) N
(               the stability limit \(Courant around 0.6\)) N
() N
( NOTE: For second order schemes only two parameters need to be set:) N
(       \(alpha OR gamma\) AND \(beta OR rho\)) N
() N
(doc.txt) (Page 8/8) (Feb 07, 05 17:17) title
border
grestore
(Printed by Jean-Paul Ampuero) rhead
(doc.txt) (4/4) (Monday February 07, 2005) footer
end % of iso15dict
pagesave restore
showpage

%%Trailer
end
%%EOF

%%EndDocument
 @endspecial Black Black eop end
%%Page: 15 15
TeXDict begin 15 14 bop Black -106 -193 a Fn(2.4)35 b(V)-9
b(erifying)36 b(the)e(settings)h(and)g(running)h(a)e(sim)m(ulation)1502
b(15)p -106 -155 3945 4 v Black Black 190 2631 a @beginspecial
62 @llx 213 @lly 549 @urx 590 @ury 4023 @rwi @setspecial
%%BeginDocument: ../FIGURES/Stab_Reso_ex.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: /home/ampueroj/WAVES/SEM2DPACK_2.x/EXAMPLES/UsingEMC2/Stab_Reso_ex.eps
%%CreationDate: 02/07/2005  16:43:44
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    62   213   549   590
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    62   213   549   590
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  528   259  5847  4529 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 6917 5186 rf
6 w
0 1784 1472 0 0 -1784 4787 2172 4 MP
PP
-1472 0 0 1784 1472 0 0 -1784 4787 2172 5 MP stroke
4 w
DO
SO
6 w
0 sg
4787 2172 mt 6259 2172 L
4787  388 mt 6259  388 L
4787 2172 mt 4787  388 L
6259 2172 mt 6259  388 L
4787 2172 mt 6259 2172 L
4787 2172 mt 4787  388 L
4787 2172 mt 4787 2154 L
4787  389 mt 4787  406 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

4754 2317 mt 
(0) s
5277 2172 mt 5277 2154 L
5277  389 mt 5277  406 L
5211 2317 mt 
(20) s
5768 2172 mt 5768 2154 L
5768  389 mt 5768  406 L
5702 2317 mt 
(40) s
6259 2172 mt 6259 2154 L
6259  389 mt 6259  406 L
6193 2317 mt 
(60) s
4787 2172 mt 4804 2172 L
6259 2172 mt 6241 2172 L
4686 2216 mt 
(0) s
4787 1726 mt 4804 1726 L
6259 1726 mt 6241 1726 L
4619 1770 mt 
(50) s
4787 1280 mt 4804 1280 L
6259 1280 mt 6241 1280 L
4552 1324 mt 
(100) s
4787  834 mt 4804  834 L
6259  834 mt 6241  834 L
4552  878 mt 
(150) s
4787  389 mt 4804  389 L
6259  389 mt 6241  389 L
4552  433 mt 
(200) s
4787 2172 mt 6259 2172 L
4787  388 mt 6259  388 L
4787 2172 mt 4787  388 L
6259 2172 mt 6259  388 L
gs 4787 389 1473 1784 rc
/c8 { 0.000000 1.000000 1.000000 sr} bdef
c8
0 143 136 0 0 -143 4836 2172 4 MP
PP
0 sg
-136 0 0 143 136 0 0 -143 4836 2172 5 MP stroke
c8
0 206 136 0 0 -206 4972 2172 4 MP
PP
0 sg
-136 0 0 206 136 0 0 -206 4972 2172 5 MP stroke
c8
0 428 137 0 0 -428 5108 2172 4 MP
PP
0 sg
-137 0 0 428 137 0 0 -428 5108 2172 5 MP stroke
c8
0 286 136 0 0 -286 5245 2172 4 MP
PP
0 sg
-136 0 0 286 136 0 0 -286 5245 2172 5 MP stroke
c8
0 384 137 0 0 -384 5381 2172 4 MP
PP
0 sg
-137 0 0 384 137 0 0 -384 5381 2172 5 MP stroke
c8
0 411 136 0 0 -411 5518 2172 4 MP
PP
0 sg
-136 0 0 411 136 0 0 -411 5518 2172 5 MP stroke
c8
0 526 137 0 0 -526 5654 2172 4 MP
PP
0 sg
-137 0 0 526 137 0 0 -526 5654 2172 5 MP stroke
c8
0 928 136 0 0 -928 5791 2172 4 MP
PP
0 sg
-136 0 0 928 136 0 0 -928 5791 2172 5 MP stroke
c8
0 1668 136 0 0 -1668 5927 2172 4 MP
PP
0 sg
-136 0 0 1668 136 0 0 -1668 5927 2172 5 MP stroke
c8
0 197 137 0 0 -197 6063 2172 4 MP
PP
0 sg
-137 0 0 197 137 0 0 -197 6063 2172 5 MP stroke
gr

1 sg
0 1783 1472 0 0 -1783 4787 4615 4 MP
PP
-1472 0 0 1783 1472 0 0 -1783 4787 4615 5 MP stroke
4 w
DO
SO
6 w
0 sg
4787 4615 mt 6259 4615 L
4787 2832 mt 6259 2832 L
4787 4615 mt 4787 2832 L
6259 4615 mt 6259 2832 L
4787 4615 mt 6259 4615 L
4787 4615 mt 4787 2832 L
4787 4615 mt 4787 4597 L
4787 2832 mt 4787 2849 L
4754 4760 mt 
(0) s
5155 4615 mt 5155 4597 L
5155 2832 mt 5155 2849 L
5089 4760 mt 
(10) s
5523 4615 mt 5523 4597 L
5523 2832 mt 5523 2849 L
5457 4760 mt 
(20) s
5891 4615 mt 5891 4597 L
5891 2832 mt 5891 2849 L
5825 4760 mt 
(30) s
6259 4615 mt 6259 4597 L
6259 2832 mt 6259 2849 L
6193 4760 mt 
(40) s
4787 4615 mt 4804 4615 L
6259 4615 mt 6241 4615 L
4686 4659 mt 
(0) s
4787 4258 mt 4804 4258 L
6259 4258 mt 6241 4258 L
4552 4302 mt 
(100) s
4787 3901 mt 4804 3901 L
6259 3901 mt 6241 3901 L
4552 3945 mt 
(200) s
4787 3545 mt 4804 3545 L
6259 3545 mt 6241 3545 L
4552 3589 mt 
(300) s
4787 3188 mt 4804 3188 L
6259 3188 mt 6241 3188 L
4552 3232 mt 
(400) s
4787 2832 mt 4804 2832 L
6259 2832 mt 6241 2832 L
4552 2876 mt 
(500) s
4787 4615 mt 6259 4615 L
4787 2832 mt 6259 2832 L
4787 4615 mt 4787 2832 L
6259 4615 mt 6259 2832 L
gs 4787 2832 1473 1784 rc
c8
0 1552 104 0 0 -1552 4976 4615 4 MP
PP
0 sg
-104 0 0 1552 104 0 0 -1552 4976 4615 5 MP stroke
c8
0 179 104 0 0 -179 5080 4615 4 MP
PP
0 sg
-104 0 0 179 104 0 0 -179 5080 4615 5 MP stroke
c8
0 193 104 0 0 -193 5184 4615 4 MP
PP
0 sg
-104 0 0 193 104 0 0 -193 5184 4615 5 MP stroke
c8
0 83 103 0 0 -83 5288 4615 4 MP
PP
0 sg
-103 0 0 83 103 0 0 -83 5288 4615 5 MP stroke
c8
0 18 104 0 0 -18 5391 4615 4 MP
PP
0 sg
-104 0 0 18 104 0 0 -18 5391 4615 5 MP stroke
c8
0 29 104 0 0 -29 5495 4615 4 MP
PP
0 sg
-104 0 0 29 104 0 0 -29 5495 4615 5 MP stroke
c8
0 11 104 0 0 -11 5599 4615 4 MP
PP
0 sg
-104 0 0 11 104 0 0 -11 5599 4615 5 MP stroke
c8
0 4 104 0 0 -4 5703 4615 4 MP
PP
0 sg
-104 0 0 4 104 0 0 -4 5703 4615 5 MP stroke
c8
0 0 103 0 0 0 5807 4615 4 MP
PP
0 sg
-103 0 0 0 103 0 0 0 5807 4615 5 MP stroke
c8
0 4 104 0 0 -4 5910 4615 4 MP
PP
0 sg
-104 0 0 4 104 0 0 -4 5910 4615 5 MP stroke
gr

1 sg
0 1448 2921 0 0 -1448 899 2004 4 MP
PP
-2921 0 0 1448 2921 0 0 -1448 899 2004 5 MP stroke
4 w
DO
SO
6 w
0 sg
 899 2004 mt 3820 2004 L
 899  556 mt 3820  556 L
 899 2004 mt  899  556 L
3820 2004 mt 3820  556 L
 899 2004 mt 3820 2004 L
 899 2004 mt  899  556 L
1214 2004 mt 1214 1975 L
1214  556 mt 1214  585 L
1011 2150 mt 
(-2000) s
1671 2004 mt 1671 1975 L
1671  556 mt 1671  585 L
1638 2150 mt 
(0) s
2128 2004 mt 2128 1975 L
2128  556 mt 2128  585 L
1995 2150 mt 
(2000) s
2585 2004 mt 2585 1975 L
2585  556 mt 2585  585 L
2452 2150 mt 
(4000) s
3042 2004 mt 3042 1975 L
3042  556 mt 3042  585 L
2909 2150 mt 
(6000) s
3499 2004 mt 3499 1975 L
3499  556 mt 3499  585 L
3366 2150 mt 
(8000) s
 899 1874 mt  928 1874 L
3820 1874 mt 3790 1874 L
 528 1918 mt 
(-3000) s
 899 1646 mt  928 1646 L
3820 1646 mt 3790 1646 L
 528 1690 mt 
(-2000) s
 899 1417 mt  928 1417 L
3820 1417 mt 3790 1417 L
 528 1461 mt 
(-1000) s
 899 1189 mt  928 1189 L
3820 1189 mt 3790 1189 L
 798 1233 mt 
(0) s
 899  960 mt  928  960 L
3820  960 mt 3790  960 L
 598 1004 mt 
(1000) s
 899  732 mt  928  732 L
3820  732 mt 3790  732 L
 598  776 mt 
(2000) s
 899 2004 mt 3820 2004 L
 899  556 mt 3820  556 L
 899 2004 mt  899  556 L
3820 2004 mt 3820  556 L
gs 899 556 2922 1449 rc
/c9 { 0.873016 0.126984 1.000000 sr} bdef
c9
-5 -78 82 -3 11 93 1188 1107 4 MP
PP
0 sg
-88 -12 -5 -78 82 -3 11 93 1188 1107 5 MP stroke
/c10 { 0.857143 0.142857 1.000000 sr} bdef
c10
92 -6 6 89 -77 1 1435 1107 4 MP
PP
0 sg
-21 -84 92 -6 6 89 -77 1 1435 1107 5 MP stroke
/c11 { 0.428571 0.571429 1.000000 sr} bdef
c11
-29 -28 2 -47 76 25 1456 1191 4 MP
PP
0 sg
-49 50 -29 -28 2 -47 76 25 1456 1191 5 MP stroke
/c12 { 0.412698 0.587302 1.000000 sr} bdef
c12
45 5 -9 43 -37 -10 1323 968 4 MP
PP
0 sg
1 -38 45 5 -9 43 -37 -10 1323 968 5 MP stroke
c12
-2 47 -32 21 -39 -58 1605 1206 4 MP
PP
0 sg
73 -10 -2 47 -32 21 -39 -58 1605 1206 5 MP stroke
c9
-82 11 -6 -89 83 0 1281 1197 4 MP
PP
0 sg
5 78 -82 11 -6 -89 83 0 1281 1197 5 MP stroke
c11
76 17 -30 47 -40 0 1675 1159 4 MP
PP
0 sg
-6 -64 76 17 -30 47 -40 0 1675 1159 5 MP stroke
/c13 { 0.380952 0.619048 1.000000 sr} bdef
c13
-40 0 -9 -36 43 -8 1328 1050 4 MP
PP
0 sg
6 44 -40 0 -9 -36 43 -8 1328 1050 5 MP stroke
/c14 { 0.571429 0.428571 1.000000 sr} bdef
c14
-56 -19 12 -51 58 19 1157 1021 4 MP
PP
0 sg
-14 51 -56 -19 12 -51 58 19 1157 1021 5 MP stroke
/c15 { 0.238095 0.761905 1.000000 sr} bdef
c15
38 1 3 30 -31 -9 1387 953 4 MP
PP
0 sg
-10 -22 38 1 3 30 -31 -9 1387 953 5 MP stroke
/c16 { 0.333333 0.666667 1.000000 sr} bdef
c16
11 -40 42 14 -24 40 1268 904 4 MP
PP
0 sg
-29 -14 11 -40 42 14 -24 40 1268 904 5 MP stroke
/c17 { 0.349206 0.650794 1.000000 sr} bdef
c17
-30 -12 24 -40 53 20 1191 924 4 MP
PP
0 sg
-47 32 -30 -12 24 -40 53 20 1191 924 5 MP stroke
/c18 { 0.476190 0.523810 1.000000 sr} bdef
c18
-6 -44 54 -3 -3 52 1277 1001 4 MP
PP
0 sg
-45 -5 -6 -44 54 -3 -3 52 1277 1001 5 MP stroke
/c19 { 0.015873 0.984127 1.000000 sr} bdef
c19
24 -10 10 22 -31 -7 1418 960 4 MP
PP
0 sg
-3 -5 24 -10 10 22 -31 -7 1418 960 5 MP stroke
/c20 { 0.555556 0.444444 1.000000 sr} bdef
c20
3 -52 59 13 -12 51 1227 989 4 MP
PP
0 sg
-50 -12 3 -52 59 13 -12 51 1227 989 5 MP stroke
/c21 { 0.460317 0.539683 1.000000 sr} bdef
c21
-42 -14 9 -43 50 12 1227 989 4 MP
PP
0 sg
-17 45 -42 -14 9 -43 50 12 1227 989 5 MP stroke
c21
-23 45 -42 -13 18 -39 1482 1114 4 MP
PP
0 sg
47 7 -23 45 -42 -13 18 -39 1482 1114 5 MP stroke
/c22 { 0.365079 0.634921 1.000000 sr} bdef
c22
49 -50 21 84 -47 -7 1482 1114 4 MP
PP
0 sg
-23 -27 49 -50 21 84 -47 -7 1482 1114 5 MP stroke
/c23 { 0.634921 0.365079 1.000000 sr} bdef
c23
69 -4 6 64 -58 7 1733 1152 4 MP
PP
0 sg
-17 -67 69 -4 6 64 -58 7 1733 1152 5 MP stroke
/c24 { 0.111111 0.888889 1.000000 sr} bdef
c24
-35 -9 -3 -4 35 8 1421 965 4 MP
PP
0 sg
3 5 -35 -9 -3 -4 35 8 1421 965 5 MP stroke
/c25 { 0.761905 0.238095 1.000000 sr} bdef
c25
-67 25 -25 -82 75 -10 1750 1219 4 MP
PP
0 sg
17 67 -67 25 -25 -82 75 -10 1750 1219 5 MP stroke
c19
34 10 3 3 -35 -8 1456 973 4 MP
PP
0 sg
-2 -5 34 10 3 3 -35 -8 1456 973 5 MP stroke
/c26 { 0.095238 0.904762 1.000000 sr} bdef
c26
10 5 0 27 -34 -12 1492 990 4 MP
PP
0 sg
24 -20 10 5 0 27 -34 -12 1492 990 5 MP stroke
/c27 { 0.031746 0.968254 1.000000 sr} bdef
c27
-35 -8 -1 -9 34 12 1458 978 4 MP
PP
0 sg
2 5 -35 -8 -1 -9 34 12 1458 978 5 MP stroke
/c28 { 0.126984 0.873016 1.000000 sr} bdef
c28
35 8 3 4 -36 -2 1489 971 4 MP
PP
0 sg
-2 -10 35 8 3 4 -36 -2 1489 971 5 MP stroke
c26
-35 -8 1 -16 33 15 1492 990 4 MP
PP
0 sg
1 9 -35 -8 1 -16 33 15 1492 990 5 MP stroke
c13
23 27 -18 39 -38 -35 1538 1110 4 MP
PP
0 sg
33 -31 23 27 -18 39 -38 -35 1538 1110 5 MP stroke
/c29 { 0.190476 0.809524 1.000000 sr} bdef
c29
-35 -8 3 -23 33 15 1525 1005 4 MP
PP
0 sg
-1 16 -35 -8 3 -23 33 15 1525 1005 5 MP stroke
c26
-20 18 -10 -5 0 -21 1468 1031 4 MP
PP
0 sg
30 8 -20 18 -10 -5 0 -21 1468 1031 5 MP stroke
/c30 { 0.317460 0.682540 1.000000 sr} bdef
c30
-35 -6 6 -35 32 18 1558 1020 4 MP
PP
0 sg
-3 23 -35 -6 6 -35 32 18 1558 1020 5 MP stroke
/c31 { 0.285714 0.714286 1.000000 sr} bdef
c31
-35 -1 -2 -17 35 8 1491 981 4 MP
PP
0 sg
2 10 -35 -1 -2 -17 35 8 1491 981 5 MP stroke
c22
30 27 -22 28 -32 -18 1590 1038 4 MP
PP
0 sg
24 -37 30 27 -22 28 -32 -18 1590 1038 5 MP stroke
c18
-35 -4 8 -44 33 13 1590 1038 4 MP
PP
0 sg
-6 35 -35 -4 8 -44 33 13 1590 1038 5 MP stroke
c18
-47 -36 47 -37 28 38 1538 1110 4 MP
PP
0 sg
-28 35 -47 -36 47 -37 28 38 1538 1110 5 MP stroke
c13
-33 -13 10 -60 47 36 1566 1075 4 MP
PP
0 sg
-24 37 -33 -13 10 -60 47 36 1566 1075 5 MP stroke
c11
22 48 -56 7 -6 -55 1675 1159 4 MP
PP
0 sg
40 0 22 48 -56 7 -6 -55 1675 1159 5 MP stroke
/c32 { 0.507937 0.492063 1.000000 sr} bdef
c32
-36 -1 -1 -24 35 8 1526 989 4 MP
PP
0 sg
2 17 -36 -1 -1 -24 35 8 1526 989 5 MP stroke
/c33 { 0.714286 0.285714 1.000000 sr} bdef
c33
-36 -1 0 -29 35 6 1561 997 4 MP
PP
0 sg
1 24 -36 -1 0 -29 35 6 1561 997 5 MP stroke
c22
-30 -50 68 -12 -9 43 1809 1084 4 MP
PP
0 sg
-29 19 -30 -50 68 -12 -9 43 1809 1084 5 MP stroke
/c34 { 0.492063 0.507937 1.000000 sr} bdef
c34
8 -47 36 4 -8 44 1631 1007 4 MP
PP
0 sg
-36 -1 8 -47 36 4 -8 44 1631 1007 5 MP stroke
c13
45 -7 10 49 -36 4 1695 1051 4 MP
PP
0 sg
-19 -46 45 -7 10 49 -36 4 1695 1051 5 MP stroke
c9
-35 -2 0 -31 35 4 1596 1003 4 MP
PP
0 sg
0 29 -35 -2 0 -31 35 4 1596 1003 5 MP stroke
c34
7 -45 36 -4 -8 47 1667 1008 4 MP
PP
0 sg
-35 2 7 -45 36 -4 -8 47 1667 1008 5 MP stroke
c34
58 -7 6 55 -45 7 1714 1097 4 MP
PP
0 sg
-19 -55 58 -7 6 55 -45 7 1714 1097 5 MP stroke
/c35 { 0.920635 0.079365 1.000000 sr} bdef
c35
-36 -2 0 -30 36 1 1631 1007 4 MP
PP
0 sg
0 31 -36 -2 0 -30 36 1 1631 1007 5 MP stroke
c34
8 -41 35 -9 -7 45 1702 1006 4 MP
PP
0 sg
-36 5 8 -41 35 -9 -7 45 1702 1006 5 MP stroke
/c36 { 0.301587 0.698413 1.000000 sr} bdef
c36
-33 18 -21 -20 9 -43 1800 1127 4 MP
PP
0 sg
45 45 -33 18 -21 -20 9 -43 1800 1127 5 MP stroke
/c37 { 0.793651 0.206349 1.000000 sr} bdef
c37
1 -26 35 -2 0 30 1667 978 4 MP
PP
0 sg
-36 -2 1 -26 35 -2 0 30 1667 978 5 MP stroke
c34
7 -38 36 -7 -8 41 1738 1001 4 MP
PP
0 sg
-35 4 7 -38 36 -7 -8 41 1738 1001 5 MP stroke
/c38 { 0.174603 0.825397 1.000000 sr} bdef
c38
-16 15 -10 -20 12 -15 2228 1027 4 MP
PP
0 sg
14 20 -16 15 -10 -20 12 -15 2228 1027 5 MP stroke
/c39 { 0.158730 0.841270 1.000000 sr} bdef
c39
24 -18 3 46 -26 -11 2254 1038 4 MP
PP
0 sg
-1 -17 24 -18 3 46 -26 -11 2254 1038 5 MP stroke
c23
93 -7 11 68 -56 15 2312 1164 4 MP
PP
0 sg
-48 -76 93 -7 11 68 -56 15 2312 1164 5 MP stroke
c13
-22 -29 33 -18 25 40 1730 1042 4 MP
PP
0 sg
-36 7 -22 -29 33 -18 25 40 1730 1042 5 MP stroke
/c40 { 0.587302 0.412698 1.000000 sr} bdef
c40
0 -20 36 -5 -1 26 1703 980 4 MP
PP
0 sg
-35 -1 0 -20 36 -5 -1 26 1703 980 5 MP stroke
c21
7 -33 36 -6 -7 38 1773 997 4 MP
PP
0 sg
-36 1 7 -33 36 -6 -7 38 1773 997 5 MP stroke
c34
-43 -55 48 -24 29 49 2283 1115 4 MP
PP
0 sg
-34 30 -43 -55 48 -24 29 49 2283 1115 5 MP stroke
/c41 { 0.222222 0.777778 1.000000 sr} bdef
c41
31 15 5 21 -35 6 1837 1023 4 MP
PP
0 sg
-1 -42 31 15 5 21 -35 6 1837 1023 5 MP stroke
c20
-48 -5 -27 -74 112 9 1917 1183 4 MP
PP
0 sg
-37 70 -48 -5 -27 -74 112 9 1917 1183 5 MP stroke
c39
15 -8 12 26 -36 2 2200 998 4 MP
PP
0 sg
9 -20 15 -8 12 26 -36 2 2200 998 5 MP stroke
c12
1 -14 35 -4 0 20 1738 981 4 MP
PP
0 sg
-36 -2 1 -14 35 -4 0 20 1738 981 5 MP stroke
/c42 { 0.142857 0.857143 1.000000 sr} bdef
c42
-14 -8 11 -21 18 21 2176 1026 4 MP
PP
0 sg
-15 8 -14 -8 11 -21 18 21 2176 1026 5 MP stroke
/c43 { 0.603175 0.396825 1.000000 sr} bdef
c43
48 76 -48 24 -50 -42 2410 1182 4 MP
PP
0 sg
50 -58 48 76 -48 24 -50 -42 2410 1182 5 MP stroke
c13
8 -51 60 32 -24 28 2434 1154 4 MP
PP
0 sg
-44 -9 8 -51 60 32 -24 28 2434 1154 5 MP stroke
c16
1 -12 36 -1 -1 14 1774 983 4 MP
PP
0 sg
-36 -1 1 -12 36 -1 -1 14 1774 983 5 MP stroke
c13
-7 33 -36 1 8 -28 1837 1023 4 MP
PP
0 sg
35 -6 -7 33 -36 1 8 -28 1837 1023 5 MP stroke
c36
1 -10 36 -1 -1 12 1810 984 4 MP
PP
0 sg
-36 -1 1 -10 36 -1 -1 12 1810 984 5 MP stroke
c31
-8 28 -35 0 7 -21 1873 1016 4 MP
PP
0 sg
36 -7 -8 28 -35 0 7 -21 1873 1016 5 MP stroke
/c44 { 0.253968 0.746032 1.000000 sr} bdef
c44
25 -13 14 36 -37 2 1910 1014 4 MP
PP
0 sg
-2 -25 25 -13 14 36 -37 2 1910 1014 5 MP stroke
/c45 { 0.269841 0.730159 1.000000 sr} bdef
c45
-1 10 -35 -1 1 -9 1880 995 4 MP
PP
0 sg
35 0 -1 10 -35 -1 1 -9 1880 995 5 MP stroke
/c46 { 0.682540 0.317460 1.000000 sr} bdef
c46
16 -68 89 34 -48 62 2077 1130 4 MP
PP
0 sg
-57 -28 16 -68 89 34 -48 62 2077 1130 5 MP stroke
c33
-61 -18 3 -65 74 15 2118 1226 4 MP
PP
0 sg
-16 68 -61 -18 3 -65 74 15 2118 1226 5 MP stroke
c44
6 -19 37 -2 -7 21 1880 995 4 MP
PP
0 sg
-36 0 6 -19 37 -2 -7 21 1880 995 5 MP stroke
c18
-41 17 -50 -41 48 -31 2360 1140 4 MP
PP
0 sg
43 55 -41 17 -50 -41 48 -31 2360 1140 5 MP stroke
c15
-1 9 -36 -1 1 -8 1916 995 4 MP
PP
0 sg
36 0 -1 9 -36 -1 1 -8 1916 995 5 MP stroke
c44
1 -40 33 14 2 25 1910 1014 4 MP
PP
0 sg
-36 1 1 -40 33 14 2 25 1910 1014 5 MP stroke
c41
29 -19 21 20 -19 14 1807 1050 4 MP
PP
0 sg
-31 -15 29 -19 21 20 -19 14 1807 1050 5 MP stroke
c15
5 -17 36 -1 -6 19 1916 995 4 MP
PP
0 sg
-35 -1 5 -17 36 -1 -6 19 1916 995 5 MP stroke
c15
-11 21 -23 -1 -3 -46 2231 1073 4 MP
PP
0 sg
37 26 -11 21 -23 -1 -3 -46 2231 1073 5 MP stroke
/c47 { 0.206349 0.793651 1.000000 sr} bdef
c47
-1 8 -36 -1 2 -8 1951 996 4 MP
PP
0 sg
35 1 -1 8 -36 -1 2 -8 1951 996 5 MP stroke
c31
48 5 -11 31 -28 6 1993 1076 4 MP
PP
0 sg
-9 -42 48 5 -11 31 -28 6 1993 1076 5 MP stroke
c47
6 -21 36 14 -24 18 2255 1055 4 MP
PP
0 sg
-18 -11 6 -21 36 14 -24 18 2255 1055 5 MP stroke
c13
50 42 -48 31 -26 -45 2434 1154 4 MP
PP
0 sg
24 -28 50 42 -48 31 -26 -45 2434 1154 5 MP stroke
c38
5 -14 36 -2 -5 17 1951 996 4 MP
PP
0 sg
-36 -1 5 -14 36 -2 -5 17 1951 996 5 MP stroke
c42
-2 8 -35 -3 1 -6 1987 997 4 MP
PP
0 sg
36 1 -2 8 -35 -3 1 -6 1987 997 5 MP stroke
c11
9 42 -45 16 -3 -47 2041 1107 4 MP
PP
0 sg
39 -11 9 42 -45 16 -3 -47 2041 1107 5 MP stroke
c24
5 -10 36 -2 -5 14 1987 997 4 MP
PP
0 sg
-36 -2 5 -10 36 -2 -5 14 1987 997 5 MP stroke
c28
-1 6 -36 -3 1 -5 2023 999 4 MP
PP
0 sg
36 2 -1 6 -36 -3 1 -5 2023 999 5 MP stroke
c46
-61 -3 -11 -68 75 6 2192 1241 4 MP
PP
0 sg
-3 65 -61 -3 -11 -68 75 6 2192 1241 5 MP stroke
c45
-7 -31 26 -5 13 25 1371 1042 4 MP
PP
0 sg
-32 11 -7 -31 26 -5 13 25 1371 1042 5 MP stroke
c43
-54 3 -30 -58 82 -11 1276 1119 4 MP
PP
0 sg
2 66 -54 3 -30 -58 82 -11 1276 1119 5 MP stroke
c30
-1 40 -36 2 -6 -31 1988 1042 4 MP
PP
0 sg
43 -11 -1 40 -36 2 -6 -31 1988 1042 5 MP stroke
c24
-1 5 -36 -2 2 -5 2058 1001 4 MP
PP
0 sg
35 2 -1 5 -36 -2 2 -5 2058 1001 5 MP stroke
/c48 { 0.063492 0.936508 1.000000 sr} bdef
c48
3 -6 37 -2 -5 10 2023 999 4 MP
PP
0 sg
-35 -2 3 -6 37 -2 -5 10 2023 999 5 MP stroke
c31
-18 -21 18 -25 28 31 2148 1041 4 MP
PP
0 sg
-28 15 -18 -21 18 -25 28 31 2148 1041 5 MP stroke
c30
32 -18 23 19 -18 25 2194 1047 4 MP
PP
0 sg
-37 -26 32 -18 23 19 -18 25 2194 1047 5 MP stroke
/c49 { 0.444444 0.555556 1.000000 sr} bdef
c49
22 -35 50 38 -44 28 2148 1041 4 MP
PP
0 sg
-28 -31 22 -35 50 38 -44 28 2148 1041 5 MP stroke
c27
3 -4 36 -2 -3 6 2058 1001 4 MP
PP
0 sg
-36 0 3 -4 36 -2 -3 6 2058 1001 5 MP stroke
c30
-12 -53 45 3 -1 32 2199 1091 4 MP
PP
0 sg
-32 18 -12 -53 45 3 -1 32 2199 1091 5 MP stroke
c26
36 0 -2 5 -35 0 2095 996 4 MP
PP
0 sg
1 -5 36 0 -2 5 -35 0 2095 996 5 MP stroke
c40
57 28 -27 61 -50 -38 2154 1107 4 MP
PP
0 sg
20 -51 57 28 -27 61 -50 -38 2154 1107 5 MP stroke
c45
-24 8 -26 -26 45 -16 1993 1076 4 MP
PP
0 sg
5 34 -24 8 -26 -26 45 -16 1993 1076 5 MP stroke
c26
-36 0 1 -4 36 -1 2094 1001 4 MP
PP
0 sg
-1 5 -36 0 1 -4 36 -1 2094 1001 5 MP stroke
/c50 { 0.396825 0.603175 1.000000 sr} bdef
c50
-17 53 -36 2 -13 -64 2104 1069 4 MP
PP
0 sg
66 9 -17 53 -36 2 -13 -64 2104 1069 5 MP stroke
c31
-28 0 -4 -44 42 13 1458 1062 4 MP
PP
0 sg
-10 31 -28 0 -4 -44 42 13 1458 1062 5 MP stroke
c47
-18 -20 36 -27 4 44 1496 1031 4 MP
PP
0 sg
-22 3 -18 -20 36 -27 4 44 1496 1031 5 MP stroke
c19
3 -3 36 -2 -3 4 2094 1001 4 MP
PP
0 sg
-36 1 3 -3 36 -2 -3 4 2094 1001 5 MP stroke
c31
-6 -28 32 -11 9 36 1362 1006 4 MP
PP
0 sg
-35 3 -6 -28 32 -11 9 36 1362 1006 5 MP stroke
c8
1 -2 37 -3 -3 3 2130 1000 4 MP
PP
0 sg
-35 2 1 -2 37 -3 -3 3 2130 1000 5 MP stroke
/c51 { 0.079365 0.920635 1.000000 sr} bdef
c51
2 -4 35 -2 -1 4 2131 996 4 MP
PP
0 sg
-36 2 2 -4 35 -2 -1 4 2131 996 5 MP stroke
c16
-11 40 -28 -16 2 -34 1323 968 4 MP
PP
0 sg
37 10 -11 40 -28 -16 2 -34 1323 968 5 MP stroke
c16
40 0 -1 38 -36 -6 1359 974 4 MP
PP
0 sg
-3 -32 40 0 -1 38 -36 -6 1359 974 5 MP stroke
c36
36 6 -2 34 -31 -10 1356 944 4 MP
PP
0 sg
-3 -30 36 6 -2 34 -31 -10 1356 944 5 MP stroke
c8
1 -3 36 -2 -1 2 2165 998 4 MP
PP
0 sg
-36 3 1 -3 36 -2 -1 2 2165 998 5 MP stroke
c48
2 -3 36 -3 -2 4 2167 994 4 MP
PP
0 sg
-36 2 2 -3 36 -3 -2 4 2167 994 5 MP stroke
c50
-33 31 -28 -38 32 -21 1534 1169 4 MP
PP
0 sg
29 28 -33 31 -28 -38 32 -21 1534 1169 5 MP stroke
c48
23 1 -1 14 -8 5 2214 1007 4 MP
PP
0 sg
-14 -20 23 1 -1 14 -8 5 2214 1007 5 MP stroke
c44
-23 -9 23 -45 25 45 1410 1062 4 MP
PP
0 sg
-25 9 -23 -9 23 -45 25 45 1410 1062 5 MP stroke
c36
-13 -25 26 -41 30 58 1328 1050 4 MP
PP
0 sg
-43 8 -13 -25 26 -41 30 58 1328 1050 5 MP stroke
c28
0 28 -23 -6 -4 -15 1424 996 4 MP
PP
0 sg
27 -7 0 28 -23 -6 -4 -15 1424 996 5 MP stroke
c44
14 27 -34 18 0 -27 1458 1005 4 MP
PP
0 sg
20 -18 14 27 -34 18 0 -27 1458 1005 5 MP stroke
c8
16 -15 13 12 -2 3 2203 992 4 MP
PP
0 sg
-27 0 16 -15 13 12 -2 3 2203 992 5 MP stroke
c31
3 32 -38 -1 0 -28 1397 1003 4 MP
PP
0 sg
35 -3 3 32 -38 -1 0 -28 1397 1003 5 MP stroke
c15
-3 30 -30 -8 10 -31 1458 1062 4 MP
PP
0 sg
23 9 -3 30 -30 -8 10 -31 1458 1062 5 MP stroke
c47
-24 20 -4 -41 28 0 1468 1031 4 MP
PP
0 sg
0 21 -24 20 -4 -41 28 0 1468 1031 5 MP stroke
c46
-50 58 -60 -32 14 -60 2456 1274 4 MP
PP
0 sg
96 34 -50 58 -60 -32 14 -60 2456 1274 5 MP stroke
c34
-2 -47 44 9 26 45 2408 1109 4 MP
PP
0 sg
-68 -7 -2 -47 44 9 26 45 2408 1109 5 MP stroke
c45
-27 2 -23 -36 29 -4 2331 1030 4 MP
PP
0 sg
21 38 -27 2 -23 -36 29 -4 2331 1030 5 MP stroke
c15
-19 15 -33 -9 2 -47 2408 1109 4 MP
PP
0 sg
50 41 -19 15 -33 -9 2 -47 2408 1109 5 MP stroke
c44
6 -25 24 -8 6 31 1982 1011 4 MP
PP
0 sg
-36 2 6 -25 24 -8 6 31 1982 1011 5 MP stroke
c45
44 19 -3 28 -27 2 2303 1036 4 MP
PP
0 sg
-14 -49 44 19 -3 28 -27 2 2303 1036 5 MP stroke
c31
-27 4 -52 -43 50 2 2393 1024 4 MP
PP
0 sg
29 37 -27 4 -52 -43 50 2 2393 1024 5 MP stroke
c31
41 -17 14 49 -28 6 2331 1030 4 MP
PP
0 sg
-27 -38 41 -17 14 49 -28 6 2331 1030 5 MP stroke
c11
27 74 -39 11 -36 -23 2077 1130 4 MP
PP
0 sg
48 -62 27 74 -39 11 -36 -23 2077 1130 5 MP stroke
c18
-45 -3 -13 -53 61 3 2195 1176 4 MP
PP
0 sg
-3 53 -45 -3 -13 -53 61 3 2195 1176 5 MP stroke
c13
-36 2 -21 -38 44 -28 2104 1069 4 MP
PP
0 sg
13 64 -36 2 -21 -38 44 -28 2104 1069 5 MP stroke
c42
10 20 -27 0 2 -22 2255 1014 4 MP
PP
0 sg
15 2 10 20 -27 0 2 -22 2255 1014 5 MP stroke
c39
22 0 -1 24 -16 -4 2271 1018 4 MP
PP
0 sg
-5 -20 22 0 -1 24 -16 -4 2271 1018 5 MP stroke
c11
56 -15 13 53 -40 11 2283 1115 4 MP
PP
0 sg
-29 -49 56 -15 13 53 -40 11 2283 1115 5 MP stroke
c39
-22 0 3 -28 18 11 2255 1055 4 MP
PP
0 sg
1 17 -22 0 3 -28 18 11 2255 1055 5 MP stroke
c47
-44 -19 34 -30 16 28 2267 1087 4 MP
PP
0 sg
-6 21 -44 -19 34 -30 16 28 2267 1087 5 MP stroke
c8
6 14 -1 3 -13 -12 2214 1007 4 MP
PP
0 sg
8 -5 6 14 -1 3 -13 -12 2214 1007 5 MP stroke
c32
68 7 -2 47 -54 -8 2464 1070 4 MP
PP
0 sg
-12 -46 68 7 -2 47 -54 -8 2464 1070 5 MP stroke
c45
-27 3 -29 -37 33 -2 2360 1026 4 MP
PP
0 sg
23 36 -27 3 -29 -37 33 -2 2360 1026 5 MP stroke
c11
-50 -2 -21 -44 54 8 2410 1062 4 MP
PP
0 sg
17 38 -50 -2 -21 -44 54 8 2410 1062 5 MP stroke
c45
28 -6 20 43 -27 1 2310 992 4 MP
PP
0 sg
-21 -38 28 -6 20 43 -27 1 2310 992 5 MP stroke
c41
-29 4 -17 -27 19 -15 2358 1068 4 MP
PP
0 sg
27 38 -29 4 -17 -27 19 -15 2358 1068 5 MP stroke
c16
33 9 17 27 -33 2 2393 1024 4 MP
PP
0 sg
-17 -38 33 9 17 27 -33 2 2393 1024 5 MP stroke
c39
16 4 -2 22 -26 -1 2283 993 4 MP
PP
0 sg
12 -25 16 4 -2 22 -26 -1 2283 993 5 MP stroke
c29
-12 25 -20 -43 27 -2 2276 1038 4 MP
PP
0 sg
5 20 -12 25 -20 -43 27 -2 2276 1038 5 MP stroke
c31
-37 3 -12 -26 28 -15 2148 1041 4 MP
PP
0 sg
21 38 -37 3 -12 -26 28 -15 2148 1041 5 MP stroke
c16
40 -11 12 53 -36 -14 2267 1087 4 MP
PP
0 sg
-16 -28 40 -11 12 53 -36 -14 2267 1087 5 MP stroke
c32
-44 -16 3 -53 61 18 2134 1158 4 MP
PP
0 sg
-20 51 -44 -16 3 -53 61 18 2134 1158 5 MP stroke
c45
-6 25 -37 2 17 -53 2038 1060 4 MP
PP
0 sg
26 26 -6 25 -37 2 17 -53 2038 1060 5 MP stroke
c21
-66 -9 27 -61 36 23 2041 1107 4 MP
PP
0 sg
3 47 -66 -9 27 -61 36 23 2041 1107 5 MP stroke
c20
-43 -25 37 -70 49 68 1868 1115 4 MP
PP
0 sg
-43 27 -43 -25 37 -70 49 68 1868 1115 5 MP stroke
c31
20 29 -43 11 -5 -34 1993 1076 4 MP
PP
0 sg
28 -6 20 29 -43 11 -5 -34 1993 1076 5 MP stroke
c17
-20 -29 11 -31 43 25 1911 1088 4 MP
PP
0 sg
-34 35 -20 -29 11 -31 43 25 1911 1088 5 MP stroke
c50
49 -13 1 42 -36 7 1873 1016 4 MP
PP
0 sg
-14 -36 49 -13 1 42 -36 7 1873 1016 5 MP stroke
/c52 { 0.777778 0.222222 1.000000 sr} bdef
c52
25 82 -68 12 -49 -68 1917 1183 4 MP
PP
0 sg
92 -26 25 82 -68 12 -49 -68 1917 1183 5 MP stroke
c47
19 -14 22 29 -36 6 1802 1029 4 MP
PP
0 sg
-5 -21 19 -14 22 29 -36 6 1802 1029 5 MP stroke
c21
67 -25 19 55 -41 15 1755 1082 4 MP
PP
0 sg
-45 -45 67 -25 19 55 -41 15 1755 1082 5 MP stroke
c13
19 46 -35 9 -25 -40 1755 1082 4 MP
PP
0 sg
41 -15 19 46 -35 9 -25 -40 1755 1082 5 MP stroke
c50
-36 -4 -10 -49 56 -7 1613 1111 4 MP
PP
0 sg
-10 60 -36 -4 -10 -49 56 -7 1613 1111 5 MP stroke
c14
30 -47 39 58 -47 37 1613 1111 4 MP
PP
0 sg
-22 -48 30 -47 39 58 -47 37 1613 1111 5 MP stroke
c12
28 -35 38 35 -36 27 1536 1048 4 MP
PP
0 sg
-30 -27 28 -35 38 35 -36 27 1536 1048 5 MP stroke
c15
-7 23 -33 -15 22 -28 1536 1048 4 MP
PP
0 sg
18 20 -7 23 -33 -15 22 -28 1536 1048 5 MP stroke
c45
7 31 -35 8 3 -30 1435 1053 4 MP
PP
0 sg
25 -9 7 31 -35 8 3 -30 1435 1053 5 MP stroke
c41
22 -3 4 41 -33 -15 1525 1005 4 MP
PP
0 sg
7 -23 22 -3 4 41 -33 -15 1525 1005 5 MP stroke
c24
-4 13 -34 -10 34 -18 1424 996 4 MP
PP
0 sg
4 15 -4 13 -34 -10 34 -18 1424 996 5 MP stroke
c31
35 -8 6 28 -27 7 1424 996 4 MP
PP
0 sg
-14 -27 35 -8 6 28 -27 7 1424 996 5 MP stroke
c32
-53 -20 17 -45 56 19 1171 970 4 MP
PP
0 sg
-20 46 -53 -20 17 -45 56 19 1171 970 5 MP stroke
c8
23 6 -24 10 -3 -3 1424 968 4 MP
PP
0 sg
4 -13 23 6 -24 10 -3 -3 1424 968 5 MP stroke
c11
43 48 -12 38 -58 -19 1215 1040 4 MP
PP
0 sg
27 -67 43 48 -12 38 -58 -19 1215 1040 5 MP stroke
/c53 { 0.666667 0.333333 1.000000 sr} bdef
c53
-2 -66 88 12 -27 67 1215 1040 4 MP
PP
0 sg
-59 -13 -2 -66 88 12 -27 67 1215 1040 5 MP stroke
c36
-26 41 -26 5 -25 -45 1435 1107 4 MP
PP
0 sg
77 -1 -26 41 -26 5 -25 -45 1435 1107 5 MP stroke
c53
6 -61 79 18 -14 60 2470 1214 4 MP
PP
0 sg
-71 -17 6 -61 79 18 -14 60 2470 1214 5 MP stroke
c20
3 -56 71 17 -8 51 2478 1163 4 MP
PP
0 sg
-66 -12 3 -56 71 17 -8 51 2478 1163 5 MP stroke
c32
-3 -52 66 12 2 47 2476 1116 4 MP
PP
0 sg
-65 -7 -3 -52 66 12 2 47 2476 1116 5 MP stroke
c32
-11 -49 65 7 12 46 2464 1070 4 MP
PP
0 sg
-66 -4 -11 -49 65 7 12 46 2464 1070 5 MP stroke
/c54 { 0.523810 0.476190 1.000000 sr} bdef
c54
-21 -48 66 4 21 44 2443 1026 4 MP
PP
0 sg
-66 0 -21 -48 66 4 21 44 2443 1026 5 MP stroke
c20
-27 -43 66 0 52 43 2391 983 4 MP
PP
0 sg
-91 0 -27 -43 66 0 52 43 2391 983 5 MP stroke
c53
3 -62 79 11 -6 61 2541 1231 4 MP
PP
0 sg
-76 -10 3 -62 79 11 -6 61 2541 1231 5 MP stroke
c43
0 -58 76 10 -3 56 2544 1175 4 MP
PP
0 sg
-73 -8 0 -58 76 10 -3 56 2544 1175 5 MP stroke
c20
-4 -55 73 8 3 52 2541 1123 4 MP
PP
0 sg
-72 -5 -4 -55 73 8 3 52 2541 1123 5 MP stroke
/c55 { 0.539683 0.460317 1.000000 sr} bdef
c55
-9 -52 72 5 11 49 2530 1074 4 MP
PP
0 sg
-74 -2 -9 -52 72 5 11 49 2530 1074 5 MP stroke
c20
-15 -52 74 2 21 48 2509 1026 4 MP
PP
0 sg
-80 2 -15 -52 74 2 21 48 2509 1026 5 MP stroke
c55
-18 -53 80 -2 27 43 2482 983 4 MP
PP
0 sg
-89 12 -18 -53 80 -2 27 43 2482 983 5 MP stroke
c46
1 -63 81 7 -3 62 2617 1241 4 MP
PP
0 sg
-79 -6 1 -63 81 7 -3 62 2617 1241 5 MP stroke
c23
-1 -59 79 6 0 58 2617 1183 4 MP
PP
0 sg
-78 -5 -1 -59 79 6 0 58 2617 1183 5 MP stroke
c43
-4 -57 78 5 4 55 2613 1128 4 MP
PP
0 sg
-78 -3 -4 -57 78 5 4 55 2613 1128 5 MP stroke
c14
-8 -55 78 3 9 52 2604 1076 4 MP
PP
0 sg
-79 0 -8 -55 78 3 9 52 2604 1076 5 MP stroke
c40
-10 -53 79 0 15 52 2589 1024 4 MP
PP
0 sg
-84 1 -10 -53 79 0 15 52 2589 1024 5 MP stroke
c43
-11 -62 84 -1 18 53 2571 971 4 MP
PP
0 sg
-91 10 -11 -62 84 -1 18 53 2571 971 5 MP stroke
c46
-81 -4 0 -62 82 3 2695 1310 4 MP
PP
0 sg
-1 63 -81 -4 0 -62 82 3 2695 1310 5 MP stroke
/c56 { 0.650794 0.349206 1.000000 sr} bdef
c56
-80 -2 -2 -61 81 4 2696 1247 4 MP
PP
0 sg
1 59 -80 -2 -2 -61 81 4 2696 1247 5 MP stroke
/c57 { 0.619048 0.380952 1.000000 sr} bdef
c57
-81 0 -3 -59 80 2 2695 1188 4 MP
PP
0 sg
4 57 -81 0 -3 -59 80 2 2695 1188 5 MP stroke
c43
-83 1 -6 -56 81 0 2691 1131 4 MP
PP
0 sg
8 55 -83 1 -6 -56 81 0 2691 1131 5 MP stroke
c40
-86 1 -7 -53 83 -1 2683 1076 4 MP
PP
0 sg
10 53 -86 1 -7 -53 83 -1 2683 1076 5 MP stroke
c21
-88 -20 -9 -41 86 -1 2673 1023 4 MP
PP
0 sg
11 62 -88 -20 -9 -41 86 -1 2673 1023 5 MP stroke
c46
0 -63 83 2 0 62 2777 1251 4 MP
PP
0 sg
-83 -1 0 -63 83 2 0 62 2777 1251 5 MP stroke
c53
-2 -62 83 1 2 61 2775 1190 4 MP
PP
0 sg
-83 0 -2 -62 83 1 2 61 2775 1190 5 MP stroke
c23
-3 -60 83 0 3 59 2772 1131 4 MP
PP
0 sg
-83 1 -3 -60 83 0 3 59 2772 1131 5 MP stroke
c57
-4 -58 83 -1 6 56 2766 1075 4 MP
PP
0 sg
-85 3 -4 -58 83 -1 6 56 2766 1075 5 MP stroke
c40
-6 -55 85 -3 7 53 2759 1022 4 MP
PP
0 sg
-86 5 -6 -55 85 -3 7 53 2759 1022 5 MP stroke
c49
-5 -45 86 -5 9 41 2750 981 4 MP
PP
0 sg
-90 9 -5 -45 86 -5 9 41 2750 981 5 MP stroke
/c58 { 0.698413 0.301587 1.000000 sr} bdef
c58
-1 -64 85 0 0 63 2860 1252 4 MP
PP
0 sg
-84 1 -1 -64 85 0 0 63 2860 1252 5 MP stroke
c46
-1 -63 84 -1 2 62 2858 1190 4 MP
PP
0 sg
-85 2 -1 -63 84 -1 2 62 2858 1190 5 MP stroke
c56
-3 -62 85 -2 3 60 2855 1130 4 MP
PP
0 sg
-85 4 -3 -62 85 -2 3 60 2855 1130 5 MP stroke
c23
-3 -60 85 -4 4 58 2851 1072 4 MP
PP
0 sg
-86 6 -3 -60 85 -4 4 58 2851 1072 5 MP stroke
c40
-5 -60 86 -6 6 55 2845 1017 4 MP
PP
0 sg
-87 11 -5 -60 86 -6 6 55 2845 1017 5 MP stroke
c34
-6 -61 87 -11 5 45 2840 972 4 MP
PP
0 sg
-86 27 -6 -61 87 -11 5 45 2840 972 5 MP stroke
c58
0 -65 85 -2 1 64 2944 1251 4 MP
PP
0 sg
-86 3 0 -65 85 -2 1 64 2944 1251 5 MP stroke
c46
-2 -63 86 -3 1 63 2943 1188 4 MP
PP
0 sg
-85 3 -2 -63 86 -3 1 63 2943 1188 5 MP stroke
c53
-2 -63 85 -3 3 62 2940 1126 4 MP
PP
0 sg
-86 4 -2 -63 85 -3 3 62 2940 1126 5 MP stroke
c53
-3 -63 86 -4 3 60 2937 1066 4 MP
PP
0 sg
-86 7 -3 -63 86 -4 3 60 2937 1066 5 MP stroke
c56
-4 -65 86 -7 5 60 2932 1006 4 MP
PP
0 sg
-87 12 -4 -65 86 -7 5 60 2932 1006 5 MP stroke
c53
-5 -72 87 -12 6 61 2926 945 4 MP
PP
0 sg
-88 23 -5 -72 87 -12 6 61 2926 945 5 MP stroke
c33
-1 -65 87 -3 0 65 3030 1248 4 MP
PP
0 sg
-86 3 -1 -65 87 -3 0 65 3030 1248 5 MP stroke
c58
-1 -64 86 -3 2 63 3028 1185 4 MP
PP
0 sg
-87 4 -1 -64 86 -3 2 63 3028 1185 5 MP stroke
c46
-2 -64 87 -4 2 63 3026 1122 4 MP
PP
0 sg
-87 5 -2 -64 87 -4 2 63 3026 1122 5 MP stroke
c46
-2 -63 87 -5 3 63 3023 1059 4 MP
PP
0 sg
-88 5 -2 -63 87 -5 3 63 3023 1059 5 MP stroke
c33
-3 -66 88 -5 4 65 3019 994 4 MP
PP
0 sg
-89 6 -3 -66 88 -5 4 65 3019 994 5 MP stroke
c37
-3 -74 89 -6 5 72 3014 922 4 MP
PP
0 sg
-91 8 -3 -74 89 -6 5 72 3014 922 5 MP stroke
c33
-87 5 0 -65 86 -5 3117 1310 4 MP
PP
0 sg
1 65 -87 5 0 -65 86 -5 3117 1310 5 MP stroke
c58
-87 5 -1 -64 87 -5 3116 1245 4 MP
PP
0 sg
1 64 -87 5 -1 -64 87 -5 3116 1245 5 MP stroke
c58
-87 5 -2 -64 87 -5 3115 1181 4 MP
PP
0 sg
2 64 -87 5 -2 -64 87 -5 3115 1181 5 MP stroke
c46
-88 5 -1 -63 87 -5 3113 1117 4 MP
PP
0 sg
2 63 -88 5 -1 -63 87 -5 3113 1117 5 MP stroke
c58
-89 2 -2 -63 88 -5 3111 1054 4 MP
PP
0 sg
3 66 -89 2 -2 -63 88 -5 3111 1054 5 MP stroke
c23
-89 -15 -3 -57 89 -2 3108 988 4 MP
PP
0 sg
3 74 -89 -15 -3 -57 89 -2 3108 988 5 MP stroke
c33
-1 -66 88 -6 0 65 3203 1240 4 MP
PP
0 sg
-87 7 -1 -66 88 -6 0 65 3203 1240 5 MP stroke
c58
0 -63 87 -7 1 64 3202 1176 4 MP
PP
0 sg
-88 6 0 -63 87 -7 1 64 3202 1176 5 MP stroke
c46
-2 -63 88 -6 2 64 3200 1112 4 MP
PP
0 sg
-88 5 -2 -63 88 -6 2 64 3200 1112 5 MP stroke
c53
-1 -61 88 -5 1 63 3199 1049 4 MP
PP
0 sg
-88 3 -1 -61 88 -5 1 63 3199 1049 5 MP stroke
c53
-2 -61 88 -3 2 63 3197 986 4 MP
PP
0 sg
-88 1 -2 -61 88 -3 2 63 3197 986 5 MP stroke
c57
-1 -64 88 -1 3 57 3194 929 4 MP
PP
0 sg
-90 8 -1 -64 88 -1 3 57 3194 929 5 MP stroke
c33
-88 8 0 -66 87 -8 3291 1299 4 MP
PP
0 sg
1 66 -88 8 0 -66 87 -8 3291 1299 5 MP stroke
c58
-88 8 0 -63 88 -8 3290 1233 4 MP
PP
0 sg
0 63 -88 8 0 -63 88 -8 3290 1233 5 MP stroke
c53
-89 6 -1 -61 88 -8 3290 1170 4 MP
PP
0 sg
2 63 -89 6 -1 -61 88 -8 3290 1170 5 MP stroke
c56
-89 4 -1 -59 89 -6 3288 1107 4 MP
PP
0 sg
1 61 -89 4 -1 -59 89 -6 3288 1107 5 MP stroke
c57
-90 0 -1 -57 89 -4 3287 1046 4 MP
PP
0 sg
2 61 -90 0 -1 -57 89 -4 3287 1046 5 MP stroke
c53
-89 -3 -2 -61 90 0 3285 985 4 MP
PP
0 sg
1 64 -89 -3 -2 -61 90 0 3285 985 5 MP stroke
c33
-88 10 0 -65 88 -11 3378 1291 4 MP
PP
0 sg
0 66 -88 10 0 -65 88 -11 3378 1291 5 MP stroke
c46
-88 9 0 -62 88 -10 3378 1225 4 MP
PP
0 sg
0 63 -88 9 0 -62 88 -10 3378 1225 5 MP stroke
c56
-88 8 -1 -60 88 -9 3378 1162 4 MP
PP
0 sg
1 61 -88 8 -1 -60 88 -9 3378 1162 5 MP stroke
c57
-89 6 0 -57 88 -8 3377 1101 4 MP
PP
0 sg
1 59 -89 6 0 -57 88 -8 3377 1101 5 MP stroke
c40
-89 2 -1 -53 89 -6 3376 1042 4 MP
PP
0 sg
1 57 -89 2 -1 -53 89 -6 3376 1042 5 MP stroke
c18
-89 -15 -2 -44 89 -2 3375 985 4 MP
PP
0 sg
2 61 -89 -15 -2 -44 89 -2 3375 985 5 MP stroke
c33
0 -65 88 -13 0 65 3466 1215 4 MP
PP
0 sg
-88 13 0 -65 88 -13 0 65 3466 1215 5 MP stroke
c53
0 -62 88 -13 0 62 3466 1153 4 MP
PP
0 sg
-88 13 0 -62 88 -13 0 62 3466 1153 5 MP stroke
c23
0 -58 88 -13 1 60 3465 1093 4 MP
PP
0 sg
-89 11 0 -58 88 -13 1 60 3465 1093 5 MP stroke
c40
0 -55 89 -11 0 57 3465 1036 4 MP
PP
0 sg
-89 9 0 -55 89 -11 0 57 3465 1036 5 MP stroke
c55
-1 -50 89 -9 1 53 3464 983 4 MP
PP
0 sg
-89 6 -1 -50 89 -9 1 53 3464 983 5 MP stroke
c21
0 -46 89 -6 2 44 3462 939 4 MP
PP
0 sg
-91 8 0 -46 89 -6 2 44 3462 939 5 MP stroke
c33
0 -65 89 -17 0 65 3554 1202 4 MP
PP
0 sg
-89 17 0 -65 89 -17 0 65 3554 1202 5 MP stroke
c56
0 -60 89 -17 0 62 3554 1140 4 MP
PP
0 sg
-89 15 0 -60 89 -17 0 62 3554 1140 5 MP stroke
c57
-1 -57 89 -15 0 58 3554 1082 4 MP
PP
0 sg
-88 14 -1 -57 89 -15 0 58 3554 1082 5 MP stroke
c14
0 -53 88 -14 0 55 3554 1027 4 MP
PP
0 sg
-88 12 0 -53 88 -14 0 55 3554 1027 5 MP stroke
c55
1 -50 88 -12 1 50 3553 977 4 MP
PP
0 sg
-90 12 1 -50 88 -12 1 50 3553 977 5 MP stroke
c34
1 -45 90 -12 0 46 3553 931 4 MP
PP
0 sg
-91 11 1 -45 90 -12 0 46 3553 931 5 MP stroke
c58
0 -64 88 -23 0 65 3643 1185 4 MP
PP
0 sg
-88 22 0 -64 88 -23 0 65 3643 1185 5 MP stroke
c57
0 -57 88 -22 0 60 3643 1125 4 MP
PP
0 sg
-88 19 0 -57 88 -22 0 60 3643 1125 5 MP stroke
c40
0 -54 88 -19 1 57 3642 1068 4 MP
PP
0 sg
-89 16 0 -54 88 -19 1 57 3642 1068 5 MP stroke
c14
0 -53 89 -16 0 53 3642 1015 4 MP
PP
0 sg
-89 16 0 -53 89 -16 0 53 3642 1015 5 MP stroke
c55
0 -50 89 -16 -1 50 3643 965 4 MP
PP
0 sg
-88 16 0 -50 89 -16 -1 50 3643 965 5 MP stroke
c18
2 -45 88 -16 -1 45 3644 920 4 MP
PP
0 sg
-89 16 2 -45 88 -16 -1 45 3644 920 5 MP stroke
c14
0 -52 89 -38 0 64 3731 1163 4 MP
PP
0 sg
-89 26 0 -52 89 -38 0 64 3731 1163 5 MP stroke
c20
0 -52 89 -26 0 57 3731 1106 4 MP
PP
0 sg
-89 21 0 -52 89 -26 0 57 3731 1106 5 MP stroke
c20
0 -52 89 -21 0 54 3731 1052 4 MP
PP
0 sg
-89 19 0 -52 89 -21 0 54 3731 1052 5 MP stroke
c20
0 -52 89 -19 0 53 3731 999 4 MP
PP
0 sg
-89 18 0 -52 89 -19 0 53 3731 999 5 MP stroke
c55
0 -51 89 -18 0 50 3731 949 4 MP
PP
0 sg
-89 19 0 -51 89 -18 0 50 3731 949 5 MP stroke
c18
0 -52 89 -19 -2 45 3733 904 4 MP
PP
0 sg
-87 26 0 -52 89 -19 -2 45 3733 904 5 MP stroke
/c59 { 0.841270 0.158730 1.000000 sr} bdef
c59
-85 -1 10 -75 89 0 2391 1874 4 MP
PP
0 sg
-14 76 -85 -1 10 -75 89 0 2391 1874 5 MP stroke
/c60 { 0.825397 0.174603 1.000000 sr} bdef
c60
-84 -2 8 -75 85 1 2405 1798 4 MP
PP
0 sg
-9 76 -84 -2 8 -75 85 1 2405 1798 5 MP stroke
c60
-84 -4 7 -74 84 2 2414 1722 4 MP
PP
0 sg
-7 76 -84 -4 7 -74 84 2 2414 1722 5 MP stroke
c60
-84 -5 6 -74 84 4 2421 1646 4 MP
PP
0 sg
-6 75 -84 -5 6 -74 84 4 2421 1646 5 MP stroke
/c61 { 0.809524 0.190476 1.000000 sr} bdef
c61
-85 -6 6 -74 84 5 2427 1571 4 MP
PP
0 sg
-5 75 -85 -6 6 -74 84 5 2427 1571 5 MP stroke
c61
-84 -9 5 -73 85 6 2432 1496 4 MP
PP
0 sg
-6 76 -84 -9 5 -73 85 6 2432 1496 5 MP stroke
c52
-84 -14 6 -70 84 9 2438 1420 4 MP
PP
0 sg
-6 75 -84 -14 6 -70 84 9 2438 1420 5 MP stroke
/c62 { 0.746032 0.253968 1.000000 sr} bdef
c62
-79 -18 7 -67 84 14 2444 1345 4 MP
PP
0 sg
-12 71 -79 -18 7 -67 84 14 2444 1345 5 MP stroke
c60
-87 -1 8 -74 89 0 2480 1874 4 MP
PP
0 sg
-10 75 -87 -1 8 -74 89 0 2480 1874 5 MP stroke
c60
-86 -2 7 -74 87 1 2490 1799 4 MP
PP
0 sg
-8 75 -86 -2 7 -74 87 1 2490 1799 5 MP stroke
c61
-85 -3 6 -73 86 2 2498 1724 4 MP
PP
0 sg
-7 74 -85 -3 6 -73 86 2 2498 1724 5 MP stroke
c61
-85 -4 6 -73 85 3 2505 1650 4 MP
PP
0 sg
-6 74 -85 -4 6 -73 85 3 2505 1650 5 MP stroke
c37
-84 -6 5 -72 85 4 2511 1576 4 MP
PP
0 sg
-6 74 -84 -6 5 -72 85 4 2511 1576 5 MP stroke
c52
-83 -8 4 -71 84 6 2517 1502 4 MP
PP
0 sg
-5 73 -83 -8 4 -71 84 6 2517 1502 5 MP stroke
c25
-82 -9 5 -69 83 8 2522 1429 4 MP
PP
0 sg
-6 70 -82 -9 5 -69 83 8 2522 1429 5 MP stroke
c33
-79 -11 4 -65 82 9 2528 1359 4 MP
PP
0 sg
-7 67 -79 -11 4 -65 82 9 2528 1359 5 MP stroke
c61
-88 -1 7 -73 89 0 2569 1874 4 MP
PP
0 sg
-8 74 -88 -1 7 -73 89 0 2569 1874 5 MP stroke
c61
-87 -2 6 -73 88 1 2577 1800 4 MP
PP
0 sg
-7 74 -87 -2 6 -73 88 1 2577 1800 5 MP stroke
c61
-86 -2 5 -73 87 2 2584 1726 4 MP
PP
0 sg
-6 73 -86 -2 5 -73 87 2 2584 1726 5 MP stroke
c37
-85 -3 5 -72 86 2 2590 1653 4 MP
PP
0 sg
-6 73 -85 -3 5 -72 86 2 2590 1653 5 MP stroke
c52
-84 -4 4 -71 85 3 2596 1580 4 MP
PP
0 sg
-5 72 -84 -4 4 -71 85 3 2596 1580 5 MP stroke
c25
-84 -5 4 -70 84 4 2601 1508 4 MP
PP
0 sg
-4 71 -84 -5 4 -70 84 4 2601 1508 5 MP stroke
c62
-83 -7 4 -67 84 5 2605 1437 4 MP
PP
0 sg
-5 69 -83 -7 4 -67 84 5 2605 1437 5 MP stroke
c33
-81 -7 2 -65 83 7 2610 1368 4 MP
PP
0 sg
-4 65 -81 -7 2 -65 83 7 2610 1368 5 MP stroke
c61
-88 0 5 -73 90 0 2658 1874 4 MP
PP
0 sg
-7 73 -88 0 5 -73 90 0 2658 1874 5 MP stroke
c61
-87 -1 5 -72 88 0 2665 1801 4 MP
PP
0 sg
-6 73 -87 -1 5 -72 88 0 2665 1801 5 MP stroke
c37
-86 -2 4 -72 87 1 2671 1728 4 MP
PP
0 sg
-5 73 -86 -2 4 -72 87 1 2671 1728 5 MP stroke
c37
-86 -2 5 -72 86 2 2676 1655 4 MP
PP
0 sg
-5 72 -86 -2 5 -72 86 2 2676 1655 5 MP stroke
c52
-85 -3 3 -70 86 2 2681 1583 4 MP
PP
0 sg
-4 71 -85 -3 3 -70 86 2 2681 1583 5 MP stroke
c25
-84 -4 3 -69 85 3 2685 1512 4 MP
PP
0 sg
-4 70 -84 -4 3 -69 85 3 2685 1512 5 MP stroke
c62
-83 -4 3 -67 84 4 2689 1442 4 MP
PP
0 sg
-4 67 -83 -4 3 -67 84 4 2689 1442 5 MP stroke
c33
-82 -3 1 -66 83 4 2693 1375 4 MP
PP
0 sg
-2 65 -82 -3 1 -66 83 4 2693 1375 5 MP stroke
c61
-88 -1 4 -72 89 0 2748 1874 4 MP
PP
0 sg
-5 73 -88 -1 4 -72 89 0 2748 1874 5 MP stroke
c37
-87 0 4 -73 88 1 2753 1801 4 MP
PP
0 sg
-5 72 -87 0 4 -73 88 1 2753 1801 5 MP stroke
c37
-87 -1 4 -71 87 0 2758 1729 4 MP
PP
0 sg
-4 72 -87 -1 4 -71 87 0 2758 1729 5 MP stroke
c52
-85 -1 3 -72 87 1 2762 1657 4 MP
PP
0 sg
-5 72 -85 -1 3 -72 87 1 2762 1657 5 MP stroke
c52
-85 -1 3 -70 85 1 2767 1585 4 MP
PP
0 sg
-3 70 -85 -1 3 -70 85 1 2767 1585 5 MP stroke
c25
-85 -2 3 -68 85 1 2770 1515 4 MP
PP
0 sg
-3 69 -85 -2 3 -68 85 1 2770 1515 5 MP stroke
c62
-84 -2 2 -67 85 2 2773 1446 4 MP
PP
0 sg
-3 67 -84 -2 2 -67 85 2 2773 1446 5 MP stroke
c33
-83 -2 0 -66 84 2 2776 1379 4 MP
PP
0 sg
-1 66 -83 -2 0 -66 84 2 2776 1379 5 MP stroke
c37
-89 0 4 -72 89 0 2837 1874 4 MP
PP
0 sg
-4 72 -89 0 4 -72 89 0 2837 1874 5 MP stroke
c37
-88 0 3 -73 89 0 2841 1802 4 MP
PP
0 sg
-4 73 -88 0 3 -73 89 0 2841 1802 5 MP stroke
c37
-87 0 3 -71 88 0 2845 1729 4 MP
PP
0 sg
-4 71 -87 0 3 -71 88 0 2845 1729 5 MP stroke
c52
-87 -1 3 -71 87 0 2849 1658 4 MP
PP
0 sg
-3 72 -87 -1 3 -71 87 0 2849 1658 5 MP stroke
c52
-86 -1 2 -70 87 1 2852 1586 4 MP
PP
0 sg
-3 70 -86 -1 2 -70 87 1 2852 1586 5 MP stroke
c25
-85 0 2 -69 86 1 2855 1516 4 MP
PP
0 sg
-3 68 -85 0 2 -69 86 1 2855 1516 5 MP stroke
/c63 { 0.730159 0.269841 1.000000 sr} bdef
c63
-84 0 1 -67 85 0 2858 1448 4 MP
PP
0 sg
-2 67 -84 0 1 -67 85 0 2858 1448 5 MP stroke
c33
-85 0 1 -66 84 0 2860 1381 4 MP
PP
0 sg
0 66 -85 0 1 -66 84 0 2860 1381 5 MP stroke
c37
-88 1 2 -73 90 0 2926 1874 4 MP
PP
0 sg
-4 72 -88 1 2 -73 90 0 2926 1874 5 MP stroke
c37
-88 0 3 -72 88 -1 2930 1802 4 MP
PP
0 sg
-3 73 -88 0 3 -72 88 -1 2930 1802 5 MP stroke
c37
-88 1 3 -72 88 0 2933 1729 4 MP
PP
0 sg
-3 71 -88 1 3 -72 88 0 2933 1729 5 MP stroke
c52
-87 1 2 -71 88 -1 2936 1658 4 MP
PP
0 sg
-3 71 -87 1 2 -71 88 -1 2936 1658 5 MP stroke
c52
-87 1 2 -70 87 -1 2939 1587 4 MP
PP
0 sg
-2 70 -87 1 2 -70 87 -1 2939 1587 5 MP stroke
c25
-86 1 1 -69 87 -1 2941 1517 4 MP
PP
0 sg
-2 69 -86 1 1 -69 87 -1 2941 1517 5 MP stroke
c62
-86 2 1 -68 86 -1 2943 1448 4 MP
PP
0 sg
-1 67 -86 2 1 -68 86 -1 2943 1448 5 MP stroke
c33
-85 2 0 -66 86 -2 2944 1381 4 MP
PP
0 sg
-1 66 -85 2 0 -66 86 -2 2944 1381 5 MP stroke
c61
-89 0 2 -73 89 0 3016 1874 4 MP
PP
0 sg
-2 73 -89 0 2 -73 89 0 3016 1874 5 MP stroke
c37
-88 1 2 -73 89 0 3018 1801 4 MP
PP
0 sg
-3 72 -88 1 2 -73 89 0 3018 1801 5 MP stroke
c37
-87 1 2 -72 88 -1 3021 1729 4 MP
PP
0 sg
-3 72 -87 1 2 -72 88 -1 3021 1729 5 MP stroke
c52
-87 2 2 -72 87 -1 3024 1657 4 MP
PP
0 sg
-2 71 -87 2 2 -72 87 -1 3024 1657 5 MP stroke
c52
-87 2 2 -70 87 -2 3026 1586 4 MP
PP
0 sg
-2 70 -87 2 2 -70 87 -2 3026 1586 5 MP stroke
c25
-87 3 1 -70 87 -2 3028 1516 4 MP
PP
0 sg
-1 69 -87 3 1 -70 87 -2 3028 1516 5 MP stroke
c62
-86 3 0 -68 87 -3 3029 1447 4 MP
PP
0 sg
-1 68 -86 3 0 -68 87 -3 3029 1447 5 MP stroke
c63
-87 3 1 -66 86 -3 3030 1379 4 MP
PP
0 sg
0 66 -87 3 1 -66 86 -3 3030 1379 5 MP stroke
c61
-89 1 2 -74 89 0 3105 1874 4 MP
PP
0 sg
-2 73 -89 1 2 -74 89 0 3105 1874 5 MP stroke
c61
-89 1 2 -73 89 -1 3107 1801 4 MP
PP
0 sg
-2 73 -89 1 2 -73 89 -1 3107 1801 5 MP stroke
c37
-88 2 1 -73 89 -1 3109 1728 4 MP
PP
0 sg
-2 72 -88 2 1 -73 89 -1 3109 1728 5 MP stroke
c37
-88 2 2 -72 88 -2 3111 1656 4 MP
PP
0 sg
-2 72 -88 2 2 -72 88 -2 3111 1656 5 MP stroke
c52
-87 4 1 -72 88 -2 3113 1584 4 MP
PP
0 sg
-2 70 -87 4 1 -72 88 -2 3113 1584 5 MP stroke
c25
-87 4 1 -70 87 -4 3115 1514 4 MP
PP
0 sg
-1 70 -87 4 1 -70 87 -4 3115 1514 5 MP stroke
c62
-87 4 0 -68 87 -4 3116 1444 4 MP
PP
0 sg
0 68 -87 4 0 -68 87 -4 3116 1444 5 MP stroke
c63
-86 5 0 -67 87 -4 3116 1376 4 MP
PP
0 sg
-1 66 -86 5 0 -67 87 -4 3116 1376 5 MP stroke
c61
-89 1 2 -75 89 0 3194 1874 4 MP
PP
0 sg
-2 74 -89 1 2 -75 89 0 3194 1874 5 MP stroke
c61
-88 2 1 -74 89 -1 3196 1800 4 MP
PP
0 sg
-2 73 -88 2 1 -74 89 -1 3196 1800 5 MP stroke
c61
-89 3 2 -74 88 -2 3198 1727 4 MP
PP
0 sg
-1 73 -89 3 2 -74 88 -2 3198 1727 5 MP stroke
c37
-88 4 1 -73 89 -3 3199 1654 4 MP
PP
0 sg
-2 72 -88 4 1 -73 89 -3 3199 1654 5 MP stroke
c52
-88 4 1 -72 88 -4 3201 1582 4 MP
PP
0 sg
-1 72 -88 4 1 -72 88 -4 3201 1582 5 MP stroke
c25
-87 5 0 -71 88 -4 3202 1510 4 MP
PP
0 sg
-1 70 -87 5 0 -71 88 -4 3202 1510 5 MP stroke
c62
-88 6 1 -69 87 -5 3203 1440 4 MP
PP
0 sg
0 68 -88 6 1 -69 87 -5 3203 1440 5 MP stroke
c63
-88 6 0 -67 88 -6 3203 1372 4 MP
PP
0 sg
0 67 -88 6 0 -67 88 -6 3203 1372 5 MP stroke
c60
-89 1 1 -76 90 0 3283 1874 4 MP
PP
0 sg
-2 75 -89 1 1 -76 90 0 3283 1874 5 MP stroke
c60
-89 3 1 -76 89 -1 3285 1799 4 MP
PP
0 sg
-1 74 -89 3 1 -76 89 -1 3285 1799 5 MP stroke
c61
-88 4 1 -75 89 -3 3286 1725 4 MP
PP
0 sg
-2 74 -88 4 1 -75 89 -3 3286 1725 5 MP stroke
c61
-88 5 1 -74 88 -4 3288 1651 4 MP
PP
0 sg
-1 73 -88 5 1 -74 88 -4 3288 1651 5 MP stroke
c37
-88 6 1 -73 88 -5 3289 1578 4 MP
PP
0 sg
-1 72 -88 6 1 -73 88 -5 3289 1578 5 MP stroke
c52
-88 7 0 -72 88 -6 3290 1506 4 MP
PP
0 sg
0 71 -88 7 0 -72 88 -6 3290 1506 5 MP stroke
c25
-87 8 0 -70 88 -7 3290 1435 4 MP
PP
0 sg
-1 69 -87 8 0 -70 88 -7 3290 1435 5 MP stroke
c62
-87 8 0 -67 87 -8 3291 1366 4 MP
PP
0 sg
0 67 -87 8 0 -67 87 -8 3291 1366 5 MP stroke
c59
-89 1 1 -77 89 0 3373 1874 4 MP
PP
0 sg
-1 76 -89 1 1 -77 89 0 3373 1874 5 MP stroke
c59
-89 3 1 -78 89 -1 3374 1798 4 MP
PP
0 sg
-1 76 -89 3 1 -78 89 -1 3374 1798 5 MP stroke
c60
-89 4 1 -76 89 -3 3375 1722 4 MP
PP
0 sg
-1 75 -89 4 1 -76 89 -3 3375 1722 5 MP stroke
c60
-88 6 0 -76 89 -4 3376 1647 4 MP
PP
0 sg
-1 74 -88 6 0 -76 89 -4 3376 1647 5 MP stroke
c61
-88 8 1 -75 88 -6 3377 1573 4 MP
PP
0 sg
-1 73 -88 8 1 -75 88 -6 3377 1573 5 MP stroke
c37
-88 9 0 -73 88 -8 3378 1500 4 MP
PP
0 sg
0 72 -88 9 0 -73 88 -8 3378 1500 5 MP stroke
c25
-88 10 0 -71 88 -9 3378 1428 4 MP
PP
0 sg
0 70 -88 10 0 -71 88 -9 3378 1428 5 MP stroke
c62
-88 11 0 -68 88 -10 3378 1358 4 MP
PP
0 sg
0 67 -88 11 0 -68 88 -10 3378 1358 5 MP stroke
c10
-89 2 1 -79 89 0 3462 1874 4 MP
PP
0 sg
-1 77 -89 2 1 -79 89 0 3462 1874 5 MP stroke
c10
-89 3 1 -79 89 -2 3463 1797 4 MP
PP
0 sg
-1 78 -89 3 1 -79 89 -2 3463 1797 5 MP stroke
c10
-88 6 0 -79 89 -3 3464 1719 4 MP
PP
0 sg
-1 76 -88 6 0 -79 89 -3 3464 1719 5 MP stroke
c59
-89 8 1 -78 88 -6 3465 1643 4 MP
PP
0 sg
0 76 -89 8 1 -78 88 -6 3465 1643 5 MP stroke
c60
-88 9 0 -76 89 -8 3465 1567 4 MP
PP
0 sg
-1 75 -88 9 0 -76 89 -8 3465 1567 5 MP stroke
c61
-88 11 0 -75 88 -9 3466 1492 4 MP
PP
0 sg
0 73 -88 11 0 -75 88 -9 3466 1492 5 MP stroke
c52
-88 12 0 -72 88 -11 3466 1419 4 MP
PP
0 sg
0 71 -88 12 0 -72 88 -11 3466 1419 5 MP stroke
c62
-88 13 0 -69 88 -12 3466 1348 4 MP
PP
0 sg
0 68 -88 13 0 -69 88 -12 3466 1348 5 MP stroke
c9
-89 2 0 -81 90 0 3551 1874 4 MP
PP
0 sg
-1 79 -89 2 0 -81 90 0 3551 1874 5 MP stroke
c9
-88 4 0 -81 89 -2 3552 1795 4 MP
PP
0 sg
-1 79 -88 4 0 -81 89 -2 3552 1795 5 MP stroke
c9
-89 6 1 -81 88 -4 3553 1716 4 MP
PP
0 sg
0 79 -89 6 1 -81 88 -4 3553 1716 5 MP stroke
c10
-88 8 0 -80 89 -6 3553 1637 4 MP
PP
0 sg
-1 78 -88 8 0 -80 89 -6 3553 1637 5 MP stroke
c59
-88 11 0 -79 88 -8 3554 1559 4 MP
PP
0 sg
0 76 -88 11 0 -79 88 -8 3554 1559 5 MP stroke
c60
-89 14 1 -78 88 -11 3554 1483 4 MP
PP
0 sg
0 75 -89 14 1 -78 88 -11 3554 1483 5 MP stroke
c37
-89 16 0 -74 89 -14 3554 1408 4 MP
PP
0 sg
0 72 -89 16 0 -74 89 -14 3554 1408 5 MP stroke
c25
-89 17 0 -70 89 -16 3554 1336 4 MP
PP
0 sg
0 69 -89 17 0 -70 89 -16 3554 1336 5 MP stroke
/c64 { 0.904762 0.095238 1.000000 sr} bdef
c64
-89 2 0 -83 89 0 3641 1874 4 MP
PP
0 sg
0 81 -89 2 0 -83 89 0 3641 1874 5 MP stroke
c64
-90 5 1 -84 89 -2 3641 1793 4 MP
PP
0 sg
0 81 -90 5 1 -84 89 -2 3641 1793 5 MP stroke
/c65 { 0.888889 0.111111 1.000000 sr} bdef
c65
-89 7 0 -83 90 -5 3641 1712 4 MP
PP
0 sg
-1 81 -89 7 0 -83 90 -5 3641 1712 5 MP stroke
c65
-89 10 0 -83 89 -7 3642 1631 4 MP
PP
0 sg
0 80 -89 10 0 -83 89 -7 3642 1631 5 MP stroke
c9
-89 13 0 -82 89 -10 3642 1551 4 MP
PP
0 sg
0 79 -89 13 0 -82 89 -10 3642 1551 5 MP stroke
c10
-88 16 0 -81 89 -13 3642 1472 4 MP
PP
0 sg
-1 78 -88 16 0 -81 89 -13 3642 1472 5 MP stroke
c60
-88 21 0 -79 88 -16 3643 1394 4 MP
PP
0 sg
0 74 -88 21 0 -79 88 -16 3643 1394 5 MP stroke
c52
-88 23 0 -72 88 -21 3643 1320 4 MP
PP
0 sg
0 70 -88 23 0 -72 88 -21 3643 1320 5 MP stroke
c35
-90 3 0 -86 90 0 3730 1874 4 MP
PP
0 sg
0 83 -90 3 0 -86 90 0 3730 1874 5 MP stroke
c35
-89 4 0 -85 90 -3 3730 1791 4 MP
PP
0 sg
-1 84 -89 4 0 -85 90 -3 3730 1791 5 MP stroke
c35
-89 7 0 -86 89 -4 3731 1707 4 MP
PP
0 sg
0 83 -89 7 0 -86 89 -4 3731 1707 5 MP stroke
c35
-89 10 0 -86 89 -7 3731 1624 4 MP
PP
0 sg
0 83 -89 10 0 -86 89 -7 3731 1624 5 MP stroke
c35
-89 13 0 -85 89 -10 3731 1541 4 MP
PP
0 sg
0 82 -89 13 0 -85 89 -10 3731 1541 5 MP stroke
c64
-89 18 0 -86 89 -13 3731 1459 4 MP
PP
0 sg
0 81 -89 18 0 -86 89 -13 3731 1459 5 MP stroke
c9
-89 25 0 -86 89 -18 3731 1378 4 MP
PP
0 sg
0 79 -89 25 0 -86 89 -18 3731 1378 5 MP stroke
c37
-89 38 0 -85 89 -25 3731 1299 4 MP
PP
0 sg
0 72 -89 38 0 -85 89 -25 3731 1299 5 MP stroke
c10
-79 0 -6 -84 77 0 1238 1874 4 MP
PP
0 sg
8 84 -79 0 -6 -84 77 0 1238 1874 5 MP stroke
c65
-80 -1 -4 -84 79 0 1230 1790 4 MP
PP
0 sg
5 85 -80 -1 -4 -84 79 0 1230 1790 5 MP stroke
c65
-80 -1 -4 -85 80 1 1225 1705 4 MP
PP
0 sg
4 85 -80 -1 -4 -85 80 1 1225 1705 5 MP stroke
c65
-80 -1 -4 -84 80 1 1221 1620 4 MP
PP
0 sg
4 84 -80 -1 -4 -84 80 1 1221 1620 5 MP stroke
c65
-80 0 -3 -85 80 1 1217 1536 4 MP
PP
0 sg
3 84 -80 0 -3 -85 80 1 1217 1536 5 MP stroke
c65
-80 -1 -3 -84 80 0 1214 1452 4 MP
PP
0 sg
3 85 -80 -1 -3 -84 80 0 1214 1452 5 MP stroke
c65
-80 0 -5 -85 80 1 1211 1367 4 MP
PP
0 sg
5 84 -80 0 -5 -85 80 1 1211 1367 5 MP stroke
c65
-82 3 -5 -86 80 0 1206 1283 4 MP
PP
0 sg
7 83 -82 3 -5 -86 80 0 1206 1283 5 MP stroke
c10
-79 0 -4 -84 77 0 1315 1874 4 MP
PP
0 sg
6 84 -79 0 -4 -84 77 0 1315 1874 5 MP stroke
c9
-79 0 -4 -84 79 0 1309 1790 4 MP
PP
0 sg
4 84 -79 0 -4 -84 79 0 1309 1790 5 MP stroke
c9
-79 -1 -4 -84 79 0 1305 1706 4 MP
PP
0 sg
4 85 -79 -1 -4 -84 79 0 1305 1706 5 MP stroke
c9
-80 -1 -3 -84 79 1 1301 1621 4 MP
PP
0 sg
4 84 -80 -1 -3 -84 79 1 1301 1621 5 MP stroke
c65
-80 -2 -3 -84 80 1 1297 1537 4 MP
PP
0 sg
3 85 -80 -2 -3 -84 80 1 1297 1537 5 MP stroke
c65
-80 -1 -3 -85 80 2 1294 1452 4 MP
PP
0 sg
3 84 -80 -1 -3 -85 80 2 1294 1452 5 MP stroke
c65
-83 0 -2 -86 80 1 1291 1368 4 MP
PP
0 sg
5 85 -83 0 -2 -86 80 1 1291 1368 5 MP stroke
c35
-83 0 -5 -86 83 0 1286 1283 4 MP
PP
0 sg
5 86 -83 0 -5 -86 83 0 1286 1283 5 MP stroke
c10
-77 0 -4 -84 77 0 1392 1874 4 MP
PP
0 sg
4 84 -77 0 -4 -84 77 0 1392 1874 5 MP stroke
c10
-78 -1 -3 -83 77 0 1388 1790 4 MP
PP
0 sg
4 84 -78 -1 -3 -83 77 0 1388 1790 5 MP stroke
c9
-79 -1 -3 -84 78 1 1384 1706 4 MP
PP
0 sg
4 84 -79 -1 -3 -84 78 1 1384 1706 5 MP stroke
c9
-79 -1 -3 -84 79 1 1380 1622 4 MP
PP
0 sg
3 84 -79 -1 -3 -84 79 1 1380 1622 5 MP stroke
c9
-79 -1 -3 -84 79 1 1377 1538 4 MP
PP
0 sg
3 84 -79 -1 -3 -84 79 1 1377 1538 5 MP stroke
c65
-80 -2 -2 -84 79 1 1374 1454 4 MP
PP
0 sg
3 85 -80 -2 -2 -84 79 1 1374 1454 5 MP stroke
c65
-82 -3 0 -85 80 2 1371 1369 4 MP
PP
0 sg
2 86 -82 -3 0 -85 80 2 1371 1369 5 MP stroke
c64
-92 6 5 -95 82 3 1369 1283 4 MP
PP
0 sg
5 86 -92 6 5 -95 82 3 1369 1283 5 MP stroke
c10
-78 -1 -3 -83 77 0 1469 1874 4 MP
PP
0 sg
4 84 -78 -1 -3 -83 77 0 1469 1874 5 MP stroke
c10
-78 0 -3 -84 78 1 1465 1790 4 MP
PP
0 sg
3 83 -78 0 -3 -84 78 1 1465 1790 5 MP stroke
c10
-78 -1 -3 -83 78 0 1462 1707 4 MP
PP
0 sg
3 84 -78 -1 -3 -83 78 0 1462 1707 5 MP stroke
c9
-79 -1 -2 -84 78 1 1459 1623 4 MP
PP
0 sg
3 84 -79 -1 -2 -84 78 1 1459 1623 5 MP stroke
c9
-80 -2 -2 -83 79 1 1456 1539 4 MP
PP
0 sg
3 84 -80 -2 -2 -83 79 1 1456 1539 5 MP stroke
c9
-80 -2 -2 -84 80 2 1453 1455 4 MP
PP
0 sg
2 84 -80 -2 -2 -84 80 2 1453 1455 5 MP stroke
c65
-79 -3 -1 -84 80 2 1451 1371 4 MP
PP
0 sg
0 85 -79 -3 -1 -84 80 2 1451 1371 5 MP stroke
c60
-76 -25 2 -73 79 3 1451 1286 4 MP
PP
0 sg
-5 95 -76 -25 2 -73 79 3 1451 1286 5 MP stroke
c10
-77 0 -2 -83 76 0 1546 1874 4 MP
PP
0 sg
3 83 -77 0 -2 -83 76 0 1546 1874 5 MP stroke
c10
-78 -1 -2 -83 77 0 1543 1791 4 MP
PP
0 sg
3 84 -78 -1 -2 -83 77 0 1543 1791 5 MP stroke
c9
-79 0 -2 -84 78 1 1540 1707 4 MP
PP
0 sg
3 83 -79 0 -2 -84 78 1 1540 1707 5 MP stroke
c9
-79 -1 -2 -83 79 0 1537 1624 4 MP
PP
0 sg
2 84 -79 -1 -2 -83 79 0 1537 1624 5 MP stroke
c9
-78 -1 -3 -83 79 1 1535 1540 4 MP
PP
0 sg
2 83 -78 -1 -3 -83 79 1 1535 1540 5 MP stroke
c9
-78 -3 -2 -82 78 1 1533 1457 4 MP
PP
0 sg
2 84 -78 -3 -2 -82 78 1 1533 1457 5 MP stroke
c10
-77 -5 -2 -82 78 3 1531 1373 4 MP
PP
0 sg
1 84 -77 -5 -2 -82 78 3 1531 1373 5 MP stroke
c61
-73 10 -2 -88 77 5 1530 1289 4 MP
PP
0 sg
-2 73 -73 10 -2 -88 77 5 1530 1289 5 MP stroke
c10
-78 0 -1 -83 77 0 1622 1874 4 MP
PP
0 sg
2 83 -78 0 -1 -83 77 0 1622 1874 5 MP stroke
c10
-78 0 -2 -83 78 0 1620 1791 4 MP
PP
0 sg
2 83 -78 0 -2 -83 78 0 1620 1791 5 MP stroke
c9
-79 -1 -1 -83 78 0 1618 1708 4 MP
PP
0 sg
2 84 -79 -1 -1 -83 78 0 1618 1708 5 MP stroke
c9
-79 -1 -2 -83 79 1 1616 1624 4 MP
PP
0 sg
2 83 -79 -1 -2 -83 79 1 1616 1624 5 MP stroke
c9
-79 -1 -3 -83 79 1 1614 1541 4 MP
PP
0 sg
3 83 -79 -1 -3 -83 79 1 1614 1541 5 MP stroke
c10
-78 -1 -3 -82 79 1 1611 1458 4 MP
PP
0 sg
2 82 -78 -1 -3 -82 79 1 1611 1458 5 MP stroke
c59
-76 -2 -4 -81 78 1 1609 1376 4 MP
PP
0 sg
2 82 -76 -2 -4 -81 78 1 1609 1376 5 MP stroke
c60
-76 -17 -2 -73 76 2 1607 1294 4 MP
PP
0 sg
2 88 -76 -17 -2 -73 76 2 1607 1294 5 MP stroke
c10
-78 -1 0 -82 77 0 1699 1874 4 MP
PP
0 sg
1 83 -78 -1 0 -82 77 0 1699 1874 5 MP stroke
c10
-79 -1 -1 -83 78 1 1698 1791 4 MP
PP
0 sg
2 83 -79 -1 -1 -83 78 1 1698 1791 5 MP stroke
c9
-78 -1 -2 -83 79 1 1696 1708 4 MP
PP
0 sg
1 83 -78 -1 -2 -83 79 1 1696 1708 5 MP stroke
c9
-79 -1 -1 -83 78 1 1695 1625 4 MP
PP
0 sg
2 83 -79 -1 -1 -83 78 1 1695 1625 5 MP stroke
c65
-80 -1 -2 -83 79 1 1693 1542 4 MP
PP
0 sg
3 83 -80 -1 -2 -83 79 1 1693 1542 5 MP stroke
c9
-79 0 -4 -83 80 1 1690 1459 4 MP
PP
0 sg
3 82 -79 0 -4 -83 80 1 1690 1459 5 MP stroke
c10
-77 0 -6 -81 79 0 1687 1377 4 MP
PP
0 sg
4 81 -77 0 -6 -81 79 0 1687 1377 5 MP stroke
c25
-69 4 -10 -77 77 0 1683 1296 4 MP
PP
0 sg
2 73 -69 4 -10 -77 77 0 1683 1296 5 MP stroke
c10
-77 0 0 -82 77 0 1776 1874 4 MP
PP
0 sg
0 82 -77 0 0 -82 77 0 1776 1874 5 MP stroke
c10
-78 -1 0 -82 77 0 1776 1792 4 MP
PP
0 sg
1 83 -78 -1 0 -82 77 0 1776 1792 5 MP stroke
c9
-80 -1 0 -83 78 1 1775 1709 4 MP
PP
0 sg
2 83 -80 -1 0 -83 78 1 1775 1709 5 MP stroke
c9
-80 -1 -1 -83 80 1 1773 1626 4 MP
PP
0 sg
1 83 -80 -1 -1 -83 80 1 1773 1626 5 MP stroke
c65
-80 -1 -2 -83 80 1 1772 1543 4 MP
PP
0 sg
2 83 -80 -1 -2 -83 80 1 1772 1543 5 MP stroke
c65
-81 0 -3 -84 80 1 1770 1460 4 MP
PP
0 sg
4 83 -81 0 -3 -84 80 1 1770 1460 5 MP stroke
c64
-81 5 -6 -86 81 0 1766 1377 4 MP
PP
0 sg
6 81 -81 5 -6 -86 81 0 1766 1377 5 MP stroke
c59
-75 10 -16 -82 81 -5 1760 1296 4 MP
PP
0 sg
10 77 -75 10 -16 -82 81 -5 1760 1296 5 MP stroke
c10
-78 -1 1 -81 77 0 1853 1874 4 MP
PP
0 sg
0 82 -78 -1 1 -81 77 0 1853 1874 5 MP stroke
c10
-79 -1 1 -82 78 1 1853 1792 4 MP
PP
0 sg
0 82 -79 -1 1 -82 78 1 1853 1792 5 MP stroke
c9
-79 -2 0 -82 79 1 1853 1710 4 MP
PP
0 sg
0 83 -79 -2 0 -82 79 1 1853 1710 5 MP stroke
c65
-81 -2 1 -83 79 2 1853 1627 4 MP
PP
0 sg
1 83 -81 -2 1 -83 79 2 1853 1627 5 MP stroke
c64
-82 -2 -1 -83 81 2 1852 1544 4 MP
PP
0 sg
2 83 -82 -2 -1 -83 81 2 1852 1544 5 MP stroke
c64
-84 0 -1 -86 82 2 1850 1461 4 MP
PP
0 sg
3 84 -84 0 -1 -86 82 2 1850 1461 5 MP stroke
/c66 { 0.936508 0.063492 1.000000 sr} bdef
c66
-87 3 -3 -89 84 0 1847 1377 4 MP
PP
0 sg
6 86 -87 3 -3 -89 84 0 1847 1377 5 MP stroke
c35
-92 26 -11 -105 87 -3 1841 1291 4 MP
PP
0 sg
16 82 -92 26 -11 -105 87 -3 1841 1291 5 MP stroke
c10
-78 0 2 -81 77 0 1930 1874 4 MP
PP
0 sg
-1 81 -78 0 2 -81 77 0 1930 1874 5 MP stroke
c10
-79 -1 2 -81 78 0 1931 1793 4 MP
PP
0 sg
-1 82 -79 -1 2 -81 78 0 1931 1793 5 MP stroke
c9
-81 -2 2 -81 79 1 1932 1711 4 MP
PP
0 sg
0 82 -81 -2 2 -81 79 1 1932 1711 5 MP stroke
c65
-81 -3 1 -82 81 2 1932 1629 4 MP
PP
0 sg
-1 83 -81 -3 1 -82 81 2 1932 1629 5 MP stroke
c64
-83 -3 1 -83 81 3 1933 1546 4 MP
PP
0 sg
1 83 -83 -3 1 -83 81 3 1933 1546 5 MP stroke
c35
-86 -4 2 -85 83 3 1932 1463 4 MP
PP
0 sg
1 86 -86 -4 2 -85 83 3 1932 1463 5 MP stroke
/c67 { 0.952381 0.047619 1.000000 sr} bdef
c67
-90 -4 1 -89 86 4 1931 1377 4 MP
PP
0 sg
3 89 -90 -4 1 -89 86 4 1931 1377 5 MP stroke
/c68 { 1.000000 0.000000 1.000000 sr} bdef
c68
-112 -9 11 -100 90 4 1928 1288 4 MP
PP
0 sg
11 105 -112 -9 11 -100 90 4 1928 1288 5 MP stroke
c10
-78 -1 3 -80 77 0 2007 1874 4 MP
PP
0 sg
-2 81 -78 -1 3 -80 77 0 2007 1874 5 MP stroke
c9
-79 -2 3 -80 78 1 2009 1793 4 MP
PP
0 sg
-2 81 -79 -2 3 -80 78 1 2009 1793 5 MP stroke
c9
-80 -2 3 -81 79 2 2011 1712 4 MP
PP
0 sg
-2 81 -80 -2 3 -81 79 2 2011 1712 5 MP stroke
c65
-82 -3 3 -81 80 2 2013 1631 4 MP
PP
0 sg
-1 82 -82 -3 3 -81 80 2 2013 1631 5 MP stroke
c64
-84 -4 3 -82 82 3 2014 1549 4 MP
PP
0 sg
-1 83 -84 -4 3 -82 82 3 2014 1549 5 MP stroke
c35
-84 -7 2 -82 84 4 2015 1466 4 MP
PP
0 sg
-2 85 -84 -7 2 -82 84 4 2015 1466 5 MP stroke
c66
-88 -12 5 -84 84 7 2017 1381 4 MP
PP
0 sg
-1 89 -88 -12 5 -84 84 7 2017 1381 5 MP stroke
c65
-89 -34 12 -78 88 12 2018 1292 4 MP
PP
0 sg
-11 100 -89 -34 12 -78 88 12 2018 1292 5 MP stroke
c10
-78 -1 5 -79 76 0 2084 1874 4 MP
PP
0 sg
-3 80 -78 -1 5 -79 76 0 2084 1874 5 MP stroke
c9
-80 -2 5 -79 78 1 2087 1794 4 MP
PP
0 sg
-3 80 -80 -2 5 -79 78 1 2087 1794 5 MP stroke
c65
-81 -3 4 -80 80 2 2090 1714 4 MP
PP
0 sg
-3 81 -81 -3 4 -80 80 2 2090 1714 5 MP stroke
c65
-82 -4 4 -80 81 3 2093 1633 4 MP
PP
0 sg
-3 81 -82 -4 4 -80 81 3 2093 1633 5 MP stroke
c65
-83 -6 4 -80 82 4 2096 1552 4 MP
PP
0 sg
-3 82 -83 -6 4 -80 82 4 2096 1552 5 MP stroke
c64
-84 -7 3 -81 83 6 2099 1470 4 MP
PP
0 sg
-2 82 -84 -7 3 -81 83 6 2099 1470 5 MP stroke
c65
-83 -12 4 -79 84 7 2101 1388 4 MP
PP
0 sg
-5 84 -83 -12 4 -79 84 7 2101 1388 5 MP stroke
c60
-74 -15 3 -75 83 12 2106 1304 4 MP
PP
0 sg
-12 78 -74 -15 3 -75 83 12 2106 1304 5 MP stroke
c10
-79 -1 7 -78 77 0 2160 1874 4 MP
PP
0 sg
-5 79 -79 -1 7 -78 77 0 2160 1874 5 MP stroke
c9
-80 -2 6 -78 79 1 2165 1795 4 MP
PP
0 sg
-5 79 -80 -2 6 -78 79 1 2165 1795 5 MP stroke
c9
-82 -3 6 -79 80 2 2170 1716 4 MP
PP
0 sg
-4 80 -82 -3 6 -79 80 2 2170 1716 5 MP stroke
c9
-83 -5 5 -78 82 3 2174 1636 4 MP
PP
0 sg
-4 80 -83 -5 5 -78 82 3 2174 1636 5 MP stroke
c9
-83 -6 4 -79 83 5 2178 1556 4 MP
PP
0 sg
-4 80 -83 -6 4 -79 83 5 2178 1556 5 MP stroke
c9
-84 -8 4 -79 83 6 2182 1476 4 MP
PP
0 sg
-3 81 -84 -8 4 -79 83 6 2182 1476 5 MP stroke
c65
-82 -7 2 -80 84 8 2185 1395 4 MP
PP
0 sg
-4 79 -82 -7 2 -80 84 8 2185 1395 5 MP stroke
c60
-75 -6 -4 -76 82 7 2189 1316 4 MP
PP
0 sg
-3 75 -75 -6 -4 -76 82 7 2189 1316 5 MP stroke
c10
-79 -1 9 -77 77 0 2237 1874 4 MP
PP
0 sg
-7 78 -79 -1 9 -77 77 0 2237 1874 5 MP stroke
c10
-81 -2 8 -77 79 1 2244 1796 4 MP
PP
0 sg
-6 78 -81 -2 8 -77 79 1 2244 1796 5 MP stroke
c10
-82 -4 7 -77 81 2 2250 1718 4 MP
PP
0 sg
-6 79 -82 -4 7 -77 81 2 2250 1718 5 MP stroke
c10
-83 -5 6 -77 82 4 2256 1639 4 MP
PP
0 sg
-5 78 -83 -5 6 -77 82 4 2256 1639 5 MP stroke
c10
-84 -7 5 -77 83 5 2261 1561 4 MP
PP
0 sg
-4 79 -84 -7 5 -77 83 5 2261 1561 5 MP stroke
c10
-84 -8 4 -78 84 7 2265 1482 4 MP
PP
0 sg
-4 79 -84 -8 4 -78 84 7 2265 1482 5 MP stroke
c9
-86 -10 4 -78 84 8 2269 1403 4 MP
PP
0 sg
-2 80 -86 -10 4 -78 84 8 2269 1403 5 MP stroke
c10
-93 7 3 -93 86 10 2271 1323 4 MP
PP
0 sg
4 76 -93 7 3 -93 86 10 2271 1323 5 MP stroke
c59
-82 -1 14 -76 77 0 2314 1874 4 MP
PP
0 sg
-9 77 -82 -1 14 -76 77 0 2314 1874 5 MP stroke
c59
-83 -2 9 -76 82 1 2323 1797 4 MP
PP
0 sg
-8 77 -83 -2 9 -76 82 1 2323 1797 5 MP stroke
c59
-83 -3 7 -76 83 2 2331 1720 4 MP
PP
0 sg
-7 77 -83 -3 7 -76 83 2 2331 1720 5 MP stroke
c59
-83 -5 6 -75 83 3 2338 1643 4 MP
PP
0 sg
-6 77 -83 -5 6 -75 83 3 2338 1643 5 MP stroke
c59
-83 -7 5 -75 83 5 2344 1566 4 MP
PP
0 sg
-5 77 -83 -7 5 -75 83 5 2344 1566 5 MP stroke
c59
-85 -9 6 -76 83 7 2349 1489 4 MP
PP
0 sg
-4 78 -85 -9 6 -76 83 7 2349 1489 5 MP stroke
c59
-87 -12 6 -75 85 9 2353 1411 4 MP
PP
0 sg
-4 78 -87 -12 6 -75 85 9 2353 1411 5 MP stroke
c37
-96 -34 12 -71 87 12 2357 1333 4 MP
PP
0 sg
-3 93 -96 -34 12 -71 87 12 2357 1333 5 MP stroke
c37
-71 -10 -2 -81 73 7 899 1189 4 MP
PP
0 sg
0 84 -71 -10 -2 -81 73 7 899 1189 5 MP stroke
c37
-70 -16 -1 -78 71 10 899 1105 4 MP
PP
0 sg
0 84 -70 -16 -1 -78 71 10 899 1105 5 MP stroke
c37
-70 -24 0 -76 70 16 899 1021 4 MP
PP
0 sg
0 84 -70 -24 0 -76 70 16 899 1021 5 MP stroke
c60
-72 -34 2 -74 70 24 899 937 4 MP
PP
0 sg
0 84 -72 -34 2 -74 70 24 899 937 5 MP stroke
c37
-76 -45 4 -72 72 34 899 853 4 MP
PP
0 sg
0 83 -76 -45 4 -72 72 34 899 853 5 MP stroke
c63
-76 -64 0 -65 76 45 899 770 4 MP
PP
0 sg
0 84 -76 -64 0 -65 76 45 899 770 5 MP stroke
c37
-71 -8 -5 -77 74 4 972 1196 4 MP
PP
0 sg
2 81 -71 -8 -5 -77 74 4 972 1196 5 MP stroke
c25
-68 -13 -4 -73 71 8 970 1115 4 MP
PP
0 sg
1 78 -68 -13 -4 -73 71 8 970 1115 5 MP stroke
c62
-69 -21 1 -68 68 13 969 1037 4 MP
PP
0 sg
0 76 -69 -21 1 -68 68 13 969 1037 5 MP stroke
c33
-71 -31 4 -64 69 21 969 961 4 MP
PP
0 sg
-2 74 -71 -31 4 -64 69 21 969 961 5 MP stroke
c53
-76 -43 9 -60 71 31 971 887 4 MP
PP
0 sg
-4 72 -76 -43 9 -60 71 31 971 887 5 MP stroke
c23
-86 -51 10 -57 76 43 975 815 4 MP
PP
0 sg
0 65 -86 -51 10 -57 76 43 975 815 5 MP stroke
c25
-69 -2 -11 -75 75 0 1046 1200 4 MP
PP
0 sg
5 77 -69 -2 -11 -75 75 0 1046 1200 5 MP stroke
c33
-65 -8 -8 -67 69 2 1041 1123 4 MP
PP
0 sg
4 73 -65 -8 -8 -67 69 2 1041 1123 5 MP stroke
c23
-62 -19 -2 -57 65 8 1037 1050 4 MP
PP
0 sg
-1 68 -62 -19 -2 -57 65 8 1037 1050 5 MP stroke
c43
-68 -28 10 -55 62 19 1038 982 4 MP
PP
0 sg
-4 64 -68 -28 10 -55 62 19 1038 982 5 MP stroke
c40
-75 -37 16 -51 68 28 1042 918 4 MP
PP
0 sg
-9 60 -75 -37 16 -51 68 28 1042 918 5 MP stroke
c32
-85 -52 20 -42 75 37 1051 858 4 MP
PP
0 sg
-10 57 -85 -52 20 -42 75 37 1051 858 5 MP stroke
c59
-78 18 -11 -93 78 0 1121 1200 4 MP
PP
0 sg
11 75 -78 18 -11 -93 78 0 1121 1200 5 MP stroke
c18
-43 -1 -43 -48 78 -18 1110 1125 4 MP
PP
0 sg
8 67 -43 -1 -43 -48 78 -18 1110 1125 5 MP stroke
c11
-57 -20 12 -38 43 1 1102 1058 4 MP
PP
0 sg
2 57 -57 -20 12 -38 43 1 1102 1058 5 MP stroke
c14
-61 -24 14 -51 57 20 1100 1001 4 MP
PP
0 sg
-10 55 -61 -24 14 -51 57 20 1100 1001 5 MP stroke
c55
-65 -29 20 -46 61 24 1110 946 4 MP
PP
0 sg
-16 51 -65 -29 20 -46 61 24 1110 946 5 MP stroke
c34
-92 -39 47 -32 65 29 1126 895 4 MP
PP
0 sg
-20 42 -92 -39 47 -32 65 29 1126 895 5 MP stroke
c35
-83 -1 -2 -85 85 0 899 1874 4 MP
PP
0 sg
0 86 -83 -1 -2 -85 85 0 899 1874 5 MP stroke
c64
-82 0 -1 -86 83 1 899 1788 4 MP
PP
0 sg
0 85 -82 0 -1 -86 83 1 899 1788 5 MP stroke
c64
-80 -1 -2 -85 82 0 899 1703 4 MP
PP
0 sg
0 86 -80 -1 -2 -85 82 0 899 1703 5 MP stroke
c65
-79 -2 -1 -85 80 1 899 1617 4 MP
PP
0 sg
0 86 -79 -2 -1 -85 80 1 899 1617 5 MP stroke
c9
-78 -2 -1 -85 79 2 899 1531 4 MP
PP
0 sg
0 85 -78 -2 -1 -85 79 2 899 1531 5 MP stroke
c10
-77 -3 -1 -85 78 2 899 1446 4 MP
PP
0 sg
0 86 -77 -3 -1 -85 78 2 899 1446 5 MP stroke
c59
-75 -4 -2 -85 77 3 899 1360 4 MP
PP
0 sg
0 86 -75 -4 -2 -85 77 3 899 1360 5 MP stroke
c61
-73 -7 -2 -82 75 4 899 1274 4 MP
PP
0 sg
0 85 -73 -7 -2 -82 75 4 899 1274 5 MP stroke
c35
-83 0 -4 -85 85 0 984 1874 4 MP
PP
0 sg
2 85 -83 0 -4 -85 85 0 984 1874 5 MP stroke
c64
-82 -1 -2 -85 83 0 982 1789 4 MP
PP
0 sg
1 86 -82 -1 -2 -85 83 0 982 1789 5 MP stroke
c65
-81 -1 -3 -85 82 1 981 1703 4 MP
PP
0 sg
2 85 -81 -1 -3 -85 82 1 981 1703 5 MP stroke
c65
-80 -1 -2 -85 81 1 979 1618 4 MP
PP
0 sg
1 85 -80 -1 -2 -85 81 1 979 1618 5 MP stroke
c9
-79 -1 -2 -85 80 1 978 1533 4 MP
PP
0 sg
1 85 -79 -1 -2 -85 80 1 978 1533 5 MP stroke
c10
-77 -2 -3 -84 79 1 977 1448 4 MP
PP
0 sg
1 85 -77 -2 -3 -84 79 1 977 1448 5 MP stroke
c59
-76 -3 -3 -84 77 2 976 1363 4 MP
PP
0 sg
2 85 -76 -3 -3 -84 77 2 976 1363 5 MP stroke
c61
-74 -4 -4 -81 76 3 974 1278 4 MP
PP
0 sg
2 82 -74 -4 -4 -81 76 3 974 1278 5 MP stroke
c35
-83 0 -5 -85 84 0 1069 1874 4 MP
PP
0 sg
4 85 -83 0 -5 -85 84 0 1069 1874 5 MP stroke
c64
-81 -1 -4 -84 83 0 1065 1789 4 MP
PP
0 sg
2 85 -81 -1 -4 -84 83 0 1065 1789 5 MP stroke
c65
-81 -1 -3 -85 81 1 1063 1704 4 MP
PP
0 sg
3 85 -81 -1 -3 -85 81 1 1063 1704 5 MP stroke
c65
-80 -1 -3 -85 81 1 1060 1619 4 MP
PP
0 sg
2 85 -80 -1 -3 -85 81 1 1060 1619 5 MP stroke
c9
-79 -2 -3 -84 80 1 1058 1534 4 MP
PP
0 sg
2 85 -79 -2 -3 -84 80 1 1058 1534 5 MP stroke
c9
-78 -1 -4 -85 79 2 1056 1449 4 MP
PP
0 sg
3 84 -78 -1 -4 -85 79 2 1056 1449 5 MP stroke
c10
-77 -2 -4 -83 78 1 1053 1365 4 MP
PP
0 sg
3 84 -77 -2 -4 -83 78 1 1053 1365 5 MP stroke
c60
-75 0 -6 -83 77 2 1050 1281 4 MP
PP
0 sg
4 81 -75 0 -6 -83 77 2 1050 1281 5 MP stroke
c64
-82 -1 -8 -84 85 0 1153 1874 4 MP
PP
0 sg
5 85 -82 -1 -8 -84 85 0 1153 1874 5 MP stroke
c65
-81 0 -5 -85 82 1 1148 1789 4 MP
PP
0 sg
4 84 -81 0 -5 -85 82 1 1148 1789 5 MP stroke
c65
-80 0 -4 -85 81 0 1144 1705 4 MP
PP
0 sg
3 85 -80 0 -4 -85 81 0 1144 1705 5 MP stroke
c65
-79 -1 -4 -84 80 0 1141 1620 4 MP
PP
0 sg
3 85 -79 -1 -4 -84 80 0 1141 1620 5 MP stroke
c65
-79 -1 -3 -84 79 1 1138 1535 4 MP
PP
0 sg
3 84 -79 -1 -3 -84 79 1 1138 1535 5 MP stroke
c9
-80 -1 -3 -85 79 1 1135 1451 4 MP
PP
0 sg
4 85 -80 -1 -3 -85 79 1 1135 1451 5 MP stroke
c9
-79 0 -5 -84 80 1 1131 1366 4 MP
PP
0 sg
4 83 -79 0 -5 -84 80 1 1131 1366 5 MP stroke
c9
-78 0 -7 -83 79 0 1127 1283 4 MP
PP
0 sg
6 83 -78 0 -7 -83 79 0 1127 1283 5 MP stroke
c30
44 16 -22 35 -23 -19 2199 1091 4 MP
PP
0 sg
1 -32 44 16 -22 35 -23 -19 2199 1091 5 MP stroke
c28
-9 20 -6 -14 1 -14 2205 1026 4 MP
PP
0 sg
14 8 -9 20 -6 -14 1 -14 2205 1026 5 MP stroke
c42
26 11 -12 15 -15 -2 2255 1014 4 MP
PP
0 sg
1 -24 26 11 -12 15 -15 -2 2255 1014 5 MP stroke
c21
43 -27 30 50 -49 13 1887 1052 4 MP
PP
0 sg
-24 -36 43 -27 30 50 -49 13 1887 1052 5 MP stroke
c31
-25 13 -33 -14 34 -35 1911 1088 4 MP
PP
0 sg
24 36 -25 13 -33 -14 34 -35 1911 1088 5 MP stroke
gr

1689  453 mt 
(Stability: 1/CFL ) s
%%IncludeResource: font Symbol
/Symbol /ISOLatin1Encoding 120 FMSR

2529  453 mt 
(\265) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

2614  453 mt 
( local ) s
%%IncludeResource: font Symbol
/Symbol /ISOLatin1Encoding 120 FMSR

2927  453 mt 
(D) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

3000  453 mt 
(t) s
1 sg
0 1783 257 0 0 -1783 3990 2172 4 MP
PP
-257 0 0 1783 257 0 0 -1783 3990 2172 5 MP stroke
gs 3990 389 258 1784 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    00ffff 04faff 08f6ff 0cf2ff 10eeff 14eaff 18e6ff 1ce2ff 20deff 24daff 
    28d6ff 2cd2ff 30ceff 34caff 38c6ff 3cc2ff 40beff 44baff 48b6ff 4cb2ff 
    50aeff 55aaff 59a5ff 5da1ff 619dff 6599ff 6995ff 6d91ff 718dff 7589ff 
    7985ff 7d81ff 817dff 8579ff 8975ff 8d71ff 916dff 9569ff 9965ff 9d61ff 
    a15dff a559ff aa55ff ae50ff b24cff b648ff ba44ff be40ff c23cff c638ff 
    ca34ff ce30ff d22cff d628ff da24ff de20ff e21cff e618ff ea14ff ee10ff 
    f20cff f608ff fa04ff ff00ff 
  >
] setcolorspace } bdef mwscm
gs np 3990 389 mt 0 1783 rl 257 0 rl 0 -1783 rl cp c np
[257 0 0 1783 3990 389] cc
<< % Image dictionary
  /ImageType 1
  /Width 1 /Height 64
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [1.000000 0 0 64.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
5<h=p4?GSa3&``Q1c$mA0J>%1/1W2!-mp>f,U4KV+<MXF*#fe6(`*r&'GD)k&.]6[$k!CK#R:P;"9S]+
!.Y
~>
gr
gr

4 w
DO
SO
6 w
0 sg
3990 2172 mt 4247 2172 L
3990  389 mt 4247  389 L
3990 2172 mt 3990  389 L
4247 2172 mt 4247  389 L
3990 2172 mt 4247 2172 L
4247 2172 mt 4247  389 L
4247 1915 mt 4229 1915 L
3990 1915 mt 4007 1915 L
4281 1959 mt 
(10) s
4247 1594 mt 4229 1594 L
3990 1594 mt 4007 1594 L
4281 1638 mt 
(20) s
4247 1274 mt 4229 1274 L
3990 1274 mt 4007 1274 L
4281 1318 mt 
(30) s
4247  953 mt 4229  953 L
3990  953 mt 4007  953 L
4281  997 mt 
(40) s
4247  632 mt 4229  632 L
3990  632 mt 4007  632 L
4281  676 mt 
(50) s
3990 2172 mt 4247 2172 L
3990  389 mt 4247  389 L
3990 2172 mt 3990  389 L
4247 2172 mt 4247  389 L
1 sg
0 1448 2921 0 0 -1448 899 4447 4 MP
PP
-2921 0 0 1448 2921 0 0 -1448 899 4447 5 MP stroke
4 w
DO
SO
6 w
0 sg
 899 4447 mt 3820 4447 L
 899 2999 mt 3820 2999 L
 899 4447 mt  899 2999 L
3820 4447 mt 3820 2999 L
 899 4447 mt 3820 4447 L
 899 4447 mt  899 2999 L
1214 4447 mt 1214 4418 L
1214 2999 mt 1214 3028 L
1011 4593 mt 
(-2000) s
1671 4447 mt 1671 4418 L
1671 2999 mt 1671 3028 L
1638 4593 mt 
(0) s
2128 4447 mt 2128 4418 L
2128 2999 mt 2128 3028 L
1995 4593 mt 
(2000) s
2585 4447 mt 2585 4418 L
2585 2999 mt 2585 3028 L
2452 4593 mt 
(4000) s
3042 4447 mt 3042 4418 L
3042 2999 mt 3042 3028 L
2909 4593 mt 
(6000) s
3499 4447 mt 3499 4418 L
3499 2999 mt 3499 3028 L
3366 4593 mt 
(8000) s
 899 4317 mt  928 4317 L
3820 4317 mt 3790 4317 L
 528 4361 mt 
(-3000) s
 899 4089 mt  928 4089 L
3820 4089 mt 3790 4089 L
 528 4133 mt 
(-2000) s
 899 3860 mt  928 3860 L
3820 3860 mt 3790 3860 L
 528 3904 mt 
(-1000) s
 899 3632 mt  928 3632 L
3820 3632 mt 3790 3632 L
 798 3676 mt 
(0) s
 899 3403 mt  928 3403 L
3820 3403 mt 3790 3403 L
 598 3447 mt 
(1000) s
 899 3175 mt  928 3175 L
3820 3175 mt 3790 3175 L
 598 3219 mt 
(2000) s
 899 4447 mt 3820 4447 L
 899 2999 mt 3820 2999 L
 899 4447 mt  899 2999 L
3820 4447 mt 3820 2999 L
gs 899 2999 2922 1449 rc
c27
-5 -78 82 -3 11 93 1188 3550 4 MP
PP
0 sg
-88 -12 -5 -78 82 -3 11 93 1188 3550 5 MP stroke
c27
92 -6 6 89 -77 1 1435 3550 4 MP
PP
0 sg
-21 -84 92 -6 6 89 -77 1 1435 3550 5 MP stroke
c48
-29 -28 2 -47 76 25 1456 3634 4 MP
PP
0 sg
-49 50 -29 -28 2 -47 76 25 1456 3634 5 MP stroke
c45
45 5 -9 43 -37 -10 1323 3411 4 MP
PP
0 sg
1 -38 45 5 -9 43 -37 -10 1323 3411 5 MP stroke
c26
-2 47 -32 21 -39 -58 1605 3649 4 MP
PP
0 sg
73 -10 -2 47 -32 21 -39 -58 1605 3649 5 MP stroke
/c69 { 0.047619 0.952381 1.000000 sr} bdef
c69
-82 11 -6 -89 83 0 1281 3640 4 MP
PP
0 sg
5 78 -82 11 -6 -89 83 0 1281 3640 5 MP stroke
c51
76 17 -30 47 -40 0 1675 3602 4 MP
PP
0 sg
-6 -64 76 17 -30 47 -40 0 1675 3602 5 MP stroke
c45
-40 0 -9 -36 43 -8 1328 3493 4 MP
PP
0 sg
6 44 -40 0 -9 -36 43 -8 1328 3493 5 MP stroke
c39
-56 -19 12 -51 58 19 1157 3464 4 MP
PP
0 sg
-14 51 -56 -19 12 -51 58 19 1157 3464 5 MP stroke
c17
38 1 3 30 -31 -9 1387 3396 4 MP
PP
0 sg
-10 -22 38 1 3 30 -31 -9 1387 3396 5 MP stroke
c44
11 -40 42 14 -24 40 1268 3347 4 MP
PP
0 sg
-29 -14 11 -40 42 14 -24 40 1268 3347 5 MP stroke
c38
-30 -12 24 -40 53 20 1191 3367 4 MP
PP
0 sg
-47 32 -30 -12 24 -40 53 20 1191 3367 5 MP stroke
c29
-6 -44 54 -3 -3 52 1277 3444 4 MP
PP
0 sg
-45 -5 -6 -44 54 -3 -3 52 1277 3444 5 MP stroke
c49
24 -10 10 22 -31 -7 1418 3403 4 MP
PP
0 sg
-3 -5 24 -10 10 22 -31 -7 1418 3403 5 MP stroke
c42
3 -52 59 13 -12 51 1227 3432 4 MP
PP
0 sg
-50 -12 3 -52 59 13 -12 51 1227 3432 5 MP stroke
c47
-42 -14 9 -43 50 12 1227 3432 4 MP
PP
0 sg
-17 45 -42 -14 9 -43 50 12 1227 3432 5 MP stroke
c41
-23 45 -42 -13 18 -39 1482 3557 4 MP
PP
0 sg
47 7 -23 45 -42 -13 18 -39 1482 3557 5 MP stroke
c69
49 -50 21 84 -47 -7 1482 3557 4 MP
PP
0 sg
-23 -27 49 -50 21 84 -47 -7 1482 3557 5 MP stroke
c24
69 -4 6 64 -58 7 1733 3595 4 MP
PP
0 sg
-17 -67 69 -4 6 64 -58 7 1733 3595 5 MP stroke
c51
-35 -9 -3 -4 35 8 1421 3408 4 MP
PP
0 sg
3 5 -35 -9 -3 -4 35 8 1421 3408 5 MP stroke
c69
-67 25 -25 -82 75 -10 1750 3662 4 MP
PP
0 sg
17 67 -67 25 -25 -82 75 -10 1750 3662 5 MP stroke
c45
34 10 3 3 -35 -8 1456 3416 4 MP
PP
0 sg
-2 -5 34 10 3 3 -35 -8 1456 3416 5 MP stroke
c13
10 5 0 27 -34 -12 1492 3433 4 MP
PP
0 sg
24 -20 10 5 0 27 -34 -12 1492 3433 5 MP stroke
c44
-35 -8 -1 -9 34 12 1458 3421 4 MP
PP
0 sg
2 5 -35 -8 -1 -9 34 12 1458 3421 5 MP stroke
c51
35 8 3 4 -36 -2 1489 3414 4 MP
PP
0 sg
-2 -10 35 8 3 4 -36 -2 1489 3414 5 MP stroke
c44
-35 -8 1 -16 33 15 1492 3433 4 MP
PP
0 sg
1 9 -35 -8 1 -16 33 15 1492 3433 5 MP stroke
c47
23 27 -18 39 -38 -35 1538 3553 4 MP
PP
0 sg
33 -31 23 27 -18 39 -38 -35 1538 3553 5 MP stroke
c44
-35 -8 3 -23 33 15 1525 3448 4 MP
PP
0 sg
-1 16 -35 -8 3 -23 33 15 1525 3448 5 MP stroke
c18
-20 18 -10 -5 0 -21 1468 3474 4 MP
PP
0 sg
30 8 -20 18 -10 -5 0 -21 1468 3474 5 MP stroke
c44
-35 -6 6 -35 32 18 1558 3463 4 MP
PP
0 sg
-3 23 -35 -6 6 -35 32 18 1558 3463 5 MP stroke
c51
-35 -1 -2 -17 35 8 1491 3424 4 MP
PP
0 sg
2 10 -35 -1 -2 -17 35 8 1491 3424 5 MP stroke
c45
30 27 -22 28 -32 -18 1590 3481 4 MP
PP
0 sg
24 -37 30 27 -22 28 -32 -18 1590 3481 5 MP stroke
c38
-35 -4 8 -44 33 13 1590 3481 4 MP
PP
0 sg
-6 35 -35 -4 8 -44 33 13 1590 3481 5 MP stroke
c39
-47 -36 47 -37 28 38 1538 3553 4 MP
PP
0 sg
-28 35 -47 -36 47 -37 28 38 1538 3553 5 MP stroke
c39
-33 -13 10 -60 47 36 1566 3518 4 MP
PP
0 sg
-24 37 -33 -13 10 -60 47 36 1566 3518 5 MP stroke
c38
22 48 -56 7 -6 -55 1675 3602 4 MP
PP
0 sg
40 0 22 48 -56 7 -6 -55 1675 3602 5 MP stroke
c51
-36 -1 -1 -24 35 8 1526 3432 4 MP
PP
0 sg
2 17 -36 -1 -1 -24 35 8 1526 3432 5 MP stroke
c51
-36 -1 0 -29 35 6 1561 3440 4 MP
PP
0 sg
1 24 -36 -1 0 -29 35 6 1561 3440 5 MP stroke
c24
-30 -50 68 -12 -9 43 1809 3527 4 MP
PP
0 sg
-29 19 -30 -50 68 -12 -9 43 1809 3527 5 MP stroke
c39
8 -47 36 4 -8 44 1631 3450 4 MP
PP
0 sg
-36 -1 8 -47 36 4 -8 44 1631 3450 5 MP stroke
c41
45 -7 10 49 -36 4 1695 3494 4 MP
PP
0 sg
-19 -46 45 -7 10 49 -36 4 1695 3494 5 MP stroke
c51
-35 -2 0 -31 35 4 1596 3446 4 MP
PP
0 sg
0 29 -35 -2 0 -31 35 4 1596 3446 5 MP stroke
c39
7 -45 36 -4 -8 47 1667 3451 4 MP
PP
0 sg
-35 2 7 -45 36 -4 -8 47 1667 3451 5 MP stroke
c39
58 -7 6 55 -45 7 1714 3540 4 MP
PP
0 sg
-19 -55 58 -7 6 55 -45 7 1714 3540 5 MP stroke
c51
-36 -2 0 -30 36 1 1631 3450 4 MP
PP
0 sg
0 31 -36 -2 0 -30 36 1 1631 3450 5 MP stroke
c38
8 -41 35 -9 -7 45 1702 3449 4 MP
PP
0 sg
-36 5 8 -41 35 -9 -7 45 1702 3449 5 MP stroke
c28
-33 18 -21 -20 9 -43 1800 3570 4 MP
PP
0 sg
45 45 -33 18 -21 -20 9 -43 1800 3570 5 MP stroke
c51
1 -26 35 -2 0 30 1667 3421 4 MP
PP
0 sg
-36 -2 1 -26 35 -2 0 30 1667 3421 5 MP stroke
c47
7 -38 36 -7 -8 41 1738 3444 4 MP
PP
0 sg
-35 4 7 -38 36 -7 -8 41 1738 3444 5 MP stroke
c23
-16 15 -10 -20 12 -15 2228 3470 4 MP
PP
0 sg
14 20 -16 15 -10 -20 12 -15 2228 3470 5 MP stroke
c45
24 -18 3 46 -26 -11 2254 3481 4 MP
PP
0 sg
-1 -17 24 -18 3 46 -26 -11 2254 3481 5 MP stroke
c27
93 -7 11 68 -56 15 2312 3607 4 MP
PP
0 sg
-48 -76 93 -7 11 68 -56 15 2312 3607 5 MP stroke
c44
-22 -29 33 -18 25 40 1730 3485 4 MP
PP
0 sg
-36 7 -22 -29 33 -18 25 40 1730 3485 5 MP stroke
c51
0 -20 36 -5 -1 26 1703 3423 4 MP
PP
0 sg
-35 -1 0 -20 36 -5 -1 26 1703 3423 5 MP stroke
c15
7 -33 36 -6 -7 38 1773 3440 4 MP
PP
0 sg
-36 1 7 -33 36 -6 -7 38 1773 3440 5 MP stroke
c24
-43 -55 48 -24 29 49 2283 3558 4 MP
PP
0 sg
-34 30 -43 -55 48 -24 29 49 2283 3558 5 MP stroke
c36
31 15 5 21 -35 6 1837 3466 4 MP
PP
0 sg
-1 -42 31 15 5 21 -35 6 1837 3466 5 MP stroke
c8
-48 -5 -27 -74 112 9 1917 3626 4 MP
PP
0 sg
-37 70 -48 -5 -27 -74 112 9 1917 3626 5 MP stroke
c13
15 -8 12 26 -36 2 2200 3441 4 MP
PP
0 sg
9 -20 15 -8 12 26 -36 2 2200 3441 5 MP stroke
c51
1 -14 35 -4 0 20 1738 3424 4 MP
PP
0 sg
-36 -2 1 -14 35 -4 0 20 1738 3424 5 MP stroke
c55
-14 -8 11 -21 18 21 2176 3469 4 MP
PP
0 sg
-15 8 -14 -8 11 -21 18 21 2176 3469 5 MP stroke
c27
48 76 -48 24 -50 -42 2410 3625 4 MP
PP
0 sg
50 -58 48 76 -48 24 -50 -42 2410 3625 5 MP stroke
c24
8 -51 60 32 -24 28 2434 3597 4 MP
PP
0 sg
-44 -9 8 -51 60 32 -24 28 2434 3597 5 MP stroke
c51
1 -12 36 -1 -1 14 1774 3426 4 MP
PP
0 sg
-36 -1 1 -12 36 -1 -1 14 1774 3426 5 MP stroke
c45
-7 33 -36 1 8 -28 1837 3466 4 MP
PP
0 sg
35 -6 -7 33 -36 1 8 -28 1837 3466 5 MP stroke
c51
1 -10 36 -1 -1 12 1810 3427 4 MP
PP
0 sg
-36 -1 1 -10 36 -1 -1 12 1810 3427 5 MP stroke
c15
-8 28 -35 0 7 -21 1873 3459 4 MP
PP
0 sg
36 -7 -8 28 -35 0 7 -21 1873 3459 5 MP stroke
c17
25 -13 14 36 -37 2 1910 3457 4 MP
PP
0 sg
-2 -25 25 -13 14 36 -37 2 1910 3457 5 MP stroke
c51
-1 10 -35 -1 1 -9 1880 3438 4 MP
PP
0 sg
35 0 -1 10 -35 -1 1 -9 1880 3438 5 MP stroke
c27
16 -68 89 34 -48 62 2077 3573 4 MP
PP
0 sg
-57 -28 16 -68 89 34 -48 62 2077 3573 5 MP stroke
c51
-61 -18 3 -65 74 15 2118 3669 4 MP
PP
0 sg
-16 68 -61 -18 3 -65 74 15 2118 3669 5 MP stroke
c44
6 -19 37 -2 -7 21 1880 3438 4 MP
PP
0 sg
-36 0 6 -19 37 -2 -7 21 1880 3438 5 MP stroke
c24
-41 17 -50 -41 48 -31 2360 3583 4 MP
PP
0 sg
43 55 -41 17 -50 -41 48 -31 2360 3583 5 MP stroke
c51
-1 9 -36 -1 1 -8 1916 3438 4 MP
PP
0 sg
36 0 -1 9 -36 -1 1 -8 1916 3438 5 MP stroke
c16
1 -40 33 14 2 25 1910 3457 4 MP
PP
0 sg
-36 1 1 -40 33 14 2 25 1910 3457 5 MP stroke
c12
29 -19 21 20 -19 14 1807 3493 4 MP
PP
0 sg
-31 -15 29 -19 21 20 -19 14 1807 3493 5 MP stroke
c44
5 -17 36 -1 -6 19 1916 3438 4 MP
PP
0 sg
-35 -1 5 -17 36 -1 -6 19 1916 3438 5 MP stroke
c45
-11 21 -23 -1 -3 -46 2231 3516 4 MP
PP
0 sg
37 26 -11 21 -23 -1 -3 -46 2231 3516 5 MP stroke
c51
-1 8 -36 -1 2 -8 1951 3439 4 MP
PP
0 sg
35 1 -1 8 -36 -1 2 -8 1951 3439 5 MP stroke
c15
48 5 -11 31 -28 6 1993 3519 4 MP
PP
0 sg
-9 -42 48 5 -11 31 -28 6 1993 3519 5 MP stroke
c17
6 -21 36 14 -24 18 2255 3498 4 MP
PP
0 sg
-18 -11 6 -21 36 14 -24 18 2255 3498 5 MP stroke
c28
50 42 -48 31 -26 -45 2434 3597 4 MP
PP
0 sg
24 -28 50 42 -48 31 -26 -45 2434 3597 5 MP stroke
c44
5 -14 36 -2 -5 17 1951 3439 4 MP
PP
0 sg
-36 -1 5 -14 36 -2 -5 17 1951 3439 5 MP stroke
c51
-2 8 -35 -3 1 -6 1987 3440 4 MP
PP
0 sg
36 1 -2 8 -35 -3 1 -6 1987 3440 5 MP stroke
c15
9 42 -45 16 -3 -47 2041 3550 4 MP
PP
0 sg
39 -11 9 42 -45 16 -3 -47 2041 3550 5 MP stroke
c44
5 -10 36 -2 -5 14 1987 3440 4 MP
PP
0 sg
-36 -2 5 -10 36 -2 -5 14 1987 3440 5 MP stroke
c51
-1 6 -36 -3 1 -5 2023 3442 4 MP
PP
0 sg
36 2 -1 6 -36 -3 1 -5 2023 3442 5 MP stroke
c51
-61 -3 -11 -68 75 6 2192 3684 4 MP
PP
0 sg
-3 65 -61 -3 -11 -68 75 6 2192 3684 5 MP stroke
c11
-7 -31 26 -5 13 25 1371 3485 4 MP
PP
0 sg
-32 11 -7 -31 26 -5 13 25 1371 3485 5 MP stroke
c48
-54 3 -30 -58 82 -11 1276 3562 4 MP
PP
0 sg
2 66 -54 3 -30 -58 82 -11 1276 3562 5 MP stroke
c45
-1 40 -36 2 -6 -31 1988 3485 4 MP
PP
0 sg
43 -11 -1 40 -36 2 -6 -31 1988 3485 5 MP stroke
c51
-1 5 -36 -2 2 -5 2058 3444 4 MP
PP
0 sg
35 2 -1 5 -36 -2 2 -5 2058 3444 5 MP stroke
c44
3 -6 37 -2 -5 10 2023 3442 4 MP
PP
0 sg
-35 -2 3 -6 37 -2 -5 10 2023 3442 5 MP stroke
c30
-18 -21 18 -25 28 31 2148 3484 4 MP
PP
0 sg
-28 15 -18 -21 18 -25 28 31 2148 3484 5 MP stroke
c45
32 -18 23 19 -18 25 2194 3490 4 MP
PP
0 sg
-37 -26 32 -18 23 19 -18 25 2194 3490 5 MP stroke
c42
22 -35 50 38 -44 28 2148 3484 4 MP
PP
0 sg
-28 -31 22 -35 50 38 -44 28 2148 3484 5 MP stroke
c44
3 -4 36 -2 -3 6 2058 3444 4 MP
PP
0 sg
-36 0 3 -4 36 -2 -3 6 2058 3444 5 MP stroke
c29
-12 -53 45 3 -1 32 2199 3534 4 MP
PP
0 sg
-32 18 -12 -53 45 3 -1 32 2199 3534 5 MP stroke
c51
36 0 -2 5 -35 0 2095 3439 4 MP
PP
0 sg
1 -5 36 0 -2 5 -35 0 2095 3439 5 MP stroke
c28
57 28 -27 61 -50 -38 2154 3550 4 MP
PP
0 sg
20 -51 57 28 -27 61 -50 -38 2154 3550 5 MP stroke
c15
-24 8 -26 -26 45 -16 1993 3519 4 MP
PP
0 sg
5 34 -24 8 -26 -26 45 -16 1993 3519 5 MP stroke
c51
-36 0 1 -4 36 -1 2094 3444 4 MP
PP
0 sg
-1 5 -36 0 1 -4 36 -1 2094 3444 5 MP stroke
c28
-17 53 -36 2 -13 -64 2104 3512 4 MP
PP
0 sg
66 9 -17 53 -36 2 -13 -64 2104 3512 5 MP stroke
c31
-28 0 -4 -44 42 13 1458 3505 4 MP
PP
0 sg
-10 31 -28 0 -4 -44 42 13 1458 3505 5 MP stroke
c45
-18 -20 36 -27 4 44 1496 3474 4 MP
PP
0 sg
-22 3 -18 -20 36 -27 4 44 1496 3474 5 MP stroke
c44
3 -3 36 -2 -3 4 2094 3444 4 MP
PP
0 sg
-36 1 3 -3 36 -2 -3 4 2094 3444 5 MP stroke
c13
-6 -28 32 -11 9 36 1362 3449 4 MP
PP
0 sg
-35 3 -6 -28 32 -11 9 36 1362 3449 5 MP stroke
c44
1 -2 37 -3 -3 3 2130 3443 4 MP
PP
0 sg
-35 2 1 -2 37 -3 -3 3 2130 3443 5 MP stroke
c51
2 -4 35 -2 -1 4 2131 3439 4 MP
PP
0 sg
-36 2 2 -4 35 -2 -1 4 2131 3439 5 MP stroke
c36
-11 40 -28 -16 2 -34 1323 3411 4 MP
PP
0 sg
37 10 -11 40 -28 -16 2 -34 1323 3411 5 MP stroke
c16
40 0 -1 38 -36 -6 1359 3417 4 MP
PP
0 sg
-3 -32 40 0 -1 38 -36 -6 1359 3417 5 MP stroke
c13
36 6 -2 34 -31 -10 1356 3387 4 MP
PP
0 sg
-3 -30 36 6 -2 34 -31 -10 1356 3387 5 MP stroke
c44
1 -3 36 -2 -1 2 2165 3441 4 MP
PP
0 sg
-36 3 1 -3 36 -2 -1 2 2165 3441 5 MP stroke
c51
2 -3 36 -3 -2 4 2167 3437 4 MP
PP
0 sg
-36 2 2 -3 36 -3 -2 4 2167 3437 5 MP stroke
c44
-33 31 -28 -38 32 -21 1534 3612 4 MP
PP
0 sg
29 28 -33 31 -28 -38 32 -21 1534 3612 5 MP stroke
c23
23 1 -1 14 -8 5 2214 3450 4 MP
PP
0 sg
-14 -20 23 1 -1 14 -8 5 2214 3450 5 MP stroke
c47
-23 -9 23 -45 25 45 1410 3505 4 MP
PP
0 sg
-25 9 -23 -9 23 -45 25 45 1410 3505 5 MP stroke
c28
-13 -25 26 -41 30 58 1328 3493 4 MP
PP
0 sg
-43 8 -13 -25 26 -41 30 58 1328 3493 5 MP stroke
c55
0 28 -23 -6 -4 -15 1424 3439 4 MP
PP
0 sg
27 -7 0 28 -23 -6 -4 -15 1424 3439 5 MP stroke
c22
14 27 -34 18 0 -27 1458 3448 4 MP
PP
0 sg
20 -18 14 27 -34 18 0 -27 1458 3448 5 MP stroke
c40
16 -15 13 12 -2 3 2203 3435 4 MP
PP
0 sg
-27 0 16 -15 13 12 -2 3 2203 3435 5 MP stroke
c17
3 32 -38 -1 0 -28 1397 3446 4 MP
PP
0 sg
35 -3 3 32 -38 -1 0 -28 1397 3446 5 MP stroke
c49
-3 30 -30 -8 10 -31 1458 3505 4 MP
PP
0 sg
23 9 -3 30 -30 -8 10 -31 1458 3505 5 MP stroke
c30
-24 20 -4 -41 28 0 1468 3474 4 MP
PP
0 sg
0 21 -24 20 -4 -41 28 0 1468 3474 5 MP stroke
c19
-50 58 -60 -32 14 -60 2456 3717 4 MP
PP
0 sg
96 34 -50 58 -60 -32 14 -60 2456 3717 5 MP stroke
c24
-2 -47 44 9 26 45 2408 3552 4 MP
PP
0 sg
-68 -7 -2 -47 44 9 26 45 2408 3552 5 MP stroke
c31
-27 2 -23 -36 29 -4 2331 3473 4 MP
PP
0 sg
21 38 -27 2 -23 -36 29 -4 2331 3473 5 MP stroke
c28
-19 15 -33 -9 2 -47 2408 3552 4 MP
PP
0 sg
50 41 -19 15 -33 -9 2 -47 2408 3552 5 MP stroke
c13
6 -25 24 -8 6 31 1982 3454 4 MP
PP
0 sg
-36 2 6 -25 24 -8 6 31 1982 3454 5 MP stroke
c41
44 19 -3 28 -27 2 2303 3479 4 MP
PP
0 sg
-14 -49 44 19 -3 28 -27 2 2303 3479 5 MP stroke
c24
-27 4 -52 -43 50 2 2393 3467 4 MP
PP
0 sg
29 37 -27 4 -52 -43 50 2 2393 3467 5 MP stroke
c41
41 -17 14 49 -28 6 2331 3473 4 MP
PP
0 sg
-27 -38 41 -17 14 49 -28 6 2331 3473 5 MP stroke
c48
27 74 -39 11 -36 -23 2077 3573 4 MP
PP
0 sg
48 -62 27 74 -39 11 -36 -23 2077 3573 5 MP stroke
c42
-45 -3 -13 -53 61 3 2195 3619 4 MP
PP
0 sg
-3 53 -45 -3 -13 -53 61 3 2195 3619 5 MP stroke
c28
-36 2 -21 -38 44 -28 2104 3512 4 MP
PP
0 sg
13 64 -36 2 -21 -38 44 -28 2104 3512 5 MP stroke
c40
10 20 -27 0 2 -22 2255 3457 4 MP
PP
0 sg
15 2 10 20 -27 0 2 -22 2255 3457 5 MP stroke
c53
22 0 -1 24 -16 -4 2271 3461 4 MP
PP
0 sg
-5 -20 22 0 -1 24 -16 -4 2271 3461 5 MP stroke
c38
56 -15 13 53 -40 11 2283 3558 4 MP
PP
0 sg
-29 -49 56 -15 13 53 -40 11 2283 3558 5 MP stroke
c20
-22 0 3 -28 18 11 2255 3498 4 MP
PP
0 sg
1 17 -22 0 3 -28 18 11 2255 3498 5 MP stroke
c15
-44 -19 34 -30 16 28 2267 3530 4 MP
PP
0 sg
-6 21 -44 -19 34 -30 16 28 2267 3530 5 MP stroke
c68
6 14 -1 3 -13 -12 2214 3450 4 MP
PP
0 sg
8 -5 6 14 -1 3 -13 -12 2214 3450 5 MP stroke
c24
68 7 -2 47 -54 -8 2464 3513 4 MP
PP
0 sg
-12 -46 68 7 -2 47 -54 -8 2464 3513 5 MP stroke
c15
-27 3 -29 -37 33 -2 2360 3469 4 MP
PP
0 sg
23 36 -27 3 -29 -37 33 -2 2360 3469 5 MP stroke
c29
-50 -2 -21 -44 54 8 2410 3505 4 MP
PP
0 sg
17 38 -50 -2 -21 -44 54 8 2410 3505 5 MP stroke
c15
28 -6 20 43 -27 1 2310 3435 4 MP
PP
0 sg
-21 -38 28 -6 20 43 -27 1 2310 3435 5 MP stroke
c44
-29 4 -17 -27 19 -15 2358 3511 4 MP
PP
0 sg
27 38 -29 4 -17 -27 19 -15 2358 3511 5 MP stroke
c30
33 9 17 27 -33 2 2393 3467 4 MP
PP
0 sg
-17 -38 33 9 17 27 -33 2 2393 3467 5 MP stroke
c55
16 4 -2 22 -26 -1 2283 3436 4 MP
PP
0 sg
12 -25 16 4 -2 22 -26 -1 2283 3436 5 MP stroke
c15
-12 25 -20 -43 27 -2 2276 3481 4 MP
PP
0 sg
5 20 -12 25 -20 -43 27 -2 2276 3481 5 MP stroke
c31
-37 3 -12 -26 28 -15 2148 3484 4 MP
PP
0 sg
21 38 -37 3 -12 -26 28 -15 2148 3484 5 MP stroke
c29
40 -11 12 53 -36 -14 2267 3530 4 MP
PP
0 sg
-16 -28 40 -11 12 53 -36 -14 2267 3530 5 MP stroke
c28
-44 -16 3 -53 61 18 2134 3601 4 MP
PP
0 sg
-20 51 -44 -16 3 -53 61 18 2134 3601 5 MP stroke
c29
-6 25 -37 2 17 -53 2038 3503 4 MP
PP
0 sg
26 26 -6 25 -37 2 17 -53 2038 3503 5 MP stroke
c28
-66 -9 27 -61 36 23 2041 3550 4 MP
PP
0 sg
3 47 -66 -9 27 -61 36 23 2041 3550 5 MP stroke
c69
-43 -25 37 -70 49 68 1868 3558 4 MP
PP
0 sg
-43 27 -43 -25 37 -70 49 68 1868 3558 5 MP stroke
c45
20 29 -43 11 -5 -34 1993 3519 4 MP
PP
0 sg
28 -6 20 29 -43 11 -5 -34 1993 3519 5 MP stroke
c41
-20 -29 11 -31 43 25 1911 3531 4 MP
PP
0 sg
-34 35 -20 -29 11 -31 43 25 1911 3531 5 MP stroke
c41
49 -13 1 42 -36 7 1873 3459 4 MP
PP
0 sg
-14 -36 49 -13 1 42 -36 7 1873 3459 5 MP stroke
c19
25 82 -68 12 -49 -68 1917 3626 4 MP
PP
0 sg
92 -26 25 82 -68 12 -49 -68 1917 3626 5 MP stroke
c22
19 -14 22 29 -36 6 1802 3472 4 MP
PP
0 sg
-5 -21 19 -14 22 29 -36 6 1802 3472 5 MP stroke
c26
67 -25 19 55 -41 15 1755 3525 4 MP
PP
0 sg
-45 -45 67 -25 19 55 -41 15 1755 3525 5 MP stroke
c15
19 46 -35 9 -25 -40 1755 3525 4 MP
PP
0 sg
41 -15 19 46 -35 9 -25 -40 1755 3525 5 MP stroke
c39
-36 -4 -10 -49 56 -7 1613 3554 4 MP
PP
0 sg
-10 60 -36 -4 -10 -49 56 -7 1613 3554 5 MP stroke
c24
30 -47 39 58 -47 37 1613 3554 4 MP
PP
0 sg
-22 -48 30 -47 39 58 -47 37 1613 3554 5 MP stroke
c47
28 -35 38 35 -36 27 1536 3491 4 MP
PP
0 sg
-30 -27 28 -35 38 35 -36 27 1536 3491 5 MP stroke
c13
-7 23 -33 -15 22 -28 1536 3491 4 MP
PP
0 sg
18 20 -7 23 -33 -15 22 -28 1536 3491 5 MP stroke
c13
7 31 -35 8 3 -30 1435 3496 4 MP
PP
0 sg
25 -9 7 31 -35 8 3 -30 1435 3496 5 MP stroke
c30
22 -3 4 41 -33 -15 1525 3448 4 MP
PP
0 sg
7 -23 22 -3 4 41 -33 -15 1525 3448 5 MP stroke
c22
-4 13 -34 -10 34 -18 1424 3439 4 MP
PP
0 sg
4 15 -4 13 -34 -10 34 -18 1424 3439 5 MP stroke
c13
35 -8 6 28 -27 7 1424 3439 4 MP
PP
0 sg
-14 -27 35 -8 6 28 -27 7 1424 3439 5 MP stroke
c39
-53 -20 17 -45 56 19 1171 3413 4 MP
PP
0 sg
-20 46 -53 -20 17 -45 56 19 1171 3413 5 MP stroke
c40
23 6 -24 10 -3 -3 1424 3411 4 MP
PP
0 sg
4 -13 23 6 -24 10 -3 -3 1424 3411 5 MP stroke
c26
43 48 -12 38 -58 -19 1215 3483 4 MP
PP
0 sg
27 -67 43 48 -12 38 -58 -19 1215 3483 5 MP stroke
c69
-2 -66 88 12 -27 67 1215 3483 4 MP
PP
0 sg
-59 -13 -2 -66 88 12 -27 67 1215 3483 5 MP stroke
c51
-26 41 -26 5 -25 -45 1435 3550 4 MP
PP
0 sg
77 -1 -26 41 -26 5 -25 -45 1435 3550 5 MP stroke
c48
6 -61 79 18 -14 60 2470 3657 4 MP
PP
0 sg
-71 -17 6 -61 79 18 -14 60 2470 3657 5 MP stroke
c26
3 -56 71 17 -8 51 2478 3606 4 MP
PP
0 sg
-66 -12 3 -56 71 17 -8 51 2478 3606 5 MP stroke
c24
-3 -52 66 12 2 47 2476 3559 4 MP
PP
0 sg
-65 -7 -3 -52 66 12 2 47 2476 3559 5 MP stroke
c28
-11 -49 65 7 12 46 2464 3513 4 MP
PP
0 sg
-66 -4 -11 -49 65 7 12 46 2464 3513 5 MP stroke
c28
-21 -48 66 4 21 44 2443 3469 4 MP
PP
0 sg
-66 0 -21 -48 66 4 21 44 2443 3469 5 MP stroke
c27
-27 -43 66 0 52 43 2391 3426 4 MP
PP
0 sg
-91 0 -27 -43 66 0 52 43 2391 3426 5 MP stroke
c48
3 -62 79 11 -6 61 2541 3674 4 MP
PP
0 sg
-76 -10 3 -62 79 11 -6 61 2541 3674 5 MP stroke
c51
0 -58 76 10 -3 56 2544 3618 4 MP
PP
0 sg
-73 -8 0 -58 76 10 -3 56 2544 3618 5 MP stroke
c26
-4 -55 73 8 3 52 2541 3566 4 MP
PP
0 sg
-72 -5 -4 -55 73 8 3 52 2541 3566 5 MP stroke
c26
-9 -52 72 5 11 49 2530 3517 4 MP
PP
0 sg
-74 -2 -9 -52 72 5 11 49 2530 3517 5 MP stroke
c48
-15 -52 74 2 21 48 2509 3469 4 MP
PP
0 sg
-80 2 -15 -52 74 2 21 48 2509 3469 5 MP stroke
c27
-18 -53 80 -2 27 43 2482 3426 4 MP
PP
0 sg
-89 12 -18 -53 80 -2 27 43 2482 3426 5 MP stroke
c48
1 -63 81 7 -3 62 2617 3684 4 MP
PP
0 sg
-79 -6 1 -63 81 7 -3 62 2617 3684 5 MP stroke
c48
-1 -59 79 6 0 58 2617 3626 4 MP
PP
0 sg
-78 -5 -1 -59 79 6 0 58 2617 3626 5 MP stroke
c51
-4 -57 78 5 4 55 2613 3571 4 MP
PP
0 sg
-78 -3 -4 -57 78 5 4 55 2613 3571 5 MP stroke
c48
-8 -55 78 3 9 52 2604 3519 4 MP
PP
0 sg
-79 0 -8 -55 78 3 9 52 2604 3519 5 MP stroke
c69
-10 -53 79 0 15 52 2589 3467 4 MP
PP
0 sg
-84 1 -10 -53 79 0 15 52 2589 3467 5 MP stroke
c27
-11 -62 84 -1 18 53 2571 3414 4 MP
PP
0 sg
-91 10 -11 -62 84 -1 18 53 2571 3414 5 MP stroke
c48
-81 -4 0 -62 82 3 2695 3753 4 MP
PP
0 sg
-1 63 -81 -4 0 -62 82 3 2695 3753 5 MP stroke
c48
-80 -2 -2 -61 81 4 2696 3690 4 MP
PP
0 sg
1 59 -80 -2 -2 -61 81 4 2696 3690 5 MP stroke
c48
-81 0 -3 -59 80 2 2695 3631 4 MP
PP
0 sg
4 57 -81 0 -3 -59 80 2 2695 3631 5 MP stroke
c48
-83 1 -6 -56 81 0 2691 3574 4 MP
PP
0 sg
8 55 -83 1 -6 -56 81 0 2691 3574 5 MP stroke
c69
-86 1 -7 -53 83 -1 2683 3519 4 MP
PP
0 sg
10 53 -86 1 -7 -53 83 -1 2683 3519 5 MP stroke
c27
-88 -20 -9 -41 86 -1 2673 3466 4 MP
PP
0 sg
11 62 -88 -20 -9 -41 86 -1 2673 3466 5 MP stroke
c48
0 -63 83 2 0 62 2777 3694 4 MP
PP
0 sg
-83 -1 0 -63 83 2 0 62 2777 3694 5 MP stroke
c48
-2 -62 83 1 2 61 2775 3633 4 MP
PP
0 sg
-83 0 -2 -62 83 1 2 61 2775 3633 5 MP stroke
c48
-3 -60 83 0 3 59 2772 3574 4 MP
PP
0 sg
-83 1 -3 -60 83 0 3 59 2772 3574 5 MP stroke
c69
-4 -58 83 -1 6 56 2766 3518 4 MP
PP
0 sg
-85 3 -4 -58 83 -1 6 56 2766 3518 5 MP stroke
c69
-6 -55 85 -3 7 53 2759 3465 4 MP
PP
0 sg
-86 5 -6 -55 85 -3 7 53 2759 3465 5 MP stroke
c27
-5 -45 86 -5 9 41 2750 3424 4 MP
PP
0 sg
-90 9 -5 -45 86 -5 9 41 2750 3424 5 MP stroke
c69
-1 -64 85 0 0 63 2860 3695 4 MP
PP
0 sg
-84 1 -1 -64 85 0 0 63 2860 3695 5 MP stroke
c69
-1 -63 84 -1 2 62 2858 3633 4 MP
PP
0 sg
-85 2 -1 -63 84 -1 2 62 2858 3633 5 MP stroke
c69
-3 -62 85 -2 3 60 2855 3573 4 MP
PP
0 sg
-85 4 -3 -62 85 -2 3 60 2855 3573 5 MP stroke
c69
-3 -60 85 -4 4 58 2851 3515 4 MP
PP
0 sg
-86 6 -3 -60 85 -4 4 58 2851 3515 5 MP stroke
c69
-5 -60 86 -6 6 55 2845 3460 4 MP
PP
0 sg
-87 11 -5 -60 86 -6 6 55 2845 3460 5 MP stroke
c27
-6 -61 87 -11 5 45 2840 3415 4 MP
PP
0 sg
-86 27 -6 -61 87 -11 5 45 2840 3415 5 MP stroke
c69
0 -65 85 -2 1 64 2944 3694 4 MP
PP
0 sg
-86 3 0 -65 85 -2 1 64 2944 3694 5 MP stroke
c69
-2 -63 86 -3 1 63 2943 3631 4 MP
PP
0 sg
-85 3 -2 -63 86 -3 1 63 2943 3631 5 MP stroke
c69
-2 -63 85 -3 3 62 2940 3569 4 MP
PP
0 sg
-86 4 -2 -63 85 -3 3 62 2940 3569 5 MP stroke
c69
-3 -63 86 -4 3 60 2937 3509 4 MP
PP
0 sg
-86 7 -3 -63 86 -4 3 60 2937 3509 5 MP stroke
c69
-4 -65 86 -7 5 60 2932 3449 4 MP
PP
0 sg
-87 12 -4 -65 86 -7 5 60 2932 3449 5 MP stroke
c27
-5 -72 87 -12 6 61 2926 3388 4 MP
PP
0 sg
-88 23 -5 -72 87 -12 6 61 2926 3388 5 MP stroke
c69
-1 -65 87 -3 0 65 3030 3691 4 MP
PP
0 sg
-86 3 -1 -65 87 -3 0 65 3030 3691 5 MP stroke
c69
-1 -64 86 -3 2 63 3028 3628 4 MP
PP
0 sg
-87 4 -1 -64 86 -3 2 63 3028 3628 5 MP stroke
c69
-2 -64 87 -4 2 63 3026 3565 4 MP
PP
0 sg
-87 5 -2 -64 87 -4 2 63 3026 3565 5 MP stroke
c69
-2 -63 87 -5 3 63 3023 3502 4 MP
PP
0 sg
-88 5 -2 -63 87 -5 3 63 3023 3502 5 MP stroke
c69
-3 -66 88 -5 4 65 3019 3437 4 MP
PP
0 sg
-89 6 -3 -66 88 -5 4 65 3019 3437 5 MP stroke
c27
-3 -74 89 -6 5 72 3014 3365 4 MP
PP
0 sg
-91 8 -3 -74 89 -6 5 72 3014 3365 5 MP stroke
c69
-87 5 0 -65 86 -5 3117 3753 4 MP
PP
0 sg
1 65 -87 5 0 -65 86 -5 3117 3753 5 MP stroke
c69
-87 5 -1 -64 87 -5 3116 3688 4 MP
PP
0 sg
1 64 -87 5 -1 -64 87 -5 3116 3688 5 MP stroke
c69
-87 5 -2 -64 87 -5 3115 3624 4 MP
PP
0 sg
2 64 -87 5 -2 -64 87 -5 3115 3624 5 MP stroke
c69
-88 5 -1 -63 87 -5 3113 3560 4 MP
PP
0 sg
2 63 -88 5 -1 -63 87 -5 3113 3560 5 MP stroke
c69
-89 2 -2 -63 88 -5 3111 3497 4 MP
PP
0 sg
3 66 -89 2 -2 -63 88 -5 3111 3497 5 MP stroke
c27
-89 -15 -3 -57 89 -2 3108 3431 4 MP
PP
0 sg
3 74 -89 -15 -3 -57 89 -2 3108 3431 5 MP stroke
c69
-1 -66 88 -6 0 65 3203 3683 4 MP
PP
0 sg
-87 7 -1 -66 88 -6 0 65 3203 3683 5 MP stroke
c69
0 -63 87 -7 1 64 3202 3619 4 MP
PP
0 sg
-88 6 0 -63 87 -7 1 64 3202 3619 5 MP stroke
c69
-2 -63 88 -6 2 64 3200 3555 4 MP
PP
0 sg
-88 5 -2 -63 88 -6 2 64 3200 3555 5 MP stroke
c69
-1 -61 88 -5 1 63 3199 3492 4 MP
PP
0 sg
-88 3 -1 -61 88 -5 1 63 3199 3492 5 MP stroke
c69
-2 -61 88 -3 2 63 3197 3429 4 MP
PP
0 sg
-88 1 -2 -61 88 -3 2 63 3197 3429 5 MP stroke
c27
-1 -64 88 -1 3 57 3194 3372 4 MP
PP
0 sg
-90 8 -1 -64 88 -1 3 57 3194 3372 5 MP stroke
c69
-88 8 0 -66 87 -8 3291 3742 4 MP
PP
0 sg
1 66 -88 8 0 -66 87 -8 3291 3742 5 MP stroke
c69
-88 8 0 -63 88 -8 3290 3676 4 MP
PP
0 sg
0 63 -88 8 0 -63 88 -8 3290 3676 5 MP stroke
c69
-89 6 -1 -61 88 -8 3290 3613 4 MP
PP
0 sg
2 63 -89 6 -1 -61 88 -8 3290 3613 5 MP stroke
c69
-89 4 -1 -59 89 -6 3288 3550 4 MP
PP
0 sg
1 61 -89 4 -1 -59 89 -6 3288 3550 5 MP stroke
c69
-90 0 -1 -57 89 -4 3287 3489 4 MP
PP
0 sg
2 61 -90 0 -1 -57 89 -4 3287 3489 5 MP stroke
c69
-89 -3 -2 -61 90 0 3285 3428 4 MP
PP
0 sg
1 64 -89 -3 -2 -61 90 0 3285 3428 5 MP stroke
c69
-88 10 0 -65 88 -11 3378 3734 4 MP
PP
0 sg
0 66 -88 10 0 -65 88 -11 3378 3734 5 MP stroke
c69
-88 9 0 -62 88 -10 3378 3668 4 MP
PP
0 sg
0 63 -88 9 0 -62 88 -10 3378 3668 5 MP stroke
c69
-88 8 -1 -60 88 -9 3378 3605 4 MP
PP
0 sg
1 61 -88 8 -1 -60 88 -9 3378 3605 5 MP stroke
c69
-89 6 0 -57 88 -8 3377 3544 4 MP
PP
0 sg
1 59 -89 6 0 -57 88 -8 3377 3544 5 MP stroke
c69
-89 2 -1 -53 89 -6 3376 3485 4 MP
PP
0 sg
1 57 -89 2 -1 -53 89 -6 3376 3485 5 MP stroke
c27
-89 -15 -2 -44 89 -2 3375 3428 4 MP
PP
0 sg
2 61 -89 -15 -2 -44 89 -2 3375 3428 5 MP stroke
c69
0 -65 88 -13 0 65 3466 3658 4 MP
PP
0 sg
-88 13 0 -65 88 -13 0 65 3466 3658 5 MP stroke
c69
0 -62 88 -13 0 62 3466 3596 4 MP
PP
0 sg
-88 13 0 -62 88 -13 0 62 3466 3596 5 MP stroke
c69
0 -58 88 -13 1 60 3465 3536 4 MP
PP
0 sg
-89 11 0 -58 88 -13 1 60 3465 3536 5 MP stroke
c69
0 -55 89 -11 0 57 3465 3479 4 MP
PP
0 sg
-89 9 0 -55 89 -11 0 57 3465 3479 5 MP stroke
c27
-1 -50 89 -9 1 53 3464 3426 4 MP
PP
0 sg
-89 6 -1 -50 89 -9 1 53 3464 3426 5 MP stroke
c27
0 -46 89 -6 2 44 3462 3382 4 MP
PP
0 sg
-91 8 0 -46 89 -6 2 44 3462 3382 5 MP stroke
c27
0 -65 89 -17 0 65 3554 3645 4 MP
PP
0 sg
-89 17 0 -65 89 -17 0 65 3554 3645 5 MP stroke
c27
0 -60 89 -17 0 62 3554 3583 4 MP
PP
0 sg
-89 15 0 -60 89 -17 0 62 3554 3583 5 MP stroke
c27
-1 -57 89 -15 0 58 3554 3525 4 MP
PP
0 sg
-88 14 -1 -57 89 -15 0 58 3554 3525 5 MP stroke
c27
0 -53 88 -14 0 55 3554 3470 4 MP
PP
0 sg
-88 12 0 -53 88 -14 0 55 3554 3470 5 MP stroke
c27
1 -50 88 -12 1 50 3553 3420 4 MP
PP
0 sg
-90 12 1 -50 88 -12 1 50 3553 3420 5 MP stroke
c27
1 -45 90 -12 0 46 3553 3374 4 MP
PP
0 sg
-91 11 1 -45 90 -12 0 46 3553 3374 5 MP stroke
c27
0 -64 88 -23 0 65 3643 3628 4 MP
PP
0 sg
-88 22 0 -64 88 -23 0 65 3643 3628 5 MP stroke
c27
0 -57 88 -22 0 60 3643 3568 4 MP
PP
0 sg
-88 19 0 -57 88 -22 0 60 3643 3568 5 MP stroke
c27
0 -54 88 -19 1 57 3642 3511 4 MP
PP
0 sg
-89 16 0 -54 88 -19 1 57 3642 3511 5 MP stroke
c27
0 -53 89 -16 0 53 3642 3458 4 MP
PP
0 sg
-89 16 0 -53 89 -16 0 53 3642 3458 5 MP stroke
c27
0 -50 89 -16 -1 50 3643 3408 4 MP
PP
0 sg
-88 16 0 -50 89 -16 -1 50 3643 3408 5 MP stroke
c27
2 -45 88 -16 -1 45 3644 3363 4 MP
PP
0 sg
-89 16 2 -45 88 -16 -1 45 3644 3363 5 MP stroke
c19
0 -52 89 -38 0 64 3731 3606 4 MP
PP
0 sg
-89 26 0 -52 89 -38 0 64 3731 3606 5 MP stroke
c27
0 -52 89 -26 0 57 3731 3549 4 MP
PP
0 sg
-89 21 0 -52 89 -26 0 57 3731 3549 5 MP stroke
c27
0 -52 89 -21 0 54 3731 3495 4 MP
PP
0 sg
-89 19 0 -52 89 -21 0 54 3731 3495 5 MP stroke
c27
0 -52 89 -19 0 53 3731 3442 4 MP
PP
0 sg
-89 18 0 -52 89 -19 0 53 3731 3442 5 MP stroke
c27
0 -51 89 -18 0 50 3731 3392 4 MP
PP
0 sg
-89 19 0 -51 89 -18 0 50 3731 3392 5 MP stroke
c27
0 -52 89 -19 -2 45 3733 3347 4 MP
PP
0 sg
-87 26 0 -52 89 -19 -2 45 3733 3347 5 MP stroke
c69
-85 -1 10 -75 89 0 2391 4317 4 MP
PP
0 sg
-14 76 -85 -1 10 -75 89 0 2391 4317 5 MP stroke
c69
-84 -2 8 -75 85 1 2405 4241 4 MP
PP
0 sg
-9 76 -84 -2 8 -75 85 1 2405 4241 5 MP stroke
c69
-84 -4 7 -74 84 2 2414 4165 4 MP
PP
0 sg
-7 76 -84 -4 7 -74 84 2 2414 4165 5 MP stroke
c69
-84 -5 6 -74 84 4 2421 4089 4 MP
PP
0 sg
-6 75 -84 -5 6 -74 84 4 2421 4089 5 MP stroke
c69
-85 -6 6 -74 84 5 2427 4014 4 MP
PP
0 sg
-5 75 -85 -6 6 -74 84 5 2427 4014 5 MP stroke
c69
-84 -9 5 -73 85 6 2432 3939 4 MP
PP
0 sg
-6 76 -84 -9 5 -73 85 6 2432 3939 5 MP stroke
c69
-84 -14 6 -70 84 9 2438 3863 4 MP
PP
0 sg
-6 75 -84 -14 6 -70 84 9 2438 3863 5 MP stroke
c69
-79 -18 7 -67 84 14 2444 3788 4 MP
PP
0 sg
-12 71 -79 -18 7 -67 84 14 2444 3788 5 MP stroke
c69
-87 -1 8 -74 89 0 2480 4317 4 MP
PP
0 sg
-10 75 -87 -1 8 -74 89 0 2480 4317 5 MP stroke
c69
-86 -2 7 -74 87 1 2490 4242 4 MP
PP
0 sg
-8 75 -86 -2 7 -74 87 1 2490 4242 5 MP stroke
c69
-85 -3 6 -73 86 2 2498 4167 4 MP
PP
0 sg
-7 74 -85 -3 6 -73 86 2 2498 4167 5 MP stroke
c69
-85 -4 6 -73 85 3 2505 4093 4 MP
PP
0 sg
-6 74 -85 -4 6 -73 85 3 2505 4093 5 MP stroke
c69
-84 -6 5 -72 85 4 2511 4019 4 MP
PP
0 sg
-6 74 -84 -6 5 -72 85 4 2511 4019 5 MP stroke
c69
-83 -8 4 -71 84 6 2517 3945 4 MP
PP
0 sg
-5 73 -83 -8 4 -71 84 6 2517 3945 5 MP stroke
c69
-82 -9 5 -69 83 8 2522 3872 4 MP
PP
0 sg
-6 70 -82 -9 5 -69 83 8 2522 3872 5 MP stroke
c48
-79 -11 4 -65 82 9 2528 3802 4 MP
PP
0 sg
-7 67 -79 -11 4 -65 82 9 2528 3802 5 MP stroke
c69
-88 -1 7 -73 89 0 2569 4317 4 MP
PP
0 sg
-8 74 -88 -1 7 -73 89 0 2569 4317 5 MP stroke
c69
-87 -2 6 -73 88 1 2577 4243 4 MP
PP
0 sg
-7 74 -87 -2 6 -73 88 1 2577 4243 5 MP stroke
c69
-86 -2 5 -73 87 2 2584 4169 4 MP
PP
0 sg
-6 73 -86 -2 5 -73 87 2 2584 4169 5 MP stroke
c69
-85 -3 5 -72 86 2 2590 4096 4 MP
PP
0 sg
-6 73 -85 -3 5 -72 86 2 2590 4096 5 MP stroke
c69
-84 -4 4 -71 85 3 2596 4023 4 MP
PP
0 sg
-5 72 -84 -4 4 -71 85 3 2596 4023 5 MP stroke
c69
-84 -5 4 -70 84 4 2601 3951 4 MP
PP
0 sg
-4 71 -84 -5 4 -70 84 4 2601 3951 5 MP stroke
c69
-83 -7 4 -67 84 5 2605 3880 4 MP
PP
0 sg
-5 69 -83 -7 4 -67 84 5 2605 3880 5 MP stroke
c48
-81 -7 2 -65 83 7 2610 3811 4 MP
PP
0 sg
-4 65 -81 -7 2 -65 83 7 2610 3811 5 MP stroke
c69
-88 0 5 -73 90 0 2658 4317 4 MP
PP
0 sg
-7 73 -88 0 5 -73 90 0 2658 4317 5 MP stroke
c69
-87 -1 5 -72 88 0 2665 4244 4 MP
PP
0 sg
-6 73 -87 -1 5 -72 88 0 2665 4244 5 MP stroke
c69
-86 -2 4 -72 87 1 2671 4171 4 MP
PP
0 sg
-5 73 -86 -2 4 -72 87 1 2671 4171 5 MP stroke
c69
-86 -2 5 -72 86 2 2676 4098 4 MP
PP
0 sg
-5 72 -86 -2 5 -72 86 2 2676 4098 5 MP stroke
c69
-85 -3 3 -70 86 2 2681 4026 4 MP
PP
0 sg
-4 71 -85 -3 3 -70 86 2 2681 4026 5 MP stroke
c69
-84 -4 3 -69 85 3 2685 3955 4 MP
PP
0 sg
-4 70 -84 -4 3 -69 85 3 2685 3955 5 MP stroke
c69
-83 -4 3 -67 84 4 2689 3885 4 MP
PP
0 sg
-4 67 -83 -4 3 -67 84 4 2689 3885 5 MP stroke
c48
-82 -3 1 -66 83 4 2693 3818 4 MP
PP
0 sg
-2 65 -82 -3 1 -66 83 4 2693 3818 5 MP stroke
c69
-88 -1 4 -72 89 0 2748 4317 4 MP
PP
0 sg
-5 73 -88 -1 4 -72 89 0 2748 4317 5 MP stroke
c69
-87 0 4 -73 88 1 2753 4244 4 MP
PP
0 sg
-5 72 -87 0 4 -73 88 1 2753 4244 5 MP stroke
c69
-87 -1 4 -71 87 0 2758 4172 4 MP
PP
0 sg
-4 72 -87 -1 4 -71 87 0 2758 4172 5 MP stroke
c69
-85 -1 3 -72 87 1 2762 4100 4 MP
PP
0 sg
-5 72 -85 -1 3 -72 87 1 2762 4100 5 MP stroke
c69
-85 -1 3 -70 85 1 2767 4028 4 MP
PP
0 sg
-3 70 -85 -1 3 -70 85 1 2767 4028 5 MP stroke
c69
-85 -2 3 -68 85 1 2770 3958 4 MP
PP
0 sg
-3 69 -85 -2 3 -68 85 1 2770 3958 5 MP stroke
c69
-84 -2 2 -67 85 2 2773 3889 4 MP
PP
0 sg
-3 67 -84 -2 2 -67 85 2 2773 3889 5 MP stroke
c69
-83 -2 0 -66 84 2 2776 3822 4 MP
PP
0 sg
-1 66 -83 -2 0 -66 84 2 2776 3822 5 MP stroke
c69
-89 0 4 -72 89 0 2837 4317 4 MP
PP
0 sg
-4 72 -89 0 4 -72 89 0 2837 4317 5 MP stroke
c69
-88 0 3 -73 89 0 2841 4245 4 MP
PP
0 sg
-4 73 -88 0 3 -73 89 0 2841 4245 5 MP stroke
c69
-87 0 3 -71 88 0 2845 4172 4 MP
PP
0 sg
-4 71 -87 0 3 -71 88 0 2845 4172 5 MP stroke
c69
-87 -1 3 -71 87 0 2849 4101 4 MP
PP
0 sg
-3 72 -87 -1 3 -71 87 0 2849 4101 5 MP stroke
c69
-86 -1 2 -70 87 1 2852 4029 4 MP
PP
0 sg
-3 70 -86 -1 2 -70 87 1 2852 4029 5 MP stroke
c69
-85 0 2 -69 86 1 2855 3959 4 MP
PP
0 sg
-3 68 -85 0 2 -69 86 1 2855 3959 5 MP stroke
c69
-84 0 1 -67 85 0 2858 3891 4 MP
PP
0 sg
-2 67 -84 0 1 -67 85 0 2858 3891 5 MP stroke
c69
-85 0 1 -66 84 0 2860 3824 4 MP
PP
0 sg
0 66 -85 0 1 -66 84 0 2860 3824 5 MP stroke
c69
-88 1 2 -73 90 0 2926 4317 4 MP
PP
0 sg
-4 72 -88 1 2 -73 90 0 2926 4317 5 MP stroke
c69
-88 0 3 -72 88 -1 2930 4245 4 MP
PP
0 sg
-3 73 -88 0 3 -72 88 -1 2930 4245 5 MP stroke
c69
-88 1 3 -72 88 0 2933 4172 4 MP
PP
0 sg
-3 71 -88 1 3 -72 88 0 2933 4172 5 MP stroke
c69
-87 1 2 -71 88 -1 2936 4101 4 MP
PP
0 sg
-3 71 -87 1 2 -71 88 -1 2936 4101 5 MP stroke
c69
-87 1 2 -70 87 -1 2939 4030 4 MP
PP
0 sg
-2 70 -87 1 2 -70 87 -1 2939 4030 5 MP stroke
c69
-86 1 1 -69 87 -1 2941 3960 4 MP
PP
0 sg
-2 69 -86 1 1 -69 87 -1 2941 3960 5 MP stroke
c69
-86 2 1 -68 86 -1 2943 3891 4 MP
PP
0 sg
-1 67 -86 2 1 -68 86 -1 2943 3891 5 MP stroke
c69
-85 2 0 -66 86 -2 2944 3824 4 MP
PP
0 sg
-1 66 -85 2 0 -66 86 -2 2944 3824 5 MP stroke
c69
-89 0 2 -73 89 0 3016 4317 4 MP
PP
0 sg
-2 73 -89 0 2 -73 89 0 3016 4317 5 MP stroke
c69
-88 1 2 -73 89 0 3018 4244 4 MP
PP
0 sg
-3 72 -88 1 2 -73 89 0 3018 4244 5 MP stroke
c69
-87 1 2 -72 88 -1 3021 4172 4 MP
PP
0 sg
-3 72 -87 1 2 -72 88 -1 3021 4172 5 MP stroke
c69
-87 2 2 -72 87 -1 3024 4100 4 MP
PP
0 sg
-2 71 -87 2 2 -72 87 -1 3024 4100 5 MP stroke
c69
-87 2 2 -70 87 -2 3026 4029 4 MP
PP
0 sg
-2 70 -87 2 2 -70 87 -2 3026 4029 5 MP stroke
c69
-87 3 1 -70 87 -2 3028 3959 4 MP
PP
0 sg
-1 69 -87 3 1 -70 87 -2 3028 3959 5 MP stroke
c69
-86 3 0 -68 87 -3 3029 3890 4 MP
PP
0 sg
-1 68 -86 3 0 -68 87 -3 3029 3890 5 MP stroke
c69
-87 3 1 -66 86 -3 3030 3822 4 MP
PP
0 sg
0 66 -87 3 1 -66 86 -3 3030 3822 5 MP stroke
c69
-89 1 2 -74 89 0 3105 4317 4 MP
PP
0 sg
-2 73 -89 1 2 -74 89 0 3105 4317 5 MP stroke
c69
-89 1 2 -73 89 -1 3107 4244 4 MP
PP
0 sg
-2 73 -89 1 2 -73 89 -1 3107 4244 5 MP stroke
c69
-88 2 1 -73 89 -1 3109 4171 4 MP
PP
0 sg
-2 72 -88 2 1 -73 89 -1 3109 4171 5 MP stroke
c69
-88 2 2 -72 88 -2 3111 4099 4 MP
PP
0 sg
-2 72 -88 2 2 -72 88 -2 3111 4099 5 MP stroke
c69
-87 4 1 -72 88 -2 3113 4027 4 MP
PP
0 sg
-2 70 -87 4 1 -72 88 -2 3113 4027 5 MP stroke
c69
-87 4 1 -70 87 -4 3115 3957 4 MP
PP
0 sg
-1 70 -87 4 1 -70 87 -4 3115 3957 5 MP stroke
c69
-87 4 0 -68 87 -4 3116 3887 4 MP
PP
0 sg
0 68 -87 4 0 -68 87 -4 3116 3887 5 MP stroke
c69
-86 5 0 -67 87 -4 3116 3819 4 MP
PP
0 sg
-1 66 -86 5 0 -67 87 -4 3116 3819 5 MP stroke
c69
-89 1 2 -75 89 0 3194 4317 4 MP
PP
0 sg
-2 74 -89 1 2 -75 89 0 3194 4317 5 MP stroke
c69
-88 2 1 -74 89 -1 3196 4243 4 MP
PP
0 sg
-2 73 -88 2 1 -74 89 -1 3196 4243 5 MP stroke
c69
-89 3 2 -74 88 -2 3198 4170 4 MP
PP
0 sg
-1 73 -89 3 2 -74 88 -2 3198 4170 5 MP stroke
c69
-88 4 1 -73 89 -3 3199 4097 4 MP
PP
0 sg
-2 72 -88 4 1 -73 89 -3 3199 4097 5 MP stroke
c69
-88 4 1 -72 88 -4 3201 4025 4 MP
PP
0 sg
-1 72 -88 4 1 -72 88 -4 3201 4025 5 MP stroke
c69
-87 5 0 -71 88 -4 3202 3953 4 MP
PP
0 sg
-1 70 -87 5 0 -71 88 -4 3202 3953 5 MP stroke
c69
-88 6 1 -69 87 -5 3203 3883 4 MP
PP
0 sg
0 68 -88 6 1 -69 87 -5 3203 3883 5 MP stroke
c69
-88 6 0 -67 88 -6 3203 3815 4 MP
PP
0 sg
0 67 -88 6 0 -67 88 -6 3203 3815 5 MP stroke
c69
-89 1 1 -76 90 0 3283 4317 4 MP
PP
0 sg
-2 75 -89 1 1 -76 90 0 3283 4317 5 MP stroke
c69
-89 3 1 -76 89 -1 3285 4242 4 MP
PP
0 sg
-1 74 -89 3 1 -76 89 -1 3285 4242 5 MP stroke
c69
-88 4 1 -75 89 -3 3286 4168 4 MP
PP
0 sg
-2 74 -88 4 1 -75 89 -3 3286 4168 5 MP stroke
c69
-88 5 1 -74 88 -4 3288 4094 4 MP
PP
0 sg
-1 73 -88 5 1 -74 88 -4 3288 4094 5 MP stroke
c69
-88 6 1 -73 88 -5 3289 4021 4 MP
PP
0 sg
-1 72 -88 6 1 -73 88 -5 3289 4021 5 MP stroke
c69
-88 7 0 -72 88 -6 3290 3949 4 MP
PP
0 sg
0 71 -88 7 0 -72 88 -6 3290 3949 5 MP stroke
c69
-87 8 0 -70 88 -7 3290 3878 4 MP
PP
0 sg
-1 69 -87 8 0 -70 88 -7 3290 3878 5 MP stroke
c69
-87 8 0 -67 87 -8 3291 3809 4 MP
PP
0 sg
0 67 -87 8 0 -67 87 -8 3291 3809 5 MP stroke
c69
-89 1 1 -77 89 0 3373 4317 4 MP
PP
0 sg
-1 76 -89 1 1 -77 89 0 3373 4317 5 MP stroke
c69
-89 3 1 -78 89 -1 3374 4241 4 MP
PP
0 sg
-1 76 -89 3 1 -78 89 -1 3374 4241 5 MP stroke
c69
-89 4 1 -76 89 -3 3375 4165 4 MP
PP
0 sg
-1 75 -89 4 1 -76 89 -3 3375 4165 5 MP stroke
c69
-88 6 0 -76 89 -4 3376 4090 4 MP
PP
0 sg
-1 74 -88 6 0 -76 89 -4 3376 4090 5 MP stroke
c69
-88 8 1 -75 88 -6 3377 4016 4 MP
PP
0 sg
-1 73 -88 8 1 -75 88 -6 3377 4016 5 MP stroke
c69
-88 9 0 -73 88 -8 3378 3943 4 MP
PP
0 sg
0 72 -88 9 0 -73 88 -8 3378 3943 5 MP stroke
c69
-88 10 0 -71 88 -9 3378 3871 4 MP
PP
0 sg
0 70 -88 10 0 -71 88 -9 3378 3871 5 MP stroke
c69
-88 11 0 -68 88 -10 3378 3801 4 MP
PP
0 sg
0 67 -88 11 0 -68 88 -10 3378 3801 5 MP stroke
c69
-89 2 1 -79 89 0 3462 4317 4 MP
PP
0 sg
-1 77 -89 2 1 -79 89 0 3462 4317 5 MP stroke
c69
-89 3 1 -79 89 -2 3463 4240 4 MP
PP
0 sg
-1 78 -89 3 1 -79 89 -2 3463 4240 5 MP stroke
c69
-88 6 0 -79 89 -3 3464 4162 4 MP
PP
0 sg
-1 76 -88 6 0 -79 89 -3 3464 4162 5 MP stroke
c69
-89 8 1 -78 88 -6 3465 4086 4 MP
PP
0 sg
0 76 -89 8 1 -78 88 -6 3465 4086 5 MP stroke
c69
-88 9 0 -76 89 -8 3465 4010 4 MP
PP
0 sg
-1 75 -88 9 0 -76 89 -8 3465 4010 5 MP stroke
c69
-88 11 0 -75 88 -9 3466 3935 4 MP
PP
0 sg
0 73 -88 11 0 -75 88 -9 3466 3935 5 MP stroke
c69
-88 12 0 -72 88 -11 3466 3862 4 MP
PP
0 sg
0 71 -88 12 0 -72 88 -11 3466 3862 5 MP stroke
c69
-88 13 0 -69 88 -12 3466 3791 4 MP
PP
0 sg
0 68 -88 13 0 -69 88 -12 3466 3791 5 MP stroke
c69
-89 2 0 -81 90 0 3551 4317 4 MP
PP
0 sg
-1 79 -89 2 0 -81 90 0 3551 4317 5 MP stroke
c69
-88 4 0 -81 89 -2 3552 4238 4 MP
PP
0 sg
-1 79 -88 4 0 -81 89 -2 3552 4238 5 MP stroke
c69
-89 6 1 -81 88 -4 3553 4159 4 MP
PP
0 sg
0 79 -89 6 1 -81 88 -4 3553 4159 5 MP stroke
c69
-88 8 0 -80 89 -6 3553 4080 4 MP
PP
0 sg
-1 78 -88 8 0 -80 89 -6 3553 4080 5 MP stroke
c69
-88 11 0 -79 88 -8 3554 4002 4 MP
PP
0 sg
0 76 -88 11 0 -79 88 -8 3554 4002 5 MP stroke
c27
-89 14 1 -78 88 -11 3554 3926 4 MP
PP
0 sg
0 75 -89 14 1 -78 88 -11 3554 3926 5 MP stroke
c27
-89 16 0 -74 89 -14 3554 3851 4 MP
PP
0 sg
0 72 -89 16 0 -74 89 -14 3554 3851 5 MP stroke
c27
-89 17 0 -70 89 -16 3554 3779 4 MP
PP
0 sg
0 69 -89 17 0 -70 89 -16 3554 3779 5 MP stroke
c69
-89 2 0 -83 89 0 3641 4317 4 MP
PP
0 sg
0 81 -89 2 0 -83 89 0 3641 4317 5 MP stroke
c69
-90 5 1 -84 89 -2 3641 4236 4 MP
PP
0 sg
0 81 -90 5 1 -84 89 -2 3641 4236 5 MP stroke
c69
-89 7 0 -83 90 -5 3641 4155 4 MP
PP
0 sg
-1 81 -89 7 0 -83 90 -5 3641 4155 5 MP stroke
c69
-89 10 0 -83 89 -7 3642 4074 4 MP
PP
0 sg
0 80 -89 10 0 -83 89 -7 3642 4074 5 MP stroke
c69
-89 13 0 -82 89 -10 3642 3994 4 MP
PP
0 sg
0 79 -89 13 0 -82 89 -10 3642 3994 5 MP stroke
c27
-88 16 0 -81 89 -13 3642 3915 4 MP
PP
0 sg
-1 78 -88 16 0 -81 89 -13 3642 3915 5 MP stroke
c27
-88 21 0 -79 88 -16 3643 3837 4 MP
PP
0 sg
0 74 -88 21 0 -79 88 -16 3643 3837 5 MP stroke
c27
-88 23 0 -72 88 -21 3643 3763 4 MP
PP
0 sg
0 70 -88 23 0 -72 88 -21 3643 3763 5 MP stroke
c27
-90 3 0 -86 90 0 3730 4317 4 MP
PP
0 sg
0 83 -90 3 0 -86 90 0 3730 4317 5 MP stroke
c69
-89 4 0 -85 90 -3 3730 4234 4 MP
PP
0 sg
-1 84 -89 4 0 -85 90 -3 3730 4234 5 MP stroke
c69
-89 7 0 -86 89 -4 3731 4150 4 MP
PP
0 sg
0 83 -89 7 0 -86 89 -4 3731 4150 5 MP stroke
c69
-89 10 0 -86 89 -7 3731 4067 4 MP
PP
0 sg
0 83 -89 10 0 -86 89 -7 3731 4067 5 MP stroke
c27
-89 13 0 -85 89 -10 3731 3984 4 MP
PP
0 sg
0 82 -89 13 0 -85 89 -10 3731 3984 5 MP stroke
c27
-89 18 0 -86 89 -13 3731 3902 4 MP
PP
0 sg
0 81 -89 18 0 -86 89 -13 3731 3902 5 MP stroke
c27
-89 25 0 -86 89 -18 3731 3821 4 MP
PP
0 sg
0 79 -89 25 0 -86 89 -18 3731 3821 5 MP stroke
c19
-89 38 0 -85 89 -25 3731 3742 4 MP
PP
0 sg
0 72 -89 38 0 -85 89 -25 3731 3742 5 MP stroke
c69
-79 0 -6 -84 77 0 1238 4317 4 MP
PP
0 sg
8 84 -79 0 -6 -84 77 0 1238 4317 5 MP stroke
c69
-80 -1 -4 -84 79 0 1230 4233 4 MP
PP
0 sg
5 85 -80 -1 -4 -84 79 0 1230 4233 5 MP stroke
c69
-80 -1 -4 -85 80 1 1225 4148 4 MP
PP
0 sg
4 85 -80 -1 -4 -85 80 1 1225 4148 5 MP stroke
c69
-80 -1 -4 -84 80 1 1221 4063 4 MP
PP
0 sg
4 84 -80 -1 -4 -84 80 1 1221 4063 5 MP stroke
c69
-80 0 -3 -85 80 1 1217 3979 4 MP
PP
0 sg
3 84 -80 0 -3 -85 80 1 1217 3979 5 MP stroke
c69
-80 -1 -3 -84 80 0 1214 3895 4 MP
PP
0 sg
3 85 -80 -1 -3 -84 80 0 1214 3895 5 MP stroke
c69
-80 0 -5 -85 80 1 1211 3810 4 MP
PP
0 sg
5 84 -80 0 -5 -85 80 1 1211 3810 5 MP stroke
c69
-82 3 -5 -86 80 0 1206 3726 4 MP
PP
0 sg
7 83 -82 3 -5 -86 80 0 1206 3726 5 MP stroke
c69
-79 0 -4 -84 77 0 1315 4317 4 MP
PP
0 sg
6 84 -79 0 -4 -84 77 0 1315 4317 5 MP stroke
c69
-79 0 -4 -84 79 0 1309 4233 4 MP
PP
0 sg
4 84 -79 0 -4 -84 79 0 1309 4233 5 MP stroke
c69
-79 -1 -4 -84 79 0 1305 4149 4 MP
PP
0 sg
4 85 -79 -1 -4 -84 79 0 1305 4149 5 MP stroke
c69
-80 -1 -3 -84 79 1 1301 4064 4 MP
PP
0 sg
4 84 -80 -1 -3 -84 79 1 1301 4064 5 MP stroke
c69
-80 -2 -3 -84 80 1 1297 3980 4 MP
PP
0 sg
3 85 -80 -2 -3 -84 80 1 1297 3980 5 MP stroke
c69
-80 -1 -3 -85 80 2 1294 3895 4 MP
PP
0 sg
3 84 -80 -1 -3 -85 80 2 1294 3895 5 MP stroke
c69
-83 0 -2 -86 80 1 1291 3811 4 MP
PP
0 sg
5 85 -83 0 -2 -86 80 1 1291 3811 5 MP stroke
c69
-83 0 -5 -86 83 0 1286 3726 4 MP
PP
0 sg
5 86 -83 0 -5 -86 83 0 1286 3726 5 MP stroke
c69
-77 0 -4 -84 77 0 1392 4317 4 MP
PP
0 sg
4 84 -77 0 -4 -84 77 0 1392 4317 5 MP stroke
c69
-78 -1 -3 -83 77 0 1388 4233 4 MP
PP
0 sg
4 84 -78 -1 -3 -83 77 0 1388 4233 5 MP stroke
c69
-79 -1 -3 -84 78 1 1384 4149 4 MP
PP
0 sg
4 84 -79 -1 -3 -84 78 1 1384 4149 5 MP stroke
c69
-79 -1 -3 -84 79 1 1380 4065 4 MP
PP
0 sg
3 84 -79 -1 -3 -84 79 1 1380 4065 5 MP stroke
c69
-79 -1 -3 -84 79 1 1377 3981 4 MP
PP
0 sg
3 84 -79 -1 -3 -84 79 1 1377 3981 5 MP stroke
c69
-80 -2 -2 -84 79 1 1374 3897 4 MP
PP
0 sg
3 85 -80 -2 -2 -84 79 1 1374 3897 5 MP stroke
c69
-82 -3 0 -85 80 2 1371 3812 4 MP
PP
0 sg
2 86 -82 -3 0 -85 80 2 1371 3812 5 MP stroke
c27
-92 6 5 -95 82 3 1369 3726 4 MP
PP
0 sg
5 86 -92 6 5 -95 82 3 1369 3726 5 MP stroke
c69
-78 -1 -3 -83 77 0 1469 4317 4 MP
PP
0 sg
4 84 -78 -1 -3 -83 77 0 1469 4317 5 MP stroke
c69
-78 0 -3 -84 78 1 1465 4233 4 MP
PP
0 sg
3 83 -78 0 -3 -84 78 1 1465 4233 5 MP stroke
c69
-78 -1 -3 -83 78 0 1462 4150 4 MP
PP
0 sg
3 84 -78 -1 -3 -83 78 0 1462 4150 5 MP stroke
c69
-79 -1 -2 -84 78 1 1459 4066 4 MP
PP
0 sg
3 84 -79 -1 -2 -84 78 1 1459 4066 5 MP stroke
c69
-80 -2 -2 -83 79 1 1456 3982 4 MP
PP
0 sg
3 84 -80 -2 -2 -83 79 1 1456 3982 5 MP stroke
c69
-80 -2 -2 -84 80 2 1453 3898 4 MP
PP
0 sg
2 84 -80 -2 -2 -84 80 2 1453 3898 5 MP stroke
c69
-79 -3 -1 -84 80 2 1451 3814 4 MP
PP
0 sg
0 85 -79 -3 -1 -84 80 2 1451 3814 5 MP stroke
c27
-76 -25 2 -73 79 3 1451 3729 4 MP
PP
0 sg
-5 95 -76 -25 2 -73 79 3 1451 3729 5 MP stroke
c48
-77 0 -2 -83 76 0 1546 4317 4 MP
PP
0 sg
3 83 -77 0 -2 -83 76 0 1546 4317 5 MP stroke
c48
-78 -1 -2 -83 77 0 1543 4234 4 MP
PP
0 sg
3 84 -78 -1 -2 -83 77 0 1543 4234 5 MP stroke
c48
-79 0 -2 -84 78 1 1540 4150 4 MP
PP
0 sg
3 83 -79 0 -2 -84 78 1 1540 4150 5 MP stroke
c48
-79 -1 -2 -83 79 0 1537 4067 4 MP
PP
0 sg
2 84 -79 -1 -2 -83 79 0 1537 4067 5 MP stroke
c48
-78 -1 -3 -83 79 1 1535 3983 4 MP
PP
0 sg
2 83 -78 -1 -3 -83 79 1 1535 3983 5 MP stroke
c48
-78 -3 -2 -82 78 1 1533 3900 4 MP
PP
0 sg
2 84 -78 -3 -2 -82 78 1 1533 3900 5 MP stroke
c69
-77 -5 -2 -82 78 3 1531 3816 4 MP
PP
0 sg
1 84 -77 -5 -2 -82 78 3 1531 3816 5 MP stroke
c69
-73 10 -2 -88 77 5 1530 3732 4 MP
PP
0 sg
-2 73 -73 10 -2 -88 77 5 1530 3732 5 MP stroke
c48
-78 0 -1 -83 77 0 1622 4317 4 MP
PP
0 sg
2 83 -78 0 -1 -83 77 0 1622 4317 5 MP stroke
c48
-78 0 -2 -83 78 0 1620 4234 4 MP
PP
0 sg
2 83 -78 0 -2 -83 78 0 1620 4234 5 MP stroke
c48
-79 -1 -1 -83 78 0 1618 4151 4 MP
PP
0 sg
2 84 -79 -1 -1 -83 78 0 1618 4151 5 MP stroke
c48
-79 -1 -2 -83 79 1 1616 4067 4 MP
PP
0 sg
2 83 -79 -1 -2 -83 79 1 1616 4067 5 MP stroke
c48
-79 -1 -3 -83 79 1 1614 3984 4 MP
PP
0 sg
3 83 -79 -1 -3 -83 79 1 1614 3984 5 MP stroke
c48
-78 -1 -3 -82 79 1 1611 3901 4 MP
PP
0 sg
2 82 -78 -1 -3 -82 79 1 1611 3901 5 MP stroke
c48
-76 -2 -4 -81 78 1 1609 3819 4 MP
PP
0 sg
2 82 -76 -2 -4 -81 78 1 1609 3819 5 MP stroke
c69
-76 -17 -2 -73 76 2 1607 3737 4 MP
PP
0 sg
2 88 -76 -17 -2 -73 76 2 1607 3737 5 MP stroke
c48
-78 -1 0 -82 77 0 1699 4317 4 MP
PP
0 sg
1 83 -78 -1 0 -82 77 0 1699 4317 5 MP stroke
c48
-79 -1 -1 -83 78 1 1698 4234 4 MP
PP
0 sg
2 83 -79 -1 -1 -83 78 1 1698 4234 5 MP stroke
c48
-78 -1 -2 -83 79 1 1696 4151 4 MP
PP
0 sg
1 83 -78 -1 -2 -83 79 1 1696 4151 5 MP stroke
c48
-79 -1 -1 -83 78 1 1695 4068 4 MP
PP
0 sg
2 83 -79 -1 -1 -83 78 1 1695 4068 5 MP stroke
c48
-80 -1 -2 -83 79 1 1693 3985 4 MP
PP
0 sg
3 83 -80 -1 -2 -83 79 1 1693 3985 5 MP stroke
c48
-79 0 -4 -83 80 1 1690 3902 4 MP
PP
0 sg
3 82 -79 0 -4 -83 80 1 1690 3902 5 MP stroke
c48
-77 0 -6 -81 79 0 1687 3820 4 MP
PP
0 sg
4 81 -77 0 -6 -81 79 0 1687 3820 5 MP stroke
c51
-69 4 -10 -77 77 0 1683 3739 4 MP
PP
0 sg
2 73 -69 4 -10 -77 77 0 1683 3739 5 MP stroke
c48
-77 0 0 -82 77 0 1776 4317 4 MP
PP
0 sg
0 82 -77 0 0 -82 77 0 1776 4317 5 MP stroke
c48
-78 -1 0 -82 77 0 1776 4235 4 MP
PP
0 sg
1 83 -78 -1 0 -82 77 0 1776 4235 5 MP stroke
c48
-80 -1 0 -83 78 1 1775 4152 4 MP
PP
0 sg
2 83 -80 -1 0 -83 78 1 1775 4152 5 MP stroke
c48
-80 -1 -1 -83 80 1 1773 4069 4 MP
PP
0 sg
1 83 -80 -1 -1 -83 80 1 1773 4069 5 MP stroke
c48
-80 -1 -2 -83 80 1 1772 3986 4 MP
PP
0 sg
2 83 -80 -1 -2 -83 80 1 1772 3986 5 MP stroke
c69
-81 0 -3 -84 80 1 1770 3903 4 MP
PP
0 sg
4 83 -81 0 -3 -84 80 1 1770 3903 5 MP stroke
c69
-81 5 -6 -86 81 0 1766 3820 4 MP
PP
0 sg
6 81 -81 5 -6 -86 81 0 1766 3820 5 MP stroke
c48
-75 10 -16 -82 81 -5 1760 3739 4 MP
PP
0 sg
10 77 -75 10 -16 -82 81 -5 1760 3739 5 MP stroke
c48
-78 -1 1 -81 77 0 1853 4317 4 MP
PP
0 sg
0 82 -78 -1 1 -81 77 0 1853 4317 5 MP stroke
c48
-79 -1 1 -82 78 1 1853 4235 4 MP
PP
0 sg
0 82 -79 -1 1 -82 78 1 1853 4235 5 MP stroke
c48
-79 -2 0 -82 79 1 1853 4153 4 MP
PP
0 sg
0 83 -79 -2 0 -82 79 1 1853 4153 5 MP stroke
c48
-81 -2 1 -83 79 2 1853 4070 4 MP
PP
0 sg
1 83 -81 -2 1 -83 79 2 1853 4070 5 MP stroke
c48
-82 -2 -1 -83 81 2 1852 3987 4 MP
PP
0 sg
2 83 -82 -2 -1 -83 81 2 1852 3987 5 MP stroke
c69
-84 0 -1 -86 82 2 1850 3904 4 MP
PP
0 sg
3 84 -84 0 -1 -86 82 2 1850 3904 5 MP stroke
c27
-87 3 -3 -89 84 0 1847 3820 4 MP
PP
0 sg
6 86 -87 3 -3 -89 84 0 1847 3820 5 MP stroke
c8
-92 26 -11 -105 87 -3 1841 3734 4 MP
PP
0 sg
16 82 -92 26 -11 -105 87 -3 1841 3734 5 MP stroke
c48
-78 0 2 -81 77 0 1930 4317 4 MP
PP
0 sg
-1 81 -78 0 2 -81 77 0 1930 4317 5 MP stroke
c48
-79 -1 2 -81 78 0 1931 4236 4 MP
PP
0 sg
-1 82 -79 -1 2 -81 78 0 1931 4236 5 MP stroke
c48
-81 -2 2 -81 79 1 1932 4154 4 MP
PP
0 sg
0 82 -81 -2 2 -81 79 1 1932 4154 5 MP stroke
c48
-81 -3 1 -82 81 2 1932 4072 4 MP
PP
0 sg
-1 83 -81 -3 1 -82 81 2 1932 4072 5 MP stroke
c48
-83 -3 1 -83 81 3 1933 3989 4 MP
PP
0 sg
1 83 -83 -3 1 -83 81 3 1933 3989 5 MP stroke
c69
-86 -4 2 -85 83 3 1932 3906 4 MP
PP
0 sg
1 86 -86 -4 2 -85 83 3 1932 3906 5 MP stroke
c27
-90 -4 1 -89 86 4 1931 3820 4 MP
PP
0 sg
3 89 -90 -4 1 -89 86 4 1931 3820 5 MP stroke
c8
-112 -9 11 -100 90 4 1928 3731 4 MP
PP
0 sg
11 105 -112 -9 11 -100 90 4 1928 3731 5 MP stroke
c48
-78 -1 3 -80 77 0 2007 4317 4 MP
PP
0 sg
-2 81 -78 -1 3 -80 77 0 2007 4317 5 MP stroke
c48
-79 -2 3 -80 78 1 2009 4236 4 MP
PP
0 sg
-2 81 -79 -2 3 -80 78 1 2009 4236 5 MP stroke
c48
-80 -2 3 -81 79 2 2011 4155 4 MP
PP
0 sg
-2 81 -80 -2 3 -81 79 2 2011 4155 5 MP stroke
c48
-82 -3 3 -81 80 2 2013 4074 4 MP
PP
0 sg
-1 82 -82 -3 3 -81 80 2 2013 4074 5 MP stroke
c48
-84 -4 3 -82 82 3 2014 3992 4 MP
PP
0 sg
-1 83 -84 -4 3 -82 82 3 2014 3992 5 MP stroke
c69
-84 -7 2 -82 84 4 2015 3909 4 MP
PP
0 sg
-2 85 -84 -7 2 -82 84 4 2015 3909 5 MP stroke
c69
-88 -12 5 -84 84 7 2017 3824 4 MP
PP
0 sg
-1 89 -88 -12 5 -84 84 7 2017 3824 5 MP stroke
c19
-89 -34 12 -78 88 12 2018 3735 4 MP
PP
0 sg
-11 100 -89 -34 12 -78 88 12 2018 3735 5 MP stroke
c48
-78 -1 5 -79 76 0 2084 4317 4 MP
PP
0 sg
-3 80 -78 -1 5 -79 76 0 2084 4317 5 MP stroke
c48
-80 -2 5 -79 78 1 2087 4237 4 MP
PP
0 sg
-3 80 -80 -2 5 -79 78 1 2087 4237 5 MP stroke
c48
-81 -3 4 -80 80 2 2090 4157 4 MP
PP
0 sg
-3 81 -81 -3 4 -80 80 2 2090 4157 5 MP stroke
c48
-82 -4 4 -80 81 3 2093 4076 4 MP
PP
0 sg
-3 81 -82 -4 4 -80 81 3 2093 4076 5 MP stroke
c48
-83 -6 4 -80 82 4 2096 3995 4 MP
PP
0 sg
-3 82 -83 -6 4 -80 82 4 2096 3995 5 MP stroke
c69
-84 -7 3 -81 83 6 2099 3913 4 MP
PP
0 sg
-2 82 -84 -7 3 -81 83 6 2099 3913 5 MP stroke
c69
-83 -12 4 -79 84 7 2101 3831 4 MP
PP
0 sg
-5 84 -83 -12 4 -79 84 7 2101 3831 5 MP stroke
c48
-74 -15 3 -75 83 12 2106 3747 4 MP
PP
0 sg
-12 78 -74 -15 3 -75 83 12 2106 3747 5 MP stroke
c48
-79 -1 7 -78 77 0 2160 4317 4 MP
PP
0 sg
-5 79 -79 -1 7 -78 77 0 2160 4317 5 MP stroke
c48
-80 -2 6 -78 79 1 2165 4238 4 MP
PP
0 sg
-5 79 -80 -2 6 -78 79 1 2165 4238 5 MP stroke
c48
-82 -3 6 -79 80 2 2170 4159 4 MP
PP
0 sg
-4 80 -82 -3 6 -79 80 2 2170 4159 5 MP stroke
c48
-83 -5 5 -78 82 3 2174 4079 4 MP
PP
0 sg
-4 80 -83 -5 5 -78 82 3 2174 4079 5 MP stroke
c48
-83 -6 4 -79 83 5 2178 3999 4 MP
PP
0 sg
-4 80 -83 -6 4 -79 83 5 2178 3999 5 MP stroke
c69
-84 -8 4 -79 83 6 2182 3919 4 MP
PP
0 sg
-3 81 -84 -8 4 -79 83 6 2182 3919 5 MP stroke
c69
-82 -7 2 -80 84 8 2185 3838 4 MP
PP
0 sg
-4 79 -82 -7 2 -80 84 8 2185 3838 5 MP stroke
c48
-75 -6 -4 -76 82 7 2189 3759 4 MP
PP
0 sg
-3 75 -75 -6 -4 -76 82 7 2189 3759 5 MP stroke
c48
-79 -1 9 -77 77 0 2237 4317 4 MP
PP
0 sg
-7 78 -79 -1 9 -77 77 0 2237 4317 5 MP stroke
c48
-81 -2 8 -77 79 1 2244 4239 4 MP
PP
0 sg
-6 78 -81 -2 8 -77 79 1 2244 4239 5 MP stroke
c48
-82 -4 7 -77 81 2 2250 4161 4 MP
PP
0 sg
-6 79 -82 -4 7 -77 81 2 2250 4161 5 MP stroke
c48
-83 -5 6 -77 82 4 2256 4082 4 MP
PP
0 sg
-5 78 -83 -5 6 -77 82 4 2256 4082 5 MP stroke
c69
-84 -7 5 -77 83 5 2261 4004 4 MP
PP
0 sg
-4 79 -84 -7 5 -77 83 5 2261 4004 5 MP stroke
c69
-84 -8 4 -78 84 7 2265 3925 4 MP
PP
0 sg
-4 79 -84 -8 4 -78 84 7 2265 3925 5 MP stroke
c69
-86 -10 4 -78 84 8 2269 3846 4 MP
PP
0 sg
-2 80 -86 -10 4 -78 84 8 2269 3846 5 MP stroke
c27
-93 7 3 -93 86 10 2271 3766 4 MP
PP
0 sg
4 76 -93 7 3 -93 86 10 2271 3766 5 MP stroke
c48
-82 -1 14 -76 77 0 2314 4317 4 MP
PP
0 sg
-9 77 -82 -1 14 -76 77 0 2314 4317 5 MP stroke
c48
-83 -2 9 -76 82 1 2323 4240 4 MP
PP
0 sg
-8 77 -83 -2 9 -76 82 1 2323 4240 5 MP stroke
c48
-83 -3 7 -76 83 2 2331 4163 4 MP
PP
0 sg
-7 77 -83 -3 7 -76 83 2 2331 4163 5 MP stroke
c48
-83 -5 6 -75 83 3 2338 4086 4 MP
PP
0 sg
-6 77 -83 -5 6 -75 83 3 2338 4086 5 MP stroke
c69
-83 -7 5 -75 83 5 2344 4009 4 MP
PP
0 sg
-5 77 -83 -7 5 -75 83 5 2344 4009 5 MP stroke
c69
-85 -9 6 -76 83 7 2349 3932 4 MP
PP
0 sg
-4 78 -85 -9 6 -76 83 7 2349 3932 5 MP stroke
c69
-87 -12 6 -75 85 9 2353 3854 4 MP
PP
0 sg
-4 78 -87 -12 6 -75 85 9 2353 3854 5 MP stroke
c19
-96 -34 12 -71 87 12 2357 3776 4 MP
PP
0 sg
-3 93 -96 -34 12 -71 87 12 2357 3776 5 MP stroke
c69
-71 -10 -2 -81 73 7 899 3632 4 MP
PP
0 sg
0 84 -71 -10 -2 -81 73 7 899 3632 5 MP stroke
c69
-70 -16 -1 -78 71 10 899 3548 4 MP
PP
0 sg
0 84 -70 -16 -1 -78 71 10 899 3548 5 MP stroke
c69
-70 -24 0 -76 70 16 899 3464 4 MP
PP
0 sg
0 84 -70 -24 0 -76 70 16 899 3464 5 MP stroke
c69
-72 -34 2 -74 70 24 899 3380 4 MP
PP
0 sg
0 84 -72 -34 2 -74 70 24 899 3380 5 MP stroke
c69
-76 -45 4 -72 72 34 899 3296 4 MP
PP
0 sg
0 83 -76 -45 4 -72 72 34 899 3296 5 MP stroke
c19
-76 -64 0 -65 76 45 899 3213 4 MP
PP
0 sg
0 84 -76 -64 0 -65 76 45 899 3213 5 MP stroke
c48
-71 -8 -5 -77 74 4 972 3639 4 MP
PP
0 sg
2 81 -71 -8 -5 -77 74 4 972 3639 5 MP stroke
c51
-68 -13 -4 -73 71 8 970 3558 4 MP
PP
0 sg
1 78 -68 -13 -4 -73 71 8 970 3558 5 MP stroke
c51
-69 -21 1 -68 68 13 969 3480 4 MP
PP
0 sg
0 76 -69 -21 1 -68 68 13 969 3480 5 MP stroke
c51
-71 -31 4 -64 69 21 969 3404 4 MP
PP
0 sg
-2 74 -71 -31 4 -64 69 21 969 3404 5 MP stroke
c69
-76 -43 9 -60 71 31 971 3330 4 MP
PP
0 sg
-4 72 -76 -43 9 -60 71 31 971 3330 5 MP stroke
c19
-86 -51 10 -57 76 43 975 3258 4 MP
PP
0 sg
0 65 -86 -51 10 -57 76 43 975 3258 5 MP stroke
c51
-69 -2 -11 -75 75 0 1046 3643 4 MP
PP
0 sg
5 77 -69 -2 -11 -75 75 0 1046 3643 5 MP stroke
c26
-65 -8 -8 -67 69 2 1041 3566 4 MP
PP
0 sg
4 73 -65 -8 -8 -67 69 2 1041 3566 5 MP stroke
c24
-62 -19 -2 -57 65 8 1037 3493 4 MP
PP
0 sg
-1 68 -62 -19 -2 -57 65 8 1037 3493 5 MP stroke
c26
-68 -28 10 -55 62 19 1038 3425 4 MP
PP
0 sg
-4 64 -68 -28 10 -55 62 19 1038 3425 5 MP stroke
c69
-75 -37 16 -51 68 28 1042 3361 4 MP
PP
0 sg
-9 60 -75 -37 16 -51 68 28 1042 3361 5 MP stroke
c19
-85 -52 20 -42 75 37 1051 3301 4 MP
PP
0 sg
-10 57 -85 -52 20 -42 75 37 1051 3301 5 MP stroke
c27
-78 18 -11 -93 78 0 1121 3643 4 MP
PP
0 sg
11 75 -78 18 -11 -93 78 0 1121 3643 5 MP stroke
c48
-43 -1 -43 -48 78 -18 1110 3568 4 MP
PP
0 sg
8 67 -43 -1 -43 -48 78 -18 1110 3568 5 MP stroke
c39
-57 -20 12 -38 43 1 1102 3501 4 MP
PP
0 sg
2 57 -57 -20 12 -38 43 1 1102 3501 5 MP stroke
c28
-61 -24 14 -51 57 20 1100 3444 4 MP
PP
0 sg
-10 55 -61 -24 14 -51 57 20 1100 3444 5 MP stroke
c26
-65 -29 20 -46 61 24 1110 3389 4 MP
PP
0 sg
-16 51 -65 -29 20 -46 61 24 1110 3389 5 MP stroke
c19
-92 -39 47 -32 65 29 1126 3338 4 MP
PP
0 sg
-20 42 -92 -39 47 -32 65 29 1126 3338 5 MP stroke
c69
-83 -1 -2 -85 85 0 899 4317 4 MP
PP
0 sg
0 86 -83 -1 -2 -85 85 0 899 4317 5 MP stroke
c69
-82 0 -1 -86 83 1 899 4231 4 MP
PP
0 sg
0 85 -82 0 -1 -86 83 1 899 4231 5 MP stroke
c69
-80 -1 -2 -85 82 0 899 4146 4 MP
PP
0 sg
0 86 -80 -1 -2 -85 82 0 899 4146 5 MP stroke
c69
-79 -2 -1 -85 80 1 899 4060 4 MP
PP
0 sg
0 86 -79 -2 -1 -85 80 1 899 4060 5 MP stroke
c69
-78 -2 -1 -85 79 2 899 3974 4 MP
PP
0 sg
0 85 -78 -2 -1 -85 79 2 899 3974 5 MP stroke
c69
-77 -3 -1 -85 78 2 899 3889 4 MP
PP
0 sg
0 86 -77 -3 -1 -85 78 2 899 3889 5 MP stroke
c69
-75 -4 -2 -85 77 3 899 3803 4 MP
PP
0 sg
0 86 -75 -4 -2 -85 77 3 899 3803 5 MP stroke
c69
-73 -7 -2 -82 75 4 899 3717 4 MP
PP
0 sg
0 85 -73 -7 -2 -82 75 4 899 3717 5 MP stroke
c69
-83 0 -4 -85 85 0 984 4317 4 MP
PP
0 sg
2 85 -83 0 -4 -85 85 0 984 4317 5 MP stroke
c69
-82 -1 -2 -85 83 0 982 4232 4 MP
PP
0 sg
1 86 -82 -1 -2 -85 83 0 982 4232 5 MP stroke
c69
-81 -1 -3 -85 82 1 981 4146 4 MP
PP
0 sg
2 85 -81 -1 -3 -85 82 1 981 4146 5 MP stroke
c69
-80 -1 -2 -85 81 1 979 4061 4 MP
PP
0 sg
1 85 -80 -1 -2 -85 81 1 979 4061 5 MP stroke
c69
-79 -1 -2 -85 80 1 978 3976 4 MP
PP
0 sg
1 85 -79 -1 -2 -85 80 1 978 3976 5 MP stroke
c69
-77 -2 -3 -84 79 1 977 3891 4 MP
PP
0 sg
1 85 -77 -2 -3 -84 79 1 977 3891 5 MP stroke
c69
-76 -3 -3 -84 77 2 976 3806 4 MP
PP
0 sg
2 85 -76 -3 -3 -84 77 2 976 3806 5 MP stroke
c48
-74 -4 -4 -81 76 3 974 3721 4 MP
PP
0 sg
2 82 -74 -4 -4 -81 76 3 974 3721 5 MP stroke
c69
-83 0 -5 -85 84 0 1069 4317 4 MP
PP
0 sg
4 85 -83 0 -5 -85 84 0 1069 4317 5 MP stroke
c69
-81 -1 -4 -84 83 0 1065 4232 4 MP
PP
0 sg
2 85 -81 -1 -4 -84 83 0 1065 4232 5 MP stroke
c69
-81 -1 -3 -85 81 1 1063 4147 4 MP
PP
0 sg
3 85 -81 -1 -3 -85 81 1 1063 4147 5 MP stroke
c69
-80 -1 -3 -85 81 1 1060 4062 4 MP
PP
0 sg
2 85 -80 -1 -3 -85 81 1 1060 4062 5 MP stroke
c69
-79 -2 -3 -84 80 1 1058 3977 4 MP
PP
0 sg
2 85 -79 -2 -3 -84 80 1 1058 3977 5 MP stroke
c69
-78 -1 -4 -85 79 2 1056 3892 4 MP
PP
0 sg
3 84 -78 -1 -4 -85 79 2 1056 3892 5 MP stroke
c48
-77 -2 -4 -83 78 1 1053 3808 4 MP
PP
0 sg
3 84 -77 -2 -4 -83 78 1 1053 3808 5 MP stroke
c48
-75 0 -6 -83 77 2 1050 3724 4 MP
PP
0 sg
4 81 -75 0 -6 -83 77 2 1050 3724 5 MP stroke
c69
-82 -1 -8 -84 85 0 1153 4317 4 MP
PP
0 sg
5 85 -82 -1 -8 -84 85 0 1153 4317 5 MP stroke
c69
-81 0 -5 -85 82 1 1148 4232 4 MP
PP
0 sg
4 84 -81 0 -5 -85 82 1 1148 4232 5 MP stroke
c69
-80 0 -4 -85 81 0 1144 4148 4 MP
PP
0 sg
3 85 -80 0 -4 -85 81 0 1144 4148 5 MP stroke
c69
-79 -1 -4 -84 80 0 1141 4063 4 MP
PP
0 sg
3 85 -79 -1 -4 -84 80 0 1141 4063 5 MP stroke
c69
-79 -1 -3 -84 79 1 1138 3978 4 MP
PP
0 sg
3 84 -79 -1 -3 -84 79 1 1138 3978 5 MP stroke
c69
-80 -1 -3 -85 79 1 1135 3894 4 MP
PP
0 sg
4 85 -80 -1 -3 -85 79 1 1135 3894 5 MP stroke
c69
-79 0 -5 -84 80 1 1131 3809 4 MP
PP
0 sg
4 83 -79 0 -5 -84 80 1 1131 3809 5 MP stroke
c48
-78 0 -7 -83 79 0 1127 3726 4 MP
PP
0 sg
6 83 -78 0 -7 -83 79 0 1127 3726 5 MP stroke
c44
44 16 -22 35 -23 -19 2199 3534 4 MP
PP
0 sg
1 -32 44 16 -22 35 -23 -19 2199 3534 5 MP stroke
c25
-9 20 -6 -14 1 -14 2205 3469 4 MP
PP
0 sg
14 8 -9 20 -6 -14 1 -14 2205 3469 5 MP stroke
c14
26 11 -12 15 -15 -2 2255 3457 4 MP
PP
0 sg
1 -24 26 11 -12 15 -15 -2 2255 3457 5 MP stroke
c39
43 -27 30 50 -49 13 1887 3495 4 MP
PP
0 sg
-24 -36 43 -27 30 50 -49 13 1887 3495 5 MP stroke
c15
-25 13 -33 -14 34 -35 1911 3531 4 MP
PP
0 sg
24 36 -25 13 -33 -14 34 -35 1911 3531 5 MP stroke
gr

1372 2850 mt 
(Resolution: number of nodes per ) s
%%IncludeResource: font Symbol
/Symbol /ISOLatin1Encoding 120 FMSR

3139 2850 mt 
(l) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

3204 2910 mt 
(min) s
1 sg
0 1783 257 0 0 -1783 3990 4615 4 MP
PP
-257 0 0 1783 257 0 0 -1783 3990 4615 5 MP stroke
gs 3990 2832 258 1784 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    00ffff 04faff 08f6ff 0cf2ff 10eeff 14eaff 18e6ff 1ce2ff 20deff 24daff 
    28d6ff 2cd2ff 30ceff 34caff 38c6ff 3cc2ff 40beff 44baff 48b6ff 4cb2ff 
    50aeff 55aaff 59a5ff 5da1ff 619dff 6599ff 6995ff 6d91ff 718dff 7589ff 
    7985ff 7d81ff 817dff 8579ff 8975ff 8d71ff 916dff 9569ff 9965ff 9d61ff 
    a15dff a559ff aa55ff ae50ff b24cff b648ff ba44ff be40ff c23cff c638ff 
    ca34ff ce30ff d22cff d628ff da24ff de20ff e21cff e618ff ea14ff ee10ff 
    f20cff f608ff fa04ff ff00ff 
  >
] setcolorspace } bdef mwscm
gs np 3990 2832 mt 0 1783 rl 257 0 rl 0 -1783 rl cp c np
[257 0 0 1783 3990 2832] cc
<< % Image dictionary
  /ImageType 1
  /Width 1 /Height 64
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [1.000000 0 0 64.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
5<h=p4?GSa3&``Q1c$mA0J>%1/1W2!-mp>f,U4KV+<MXF*#fe6(`*r&'GD)k&.]6[$k!CK#R:P;"9S]+
!.Y
~>
gr
gr

4 w
DO
SO
6 w
0 sg
3990 4615 mt 4247 4615 L
3990 2832 mt 4247 2832 L
3990 4615 mt 3990 2832 L
4247 4615 mt 4247 2832 L
3990 4615 mt 4247 4615 L
4247 4615 mt 4247 2832 L
4247 4308 mt 4229 4308 L
3990 4308 mt 4007 4308 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

4281 4352 mt 
(10) s
4247 3992 mt 4229 3992 L
3990 3992 mt 4007 3992 L
4281 4036 mt 
(15) s
4247 3676 mt 4229 3676 L
3990 3676 mt 4007 3676 L
4281 3720 mt 
(20) s
4247 3360 mt 4229 3360 L
3990 3360 mt 4007 3360 L
4281 3404 mt 
(25) s
4247 3044 mt 4229 3044 L
3990 3044 mt 4007 3044 L
4281 3088 mt 
(30) s
3990 4615 mt 4247 4615 L
3990 2832 mt 4247 2832 L
3990 4615 mt 3990 2832 L
4247 4615 mt 4247 2832 L

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial -106 2827 a Fp(Figure)28 b(2.3:)41 b(Chec)m(king)29
b(stabilit)m(y)h(\(top\))f(and)e(resolution)i(\(b)s(ottom\))g(with)f
Fg(PRE/ViewMeshQuality.m)p Fp(,)23 b(for)28 b(the)-106
2940 y(example)34 b(in)f Fg(EXAMPLES/UsingEMC2/)p Fp(.)44
b(The)33 b(left)h(panels)g(sho)m(w)f(the)h(lo)s(cal)g(v)-5
b(alue)34 b(of)g(the)f(in)m(v)m(erse)i(of)e(the)h(CFL)-106
3053 y(n)m(um)m(b)s(er)27 b(\(top\))i(and)e(of)i(the)f(n)m(um)m(b)s(er)
f(of)h(no)s(des)g(p)s(er)f(minim)m(um)g(w)m(a)m(v)m(elength)k(\(b)s
(ottom\))e(on)f(eac)m(h)i(elemen)m(t.)41 b(The)-106 3166
y(righ)m(t)31 b(panels)f(are)h(histograms)g(of)f(these)h(v)-5
b(alues)31 b(\(n)m(um)m(b)s(er)e(of)i(elemen)m(ts\).)42
b(See)31 b(text)g(for)f(more)h(explanations.)p Black
-106 3440 a Fs(2.4)135 b(V)-11 b(erifying)45 b(the)h(settings)g(and)e
(running)h(a)g(sim)l(ulation)-106 3726 y Fp(Once)29 b(the)h(co)s(de)g
(has)f(b)s(een)g(successfully)g(compiled,)i(the)e(sim)m(ulation)i(can)f
(b)s(e)f(started)h(b)m(y)f(t)m(yping)i Fg(sem2dsolve)-106
3839 y Fp(from)g(y)m(our)h(w)m(orking)g(directory)g(\(where)f
Fg(Par.inp)f Fp(is)i(lo)s(cated\).)46 b(If)31 b(y)m(ou)h(w)m(an)m(t)h
(the)f(computations)g(to)h(b)s(e)e(done)-106 3952 y(in)f(bac)m(kground)
g(and)g(sa)m(v)m(e)i(the)e(screen)h(output)f(in)g(a)g(\014le)h(\(e.g.)
42 b Fg(info)p Fp(\))30 b(y)m(ou)g(can)h(t)m(yp)s(e)g
Fg(sem2dpack)45 b(>)i(info)g(&)p Fp(.)-106 4148 y(A)36
b(t)m(ypical)h(screen)f(output)f(of)h(SEM2D,)h(corresp)s(onding)e(to)h
(the)g(\014rst)f(example,)j(is)e(sho)m(wn)f(on)h(the)g(follo)m(wing)
-106 4260 y(pages.)k(The)27 b(parameters)g(of)h(the)f(sim)m(ulation)h
(are)g(rep)s(orted)f(there)g(in)g(a)h(self-explanatory)g(form)f
(together)i(with)-106 4373 y(c)m(hec)m(king)36 b(information.)53
b(Y)-8 b(ou)35 b(are)g(advised)f(to)h(do)f(a)h(\014rst)f(run)e(with)j
(the)f(\015ag)i Fg(iexec)d Fp(of)i(the)f Fg(GENERAL)e
Fp(input)-106 4486 y(blo)s(c)m(k)37 b(switc)m(hed)g(o\013)g(and)f(c)m
(hec)m(k)i(all)g(these)f(parameters)g(prior)f(to)h(the)g(real)g(sim)m
(ulation.)61 b(In)35 b(particular,)k(y)m(ou)-106 4599
y(should)29 b(alw)m(a)m(ys)j(v)m(erify)f(that:)p Black
30 4885 a Fo(\017)p Black 46 w Fp(the)39 b(total)h(CPU)e(time)h(an)f
(memory)g(required)g(for)g(the)g(sim)m(ulation)i(are)e(as)h(m)m(uc)m(h)
f(as)h(y)m(ou)g(can)f(a\013ord.)121 4998 y(More)31 b(details)g(ab)s
(out)g(memory)f(usage)h(can)f(b)s(e)g(found)f(in)h Fg(MemoryInfo)p
2641 4998 29 4 v 32 w(sem2d.txt)p Fp(.)p Black 30 5183
a Fo(\017)p Black 46 w Fp(the)g(CFL)f(stabilit)m(y)i(n)m(um)m(b)s(er)
1171 5150 y Fl(3)1240 5183 y Fp(is)f(not)f(more)h(than)f(0.55)i(or)f
(0.60.)42 b(If)29 b(the)h(computation)g(is)g(unstable,)f(the)121
5296 y(maxim)m(um)34 b(displacemen)m(t)h(\(ec)m(ho)s(ed)g(ev)m(ery)i
Fg(ItInfo)32 b Fp(time)j(steps\))f(increases)h(exp)s(onen)m(tially)h
(with)e(time.)121 5409 y(Stabilit)m(y)e(can)e(b)s(e)g(con)m(trolled)i
(b)m(y)e(decreasing)j Fg(Dt)c Fp(or)i Fg(Courant)d Fp(in)i
Fg(Par.inp)p Fp(.)p Black -106 5487 1578 4 v -3 5541
a Fj(3)32 5573 y Fi(The)24 b(lo)r(cal)i(CFL)e(n)n(um)n(b)r(er)f(dep)r
(ends)g(on)h(the)f(timestep)i(\001)p Ff(t)p Fi(,)f(the)f(P-v)n(elo)r
(cit)n(y)h(mo)r(del)h(and)e(the)h(grid)g(spacing)h(\001)p
Ff(x)p Fi(,)f(and)f(is)i(de\014ned)-106 5664 y(as)33
b Ff(V)40 5672 y Fe(P)124 5664 y Fi(\001)p Ff(t=)p Fi(\001)p
Ff(x)p Fi(.)56 b(Note)33 b(that)g(\001)p Ff(x)g Fi(is)g(m)n(uc)n(h)f
(smaller)j(than)d(the)h(elemen)n(t)g(size)h(\(of)g(order)f
Fh(Ngll)2775 5632 y Fj(2)2844 5664 y Fi(times)g(smaller\),)k(b)r
(ecause)c(SEM)-106 5755 y(in)n(ternally)24 b(sub)r(divides)h(eac)n(h)g
(elemen)n(t)f(on)n(to)h(a)g(non-regular)g(grid)g(of)31
b Fh(Ngll)p Fd(\002)p Fh(Ngll)c Fi(no)r(des)d(that)h(cluster)g
(non-linearly)g(near)f(elemen)n(t)-106 5847 y(edges.)p
Black Black Black eop end
%%Page: 16 16
TeXDict begin 16 15 bop Black -106 -193 a Fn(2.4)35 b(V)-9
b(erifying)36 b(the)e(settings)h(and)g(running)h(a)e(sim)m(ulation)1502
b(16)p -106 -155 3945 4 v Black Black 30 127 a Fo(\017)p
Black 46 w Fp(the)37 b(n)m(um)m(b)s(er)f(of)i(grid)f(p)s(oin)m(ts)g(p)s
(er)f(w)m(a)m(v)m(elength)1850 94 y Fl(4)1927 127 y Fp(is)h(not)g(less)
h(than)f(4.5)h(or)g(5.)61 b(T)m(ypical)39 b(symptoms)d(of)121
240 y(p)s(o)s(or)f(resolution)i(are)g(unexp)s(ected)f(ringing)g(and)g
(disp)s(ersion)f(of)h(the)h(higher)f(frequencies)g(in)g(syn)m(thetic)
121 353 y(seismograms.)41 b(Ho)m(w)m(ev)m(er,)32 b(in)c(realistic)j
(applications)g(in)e(heterogeneous)h(media,)g(these)g(spurious)d
(e\013ects)121 466 y(ma)m(y)34 b(b)s(e)f(hard)g(to)h(distinguish)f
(from)g(a)h(ph)m(ysically)h(complex)f(w)m(a)m(v)m(e\014eld,)i(so)e
(mesh)f(resolution)i(m)m(ust)e(b)s(e)121 578 y(c)m(hec)m(k)m(ed)g(b)s
(eforehand.)41 b(If)30 b(resolution)i(is)f(to)s(o)h(lo)m(w)f(the)g
(mesh)g(ma)m(y)g(b)s(e)g(re\014ned)e(b)m(y)i(an)m(y)h(of)f(t)m(w)m(o)h
(metho)s(ds:)121 691 y(increasing)38 b Fg(Ngll)e Fp(in)g
Fg(Par.inp)e Fp(\(p-re\014nemen)m(t\))j(or)g(generating)g(a)g(more)g
(dense)f(mesh)g(\(h-re\014nemen)m(t\).)121 804 y(If)43
b(y)m(ou)h(w)m(ere)f(using)g(EMC2)h(as)f(a)h(mesh)f(generator,)48
b(the)c(script)f Fg(PRE/href.csh)d Fp(can)j(b)s(e)g(useful)g(for)121
917 y(h-re\014nemen)m(t.)p Black 30 1105 a Fo(\017)p
Black 46 w Fp(The)c(qualit)m(y)h(of)f(the)g(mesh)g(can)g(b)s(e)g(insp)s
(ected)g(with)g(the)g(Matlab)h(script)f Fg(PRE/ViewMeshQuality.m)121
1218 y Fp(\(see)31 b(Figure)g(2.3\).)43 b(High)30 b(con)m(trast)i(b)s
(et)m(w)m(een)f(the)g(lo)s(cal)g(CFL)g(v)-5 b(alues)30
b(m)m(ust)h(b)s(e)e(a)m(v)m(oided)j(when)e(p)s(ossible,)121
1331 y(it)43 b(degrades)g(p)s(erformance.)77 b(High)43
b(CFL)f(v)-5 b(alues)43 b(clustered)g(in)f(a)h(small)g(n)m(um)m(b)s(er)
e(of)i(elemen)m(ts)h(is)f(an)121 1444 y(undesired)33
b(pattern.)55 b(These)34 b(elemen)m(ts)j(force)e(the)g(timestep)h
Fg(Dt)e Fp(to)i(b)s(e)e(smaller)i(than)e(required)h(b)m(y)f(the)121
1556 y(rest)i(of)f(the)h(mesh.)55 b(Con)m(v)m(ersely)-8
b(,)39 b(elemen)m(ts)e(with)e(v)m(ery)h(lo)m(w)g(CFL)f(can)h(in)f
(principle)g(ha)m(v)m(e)i(a)f(larger)g Fg(Dt)121 1669
y Fp(or)31 b(a)h(larger)g(size)g(and)e(still)i(b)s(e)f(stable.)44
b(Our)30 b(co)s(de)h(w)m(orks)g(with)g(the)g(same)h Fg(Dt)f
Fp(ev)m(erywhere,)h(so)f(the)g(only)121 1782 y(solution)36
b(is)f(to)h(try)e(and)h(design)g(a)g(mesh)g(with)g(larger)g(elemen)m
(ts)i(in)e(the)g(regions)g(of)h(v)m(ery)f(lo)m(w)h(CFL.)f(If)121
1895 y(y)m(ou)g(try)g(this,)g(consider)g(at)g(the)g(same)g(time)h(the)f
(resolution)g(issue:)49 b(do)35 b(not)f(mak)m(e)i(y)m(our)f(elemen)m
(ts)h(to)s(o)121 2008 y(large.)k(The)25 b(lo)s(cal)h(resolution)g
(should)e(not)h(b)s(e)g(m)m(uc)m(h)g(higher)g(than)g(needed,)h(this)f
(degrades)g(p)s(erformance:)121 2121 y(elemen)m(ts)32
b(with)f(lot)h(more)g(than)e(5)i(no)s(des)e(p)s(er)g(w)m(a)m(v)m
(elength)k(could)d(ha)m(v)m(e)h(a)g(larger)g(size)g(and)e(still)i(b)s
(e)f(w)m(ell)121 2234 y(resolv)m(ed.)41 b(Resolution)31
b(and)e(stabilit)m(y)j(ma)m(y)e(often)h(app)s(ear)e(as)h(comp)s(eting)h
(constrain)m(ts)f(in)g(mesh)f(design,)121 2347 y(but)22
b(trade-o\013s)h(are)g(resolv)m(ed)g(through)f(exp)s(erience.)38
b(Y)-8 b(ou)23 b(can)g(also)g(c)m(hec)m(k)h(the)e(lo)s(cal)i(CFL)e(and)
g(resolution)121 2460 y(with)30 b Fg(gv)47 b(Stability)p
909 2460 29 4 v 32 w(sem2d.ps)28 b Fp(and)i Fg(gv)47
b(Resolution)p 2153 2460 V 32 w(sem2d.ps)p Fp(.)p Black
-106 2541 1578 4 v -3 2595 a Fj(4)32 2627 y Fi(The)26
b(minim)n(um)h(w)n(a)n(v)n(elength)f Ff(\025)977 2635
y Fe(min)1122 2627 y Fi(dep)r(ends)g(on)g(the)g(S-v)n(elo)r(cit)n(y)g
(mo)r(del)g(and)g(on)h(the)f(highest)g(frequency)g Ff(f)3283
2635 y Fe(max)3436 2627 y Fi(y)n(ou)g(w)n(an)n(t)g(to)-106
2718 y(resolv)n(e)g(\(the)f(maxim)n(um)h(frequency)f(of)h(the)f
(source\))h(through)g Ff(\025)1835 2726 y Fe(min)1975
2718 y Fi(=)21 b(min\()p Ff(V)2259 2726 y Fe(S)2303 2718
y Fi(\))p Ff(=f)2408 2726 y Fe(max)2536 2718 y Fi(.)p
Black Black Black eop end
%%Page: 17 17
TeXDict begin 17 16 bop Black -106 -193 a Fn(2.4)35 b(V)-9
b(erifying)36 b(the)e(settings)h(and)g(running)h(a)e(sim)m(ulation)1502
b(17)p -106 -155 3945 4 v Black 91 5189 a @beginspecial
24 @llx 24 @lly 571 @urx 818 @ury 4260 @rwi @setspecial
%%BeginDocument: ../FIGURES/info.ex1_1.ps
%!PS-Adobe-3.0
%%Title: info
%%For: ampuero
%%Creator: a2ps version 4.13
%%CreationDate: Mon Oct 13 18:20:34 2003
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1 0
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() N
( -------------------------------------------------------------------------------) N
( -------------------------------------------------------------------------------) N
( Program  S P E C F E M : start) N
( -------------------------------------------------------------------------------) N
( -------------------------------------------------------------------------------) N
( Example 1: a box                                  ) N
( -------------------------------------------------------------------------------) N
( -------------------------------------------------------------------------------) N
( D a t e : 13 - 10 - 2003                                 T i m e  : 18:18:55) N
( -------------------------------------------------------------------------------) N
( -------------------------------------------------------------------------------) N
() N
() N
( E c h o   C o n t r o l   c a r d) N
( ==================================) N
() N
(     Echo during input phase. . . . . . . . . . . \(Verbose\(1\)\) = T) N
(     Echo during init phase . . . . . . . . . . . \(Verbose\(2\)\) = T) N
(     Echo during check phase. . . . . . . . . . . \(Verbose\(3\)\) = T) N
(     Echo during run phase. . . . . . . . . . . . \(Verbose\(4\)\) = T) N
(     Display frequency  . . . . . . . . . . . . .\(ItSnapshots\) = 100) N
(     First display. . . . . . . . . . . . . . . .\(ItSnapshot1\) = 0) N
(     Basic info output frequency. . . . . . . . . . . \(ItInfo\) = 100) N
() N
() N
() N
( G e n e r a l   P a r a m e t e r s   C o n t r o l   c a r d) N
( ==================================) N
() N
(     Execution mode . . . . . . . . . . . . . . . \(iexec\) =1) N
(             ==  0     data check only                     ) N
(             ==  1     resolution                          ) N
(     Number of nodes per edge . . . . . . . . . . .\(ngll\) = 6) N
(     Highest frequency to be resolved . . . . . . .\(fmax\) =    7.500E+00) N
() N
() N
( I t e r a t i o n   i n f o s ) N
( =============================) N
() N
(     The number of steps will be set later) N
(     The timestep will be set later) N
(     Courant number. . . . . . . . \(Courant\) = .50) N
(     Total simulation duration . \(TotalTime\) =    2.000E+00) N
() N
() N
() N
( N e w m a r k   p a r a m e t e r s ) N
( ===================================) N
() N
(     First integration parameter . . . .\(alpha\) = .500) N
(     Second integration parameter. . . . \(beta\) = .500) N
(     Third time integration parameter . \(gamma\) = 1.000) N
(     Number of corrector iterations . . \(niter\) = 1) N
() N
() N
( M a t e r i a l   s e t s :   2 D  e l a s t i c i t y) N
( ======================================================) N
() N
(     Number of material sets . . . . . . . . . =    1) N
() N
(info) (Page 1/5) (13 oct 03 18:19) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(     ------------------------) N
(     Material set number . . . . . . . . . . . =    1) N
() N
() N
( B o u n d a r y   C o n d i t i o n s   C o n t r o l   c a r d) N
( ================================================================) N
() N
() N
(    Boundary Tag  = 1) N
(      Type = Absorbing boundary Stacey              ) N
() N
(    Boundary Tag  = 2) N
(      Type = Absorbing boundary Stacey              ) N
() N
(    Boundary Tag  = 3) N
(      Type = Absorbing boundary Stacey              ) N
() N
(    Boundary Tag  = 4) N
(      Type = Absorbing boundary Stacey              ) N
() N
() N
( S o u r c e  F u n c t i o n s) N
( ============================) N
() N
(     X-position \(meters\). . . . . . . . . . =   0.000E+00) N
(     Y-position \(meters\). . . . . . . . . . =   0.000E+00) N
(     Function Type. . . . . . . . . . . . . = Ricker) N
(     Fundamental frequency \(Hz\) . . . . . . =   3.000E+00) N
(     Time delay \(s\) . . . . . . . . . . . . = 350.000E-03) N
(     Multiplying factor . . . . . . . . . . =   1.000E+09) N
(     Source Type. . . . . . . . . . . . . . = Collocated Force) N
(     Angle from vertical up . . . . . \(deg\) =.00) N
() N
() N
( R e c e i v e r s   c o n t r o l   c a r d) N
( ==================================) N
() N
(     Number of receivers . . . . . . . . . . . . \(number\) = 10) N
(     Subsampling for seismograms recording . . . .\(isamp\) = 20) N
(     Field recorded. . . . . . . . . . . . . . . .\(field\) = V) N
(     Axis of the seismogram plot . . . . . . . . .\(irepr\) = D) N
() N
() N
( P l o t   C o n t r o l   c a r d) N
( ==================================) N
() N
(     Save results in PS file or not . . . . .\(postscript\) = T) N
(     Save results in AVS file or not. . . . . . . . \(avs\) = F) N
(     Save results in Visual3 file or not. . . . \(visual3\) = F) N
(     Selected field . . . . . . . . . . . . . . . \(field\) = V) N
() N
() N
( P o s t S c r i p t   C o n t r o l   c a r d) N
( ==================================) N
() N
(     Plot mesh . . . . . . . . . . . . . . . . . . \(mesh\) = F) N
(     Numbered mesh . . . . . . . . . . . . . . .\(numbers\) = F) N
(     Plot model  . . . . . . . . . . . . . . \(cpmodel\) = F) N
(     Subsampling for velocity model display  . \(isubsamp\) = 2) N
(     Color display . . . . . . . . . . . . . . . .\(color\) = F) N
(     Plot boundaries . . . . . . . . . . . . \(boundaries\) = T) N
(info) (Page 2/5) (13 oct 03 18:19) title
border
grestore
(Imprim\351 par ampuero) rhead
(info) (1/3) (lundi 13 octobre 2003) footer
end % of iso1dict
pagesave restore
showpage
%%Trailer
end
%%EOF

%%EndDocument
 @endspecial Black Black eop end
%%Page: 18 18
TeXDict begin 18 17 bop Black -106 -193 a Fn(2.4)35 b(V)-9
b(erifying)36 b(the)e(settings)h(and)g(running)h(a)e(sim)m(ulation)1502
b(18)p -106 -155 3945 4 v Black 91 5189 a @beginspecial
24 @llx 24 @lly 571 @urx 818 @ury 4260 @rwi @setspecial
%%BeginDocument: ../FIGURES/info.ex1_2.ps
%!PS-Adobe-3.0
%%Title: info
%%For: ampuero
%%Creator: a2ps version 4.13
%%CreationDate: Mon Oct 13 18:20:34 2003
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1 0
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (3-4) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(     Plot symbols  . . . . . . . . . . . . . . \(symbols\) = T) p n
(     Plot vector fields  . . . . . . . . . . . .\(vectors\) = F) N
(     Percentage of cut for vector plots. . . . .\(cutvect\) = 1.00) N
(     Max size of arrows. . . . . . . . . . . . .\(sizemax\) = 1.00) N
(     Angle of vector arrows. . . . . . . . . . . .\(ArrowHeadAngle\) = 20.00) N
(     X-Scaling . . . . . . . . . . . . . . . . . \(scalex\) = 1.00) N
(     Z-Scaling . . . . . . . . . . . . . . . . . \(scalez\) = 1.00) N
(     A-Scaling . . . . . . . . . . . . . . .\(ScaleField\) = .00) N
(     Head to body ratio for arrows . . . . . . .\(ArrowHBRatio\) = .40) N
(     X origin. . . . . . . . . . . . . . . . . . \(PageX0\) = 2.20) N
(     Z origin. . . . . . . . . . . . . . . . . . \(PageZ0\) = 2.20) N
(     US letter format or French A4 . . . . . . \(usletter\) = T) N
(     Interpolate vector field  . . . . . . . . \(interpol\) = T) N
(     Points per edge for interpolation . . . . \(DisplayPts\) = 3) N
() N
() N
( E n e r g y   C o n t r o l   c a r d) N
( ==================================) N
() N
(     Compute. . . . . . . . . . . . . . . . . . . . \(set\) =F) N
() N
() N
( G L L   g r i d) N
( ===============) N
() N
(     Nodes of the global mesh  . . . . = 2601) N
(     Interior points . . . . . . . . . = 1600) N
(     Edge points \(without corners\) . . = 880) N
(     Corner points . . . . . . . . . . = 121) N
( ) N
( ) N
(===================================================) N
(=          Time solver settings                   =) N
(===================================================) N
( ) N
(    Time step \(secs\)      =    2.175E-03) N
(    Number of time steps  = 919) N
(    Total duration \(secs\) =    1.999E+00) N
(    Courant number        =  500.000E-03) N
( ) N
( ) N
(===================================================) N
(=          Mesh properties checkboard             =) N
(===================================================) N
( ) N
(    Max mesh size =   57.046E+00) N
(    Min mesh size =   23.494E+00) N
(    Ratio max/min =    2.428E+00) N
( ) N
(    CFL number    =  500.000E-03) N
( ) N
(    VS min fmax   =    8.000E+00) N
( ) N
(Dump PostScript Resolution_sem2d.ps) N
(Dump PostScript Stability_sem2d.ps) N
( Max initial displacement =  0.000000000000000E+00) N
() N
() N
( ===================================================) N
( =  R e c e i v e r s  r e a l  p o s i t i o n s  =) N
( ===================================================) N
() N
(info) (Page 3/5) (13 oct 03 18:19) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  Receiver  x-asked    z-asked   x-obtain   z-obtain     dist) p n
() N
(       1   -1.000E+03    1.000E+03   -1.000E+03    1.000E+03   0.000E+00) N
(       2 -777.778E+00    1.000E+03 -776.506E+00    1.000E+03   1.272E+00) N
(       3 -555.556E+00    1.000E+03 -576.506E+00    1.000E+03  20.950E+00) N
(       4 -333.333E+00    1.000E+03 -328.523E+00    1.000E+03   4.810E+00) N
(       5 -111.111E+00    1.000E+03 -128.523E+00    1.000E+03  17.412E+00) N
(       6  111.111E+00    1.000E+03  128.523E+00    1.000E+03  17.412E+00) N
(       7  333.333E+00    1.000E+03  328.523E+00    1.000E+03   4.810E+00) N
(       8  555.556E+00    1.000E+03  576.506E+00    1.000E+03  20.950E+00) N
(       9  777.778E+00    1.000E+03  776.506E+00    1.000E+03   1.272E+00) N
(      10    1.000E+03    1.000E+03    1.000E+03    1.000E+03   0.000E+00) N
() N
(  Maximum distance between asked and real =  20.950E+00) N
() N
( =========================================) N
( =  T i m e   e v o l u t i o n  l o o p  =) N
( =========================================) N
() N
() N
(---  CPU TIME ESTIMATES \(in seconds\) :) N
(  CPU time for initialization . . 120.000E-03) N
(  CPU time per timestep . . . . .  10.000E-03) N
(  Total solver CPU time . . . . .   9.190E+00) N
(                   \(mins\) . . . . 153.167E-03) N
(                   \(hours\). . . .   2.553E-03) N
() N
() N
(Timestep 1  t =    2.2E-03  dmax =    2.302E-06) N
() N
(Snapshot at timestep = 100) N
(Dump PostScript Snapshot_00100_sem2d.ps) N
() N
(Timestep 101  t =  219.7E-03  dmax =   15.298E-03) N
() N
(Snapshot at timestep = 200) N
(Dump PostScript Snapshot_00200_sem2d.ps) N
() N
(Timestep 201  t =  437.3E-03  dmax =    9.261E-03) N
() N
(Snapshot at timestep = 300) N
(Dump PostScript Snapshot_00300_sem2d.ps) N
() N
(Timestep 301  t =  654.8E-03  dmax =    5.291E-03) N
() N
(Snapshot at timestep = 400) N
(Dump PostScript Snapshot_00400_sem2d.ps) N
() N
(Timestep 401  t =  872.3E-03  dmax =    3.649E-03) N
() N
(Snapshot at timestep = 500) N
(Dump PostScript Snapshot_00500_sem2d.ps) N
() N
(Timestep 501  t =    1.1E+00  dmax =  833.367E-06) N
() N
(Snapshot at timestep = 600) N
(Dump PostScript Snapshot_00600_sem2d.ps) N
() N
(Timestep 601  t =    1.3E+00  dmax =  376.593E-06) N
() N
(Snapshot at timestep = 700) N
(Dump PostScript Snapshot_00700_sem2d.ps) N
(info) (Page 4/5) (13 oct 03 18:19) title
border
grestore
(Imprim\351 par ampuero) rhead
(info) (2/3) (lundi 13 octobre 2003) footer
end % of iso1dict
pagesave restore
showpage
%%Trailer
end
%%EOF

%%EndDocument
 @endspecial Black Black eop end
%%Page: 19 19
TeXDict begin 19 18 bop Black -106 -193 a Fn(2.4)35 b(V)-9
b(erifying)36 b(the)e(settings)h(and)g(running)h(a)e(sim)m(ulation)1502
b(19)p -106 -155 3945 4 v Black 91 5189 a @beginspecial
24 @llx 24 @lly 571 @urx 818 @ury 4260 @rwi @setspecial
%%BeginDocument: ../FIGURES/info.ex1_3.ps
%!PS-Adobe-3.0
%%Title: info
%%For: ampuero
%%Creator: a2ps version 4.13
%%CreationDate: Mon Oct 13 18:20:34 2003
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1 0
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (5) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(Timestep 701  t =    1.5E+00  dmax =  207.872E-06) N
() N
(Snapshot at timestep = 800) N
(Dump PostScript Snapshot_00800_sem2d.ps) N
() N
(Timestep 801  t =    1.7E+00  dmax =  107.712E-06) N
() N
(Snapshot at timestep = 900) N
(Dump PostScript Snapshot_00900_sem2d.ps) N
() N
(Timestep 901  t =    2.0E+00  dmax =   57.722E-06) N
() N
() N
(---  CPU TIME INFORMATION \(in seconds\) :) N
(  CPU time for initialization . . 120.000E-03) N
(  CPU time per timestep . . . . .  17.029E-03) N
(  Total solver CPU time . . . . .  15.650E+00) N
(                   \(mins\) . . . . 260.833E-03) N
(                   \(hours\). . . .   4.347E-03) N
() N
( Storing sismos data \(SEP format\) ...) N
( ) N
(  Sampling rate \(timesteps\) =  20) N
(  Total number of samples   =  45) N
(  Number of receivers       =  10) N
( ) N
() N
() N
( -------------------------------------------------------------------------------) N
( -------------------------------------------------------------------------------) N
( Program  S P E C F E M :  end) N
( -------------------------------------------------------------------------------) N
( -------------------------------------------------------------------------------) N
( Example 1: a box                                  ) N
( -------------------------------------------------------------------------------) N
( -------------------------------------------------------------------------------) N
( D a t e : 13 - 10 - 2003                                 T i m e  : 18:19:11) N
( -------------------------------------------------------------------------------) N
( -------------------------------------------------------------------------------) N
(info) (Page 5/5) (13 oct 03 18:19) title
border
grestore
(Imprim\351 par ampuero) rhead
(info) (3/3) (lundi 13 octobre 2003) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF

%%EndDocument
 @endspecial Black Black eop end
%%Page: 20 20
TeXDict begin 20 19 bop Black -106 -193 a Fn(2.5)35 b(The)g(di\013eren)
m(t)f(outputs)h(of)g(the)g(solv)m(er)2091 b(20)p -106
-155 3945 4 v Black -106 127 a Fs(2.5)135 b(The)45 b(di\013eren)l(t)h
(outputs)f(of)g(the)g(solv)l(er)-106 413 y Fp(In)34 b(addition)i(to)g
(the)f(screen)g(output)g(describ)s(ed)f(ab)s(o)m(v)m(e,)k
Fg(sem2dsolve)33 b Fp(generates)j(di\013eren)m(t)g(\014les)f(and)g
(scripts)-106 526 y(that)f(allo)m(w)h(the)f(user)f(to)i(con)m(trol)g
(the)f(parameters)g(of)g(the)g(sim)m(ulation)h(and)e(to)h(displa)m(y)g
(the)g(results.)51 b(All)34 b(the)-106 639 y(outputs)d(\014les)h(follo)
m(w)i(the)e(naming)g(con)m(v)m(en)m(tion)i Fg(SomeName)p
2007 639 29 4 v 32 w(sem2d.xxx)p Fp(,)c(where)i Fg(xxx)f
Fp(is)h(one)h(of)f(the)g(follo)m(wing)-106 752 y(extensions:)55
b Fg(tab)36 b Fp(for)h(ASCI)s(I)f(data)i(\014les,)h Fg(txt)d
Fp(for)h(other)h(text)g(\014les,)h Fg(dat)d Fp(for)h(binary)g(data)h
(\014les,)h(etc.)62 b(This)-106 864 y(mak)m(es)31 b(it)g(easy)g(to)g
(clean)g(a)g(w)m(orking)g(directory)g(with)f(a)g(single)h(command)g
(lik)m(e)g Fg(rm)47 b(-f)h(*)p 3065 864 V 34 w(sem2d*)p
Fp(.)-106 1191 y Fc(2.5.1)112 b(Con)m(trol)37 b(of)h(the)f(sp)s(ectral)
h(elemen)m(t)g(grid)-106 1446 y Fp(As)f(explained)h(in)g(the)g
(previous)f(section,)k Fg(sem2dsolve)35 b Fp(generates)k(t)m(w)m(o)g(P)
m(ostScript)g(\014les)f(for)f(mesh)g(qualit)m(y)-106
1558 y(c)m(hec)m(king)h(purp)s(oses:)52 b Fg(Stability)p
1130 1558 V 32 w(sem2d.ps)34 b Fp(and)i Fg(Resolution)p
2243 1558 V 32 w(sem2d.ps)p Fp(.)57 b(The)36 b(relev)-5
b(an)m(t)38 b(information)f(is)-106 1671 y(con)m(tained)31
b(in)e(the)i(\014les)e Fg(Stability)p 1186 1671 V 32
w(sem2d.tab)f Fp(and)h Fg(Resolution)p 2334 1671 V 32
w(sem2d.tab)e Fp(and)i(can)i(also)g(b)s(e)e(insp)s(ected)-106
1784 y(with)h(the)g(Matlab)i(script)e Fg(PRE/ViewMeshQuality.m)p
Fp(.)-106 2111 y Fc(2.5.2)112 b(Con)m(trol)37 b(of)h(the)f(source)h
(time)f(function)-106 2365 y Fg(sem2dsolve)j Fp(generates)45
b(a)e(\014le)h(called)g Fg(SourcesTime)p 1879 2365 V
32 w(sem2d.tab)c Fp(con)m(taining)45 b(the)e(source)h(time)g(function)
-106 2478 y(sampled)29 b(at)i(the)f(same)g(rate)h(as)f(the)h(receiv)m
(ers.)41 b(It)30 b(is)g(imp)s(ortan)m(t)h(to)f(v)m(erify)h(that)f(the)g
(sp)s(ectrum)f(of)h(the)g(source)-106 2591 y(has)f(little)j(p)s(o)m(w)m
(er)e(at)g(high)g(frequencies)f(\(those)i(that)f(corresp)s(ond)f(to)h
(less)h(than)e(5)h(no)s(des)f(p)s(er)g(w)m(a)m(v)m(elength)j(and)-106
2704 y(therefore)24 b(are)g(not)g(w)m(ell)h(resolv)m(ed\).)39
b(If)24 b(this)f(is)h(not)g(the)g(case)h(y)m(ou)f(m)m(ust)f(b)s(e)g(v)m
(ery)h(cautious)h(in)e(the)h(in)m(terpretation)-106 2817
y(of)30 b(the)h(seismograms)g(in)f(the)g(high)g(frequency)g(range,)h
(or)g(lo)m(w-pass)g(\014lter)f(the)h(results.)-106 3143
y Fc(2.5.3)112 b(Con)m(trol)37 b(and)i(visualization)g(of)e(the)h
(snapshots)-106 3398 y Fg(sem2dsolve)20 b Fp(generates)25
b(snapshots)e(at)h(a)g(constan)m(t)g(in)m(terv)-5 b(al)25
b(de\014ned)d(b)m(y)h(the)h(input)e(parameter)i Fg(ItSnapshots)p
Fp(.)-106 3511 y(These)40 b(\014les)h(are)h(called)g
Fg(Snapshot)p 1181 3511 V 32 w(XXXXX.ps)p Fp(,)g(where)f
Fg(XXXXX)e Fp(is)i(the)g(5-digits)i(time)f(step)f(n)m(um)m(b)s(er.)71
b(They)-106 3624 y(represen)m(t)33 b(b)m(y)g(default)g(the)g(v)m(elo)s
(cit)m(y)i(v)m(ector.)50 b(Suc)m(h)33 b(an)g(order)f(in)h(the)g(names)g
(of)g(the)g(\014les)g(allo)m(ws)h(the)g(user)e(to)-106
3737 y(displa)m(y)e(a)g(sort)g(of)g(\\mo)m(vie")i(of)e(the)g(result)g
(of)g(the)g(sim)m(ulation)h(b)m(y)f(simply)f(using)h(a)g(P)m(ostScript)
g(visualizer)h(lik)m(e)-106 3850 y Fg(ghostview)c Fp(or)i
Fg(gs)g Fp(and)g(t)m(yping)g(for)h(instance)g Fg(gs)47
b(Snapshot*.ps)p Fp(.)37 b(The)29 b(script)g Fg(POST/movie.csh)c
Fp(translates)-106 3963 y(the)30 b Fg(vectXXXXX.ps)d
Fp(\014les)k(in)m(to)g(a)g(mo)m(vie)g(\014le)g Fg(movie.gif)d
Fp(that)j(can)f(b)s(e)g(displa)m(y)m(ed)h(using)g Fg(xanim)46
b(movie.gif)p Fp(.)-106 4159 y(By)38 b(default,)i(snapshots)d(of)h
(requested)g(\014elds)g(are)g(also)h(exp)s(orted)e(in)h(binary)f
(format.)64 b(Snapshot)37 b(data)i(\014les)-106 4272
y(are)32 b(called)h Fg(xx)p 408 4272 V 34 w(XXX.ps)p
Fp(,)e(where)g Fg(xx)g Fp(is)h(a)h(\014eld)e(co)s(de,)i(as)f(de\014ned)
f(in)g(the)h(do)s(cumen)m(tation)h(of)f(the)g Fg(PLOTS)e
Fp(input)-106 4384 y(blo)s(c)m(k,)g(and)f Fg(XXX)f Fp(is)i(the)f
(3-digit)i(snapshot)e(n)m(um)m(b)s(er.)39 b(The)28 b(user)h(is)g
(encouraged)h(to)g(insp)s(ect)f(the)h(Matlab)h(script)-106
4497 y Fg(POST/sample)p 428 4497 V 31 w(snapshots.m)c
Fp(to)k(\014nd)e(more)i(ab)s(out)f(the)g(data)i(formats)e(and)g(their)g
(manipulation.)-106 4824 y Fc(2.5.4)112 b(Storage)38
b(and)g(visualization)h(of)f(the)f(seismograms)-106 5078
y Fp(The)d(seismograms)h(are)g(stored)f(using)g(the)h(SEP)f(format)g
(\(simple)h(binary)f(blo)s(c)m(k)h(of)g(single)g(precision)f
(\015oats\).)-106 5191 y(The)f Fb(x)p Fp(-comp)s(onen)m(t)g(\(horizon)m
(tal\))j(of)e(the)f(v)m(ector)i(\014eld)e(\(b)m(y)h(default)f(the)h(v)m
(elo)s(cit)m(y)i(\014eld\))d(is)g(stored)h(in)f(the)g(\014le)-106
5304 y Fg(Ux)p -4 5304 V 34 w(sem2d.dat)26 b Fp(and)i(the)i
Fb(z)t Fp(-comp)s(onen)m(t)f(\(v)m(ertical\))j(in)d(the)g(\014le)g
Fg(Uz)p 2252 5304 V 34 w(sem2d.dat)p Fp(.)38 b(The)28
b(seismograms)i(header)e(is)-106 5417 y(in)e(the)h(\014le)g
Fg(SeisHeader)p 778 5417 V 31 w(sem2d.hdr)p Fp(.)37 b(Its)27
b(second)g(line)g(con)m(tains)h(the)f(sampling)f(timestep)i
Fg(DT)p Fp(,)e(the)h(n)m(um)m(b)s(er)e(of)-106 5530 y(samples)h
Fg(NSAMP)f Fp(and)g(the)i(n)m(um)m(b)s(er)e(of)h(stations)i
Fg(NSTA)p Fp(.)d(The)h(stations)h(co)s(ordinates,)h Fg(XSTA)d
Fp(and)h Fg(ZSTA)p Fp(,)f(are)i(listed)-106 5643 y(from)35
b(the)h(third)e(line)i(to)h(the)f(end)e(of)i(\014le.)57
b(With)36 b(this)f(notations,)k Fg(U*)p 2403 5643 V 33
w(sem2d.dat)34 b Fp(con)m(tains)i(a)g Fg(NSAMP)p Fo(\002)p
Fg(NSTA)-106 5756 y Fp(single)31 b(precision)f(matrix.)p
Black Black eop end
%%Page: 21 21
TeXDict begin 21 20 bop Black -106 -193 a Fn(2.5)35 b(The)g(di\013eren)
m(t)f(outputs)h(of)g(the)g(solv)m(er)2091 b(21)p -106
-155 3945 4 v Black -106 127 a Fp(Y)-8 b(ou)38 b(can)h(view)f(the)h
(seismograms)f(using)g(an)m(y)h(to)s(ol)g(that)g(is)f(able)h(to)g(read)
f(the)g(SEP)f(format)i(\(whic)m(h)f(is)g(the)-106 240
y(case)32 b(of)g(almost)h(all)f(the)g(soft)m(w)m(ares)h(able)f(to)g
(deal)g(with)g(seismic)g(data\).)45 b(F)-8 b(or)33 b(y)m(our)e(con)m(v)
m(enience,)j Fg(sem2dsolve)-106 353 y Fp(generates)f(some)f
(particularly)h(easy-to-use)g(scripts)f(for)f(the)h(XSU-Seismic)h(Unix)
e(visualization)j(to)s(ol)3526 320 y Fl(5)3567 353 y
Fp(.)45 b(Once)-106 466 y(the)38 b(sim)m(ulation)g(is)g(completed)h(y)m
(ou)f(ma)m(y)g(run)e(one)i(of)g(the)g(follo)m(wing)h(scripts)e(dep)s
(ending)f(on)i(the)g(data)g(y)m(ou)-106 578 y(w)m(an)m(t)31
b(to)g(displa)m(y:)p Black 30 862 a Fo(\017)p Black 46
w Fg(Xline)p 367 862 29 4 v 33 w(sem2d.csh)d Fp(displa)m(ys)i(the)h
(whole)f(seismogram)i(under)c(XWindo)m(w)p Black 30 1046
a Fo(\017)p Black 46 w Fg(PSline)p 415 1046 V 33 w(sem2d.csh)i
Fp(do)s(es)j(the)h(same)f(as)h Fg(Xline)p Fp(,)e(but)h(exp)s(orts)g
(the)g(seismograms)h(as)g(P)m(ostScript)f(\014les,)121
1159 y Fg(UxPoly)p 415 1159 V 33 w(sem2d.ps)28 b Fp(and)i
Fg(UzPoly)p 1325 1159 V 32 w(sem2d.ps)p Black 30 1342
a Fo(\017)p Black 46 w Fg(Xtrace)p 415 1342 V 33 w(sem2d.csh)g
Fp(prompts)i(the)i(user)e(for)h(a)g(trace)i(n)m(um)m(b)s(er)c(\(b)s(et)
m(w)m(een)j(1)g(and)e(the)i(total)h(n)m(um)m(b)s(er)c(of)121
1455 y(receiv)m(ers\))h(and)e(then)g(displa)m(ys)g(this)h(particular)f
(trace)i(under)d(XWindo)m(w)p Black 30 1639 a Fo(\017)p
Black 46 w Fg(PStrace)p 463 1639 V 32 w(sem2d.csh)45
b Fp(do)s(es)h(the)i(same)f(as)g Fg(Xtrace)p Fp(,)j(but)c(exp)s(orts)h
(the)g(traces)h(as)f(P)m(ostScript)g(\014les,)121 1752
y Fg(UxTraceXXX)p 607 1752 V 32 w(sem2d.ps)36 b Fp(and)j
Fg(UzTraceXXX)p 1725 1752 V 32 w(sem2d.ps)p Fp(,)g(where)f
Fg(XXX)h Fp(is)g(the)g(n)m(um)m(b)s(er)f(of)h(that)h(partic-)121
1865 y(ular)30 b(trace)-106 2148 y(The)i(program)h Fg(post)p
648 2148 V 33 w(seis.exe)e Fp(p)s(erforms)g(similar)j(basic)f
(manipulation)g(and)f(plotting)j(\(through)d Fg(gnuplot)p
Fp(\))-106 2261 y(of)40 b(the)g(seismograms.)71 b(Its)40
b(in)m(teractiv)m(e)j(men)m(u)d(is)g(self-explanatory)-8
b(.)72 b(It)40 b(is)h(usually)f(called)h(inside)f(a)g(script,)-106
2374 y(as)e(in)f Fg(POST/seis)p 564 2374 V 32 w(b2a.csh)f
Fp(\(con)m(v)m(erts)k(all)f(seismograms)f(to)h(ASCI)s(I\))e(or)g
Fg(POST/seis)p 3031 2374 V 32 w(plot.csh)f Fp(\(plots)j(all)-106
2487 y(seismograms)31 b(together\).)-106 2683 y(The)f(script)g
Fg(POST/sample)p 868 2683 V 31 w(seis.m)f Fp(sho)m(ws)h(ho)m(w)g(to)h
(manipulate)g(and)f(plot)h(seismogram)g(data)g(in)f(Matlab.)-106
3007 y Fc(2.5.5)112 b(Storage)38 b(and)g(visualization)h(of)f(the)f
(fault)i(outputs)-106 3262 y Fp(F)-8 b(ault)29 b(data)f(from)g(dynamic)
f(rupture)g(sim)m(ulations)h(is)g(stored)g(in)g Fg(FltXX)p
2422 3262 V 33 w(sem2d.dat)p Fp(,)e(where)h Fg(XX)g Fp(is)h(the)g(b)s
(ound-)-106 3375 y(ary)37 b(tag)h(of)f(the)g(\014rst)f(side)h(of)g(the)
h(fault,)h Fg(tags\(1\))c Fp(of)i(the)g Fg(BC)p 2147
3375 V 34 w(SWFFLT)e Fp(input)h(blo)s(c)m(k.)61 b(Ev)m(ery)39
b Fg(DELT)d Fp(seconds)-106 3488 y(\()p Fg(NSAMP)30 b
Fp(total)j(output)e(times\))h Fg(NDAT)e Fp(lines)i(with)e
Fg(NPTS)h Fp(columns,)g(one)g(p)s(er)g(fault)g(no)s(de,)g(are)h
(written)3497 3455 y Fl(6)3537 3488 y Fp(.)43 b(Stress)-106
3601 y(\014elds)33 b(are)h(relativ)m(e)i(to)e(their)g(initial)h(v)-5
b(alues,)35 b(whic)m(h)e(are)h(cotained)h(in)f(the)f(\014rst)g
Fg(NDAT)g Fp(lines.)51 b(The)33 b(header)g(\014le)-106
3714 y Fg(FltXX)p 140 3714 V 33 w(sem2d.hdr)28 b Fp(con)m(tains)j(the)g
(information)f(needed)g(to)h(read)g(the)f(data)h(\014le.)41
b(Its)31 b(format,)g(line)f(b)m(y)h(line,)f(is:)p Black
5 3974 a(1.)p Black 46 w Fg(NPTS)47 b(NDAT)f(NSAMP)h(DELT)29
b Fp(\(name)i(of)f(parameters\))p Black 5 4158 a(2.)p
Black 46 w(V)-8 b(alue)31 b(of)g(parameters)g(ab)s(o)m(v)m(e)p
Black 5 4342 a(3.)p Black 46 w(Name)g(of)g(data)g(\014elds,)f
(separated)h(b)m(y)f(":")p Black 5 4525 a(4.)p Black
46 w Fg(XPTS)47 b(ZPTS)29 b Fp(\(name)i(of)f(co)s(ordinate)h(axis\))p
Black 5 4709 a(5.)p Black 46 w(from)f(here)g(to)h(the)g(end)e(of)i
(\014le,)g(a)g(t)m(w)m(o-column)g(table)h(of)e(co)s(ordinates)h(of)g
(the)f(output)g(fault)h(no)s(des)-106 4969 y(The)40 b(script)i
Fg(FltXX)p 602 4969 V 33 w(sem2d.csh)c Fp(sho)m(ws)j(ho)m(w)h(to)g
(extract)g(ASCI)s(I)e(time)i(series)g(of)f(di\013eren)m(t)h(\014elds)f
(at)h(giv)m(en)-106 5082 y(lo)s(cations)32 b(on)e(the)g(fault,)h(using)
f(Seismic)h(Unix)f(to)s(ols.)-106 5278 y(The)f(program)h
Fg(post)p 642 5278 V 33 w(fault.exe)e Fp(p)s(erforms)g(basic)j
(manipulations)f(of)g(the)g(fault)h(data,)g(including)e(con)m(v)m
(ersion)-106 5391 y(to)i(an)f(ASCI)s(I)f(\014le)h(readable)h(b)m(y)h
Fg(gnuplot)p Fp(.)39 b(Its)30 b(in)m(teractiv)m(e)j(men)m(u)d(is)g
(self-explanatory)-8 b(.)-106 5587 y(The)30 b(script)g
Fg(POST/sample)p 868 5587 V 31 w(fault.m)f Fp(sho)m(ws)h(ho)m(w)g(to)h
(manipulate)g(and)f(plot)h(fault)f(data)h(in)f(Matlab.)p
Black -106 5665 1578 4 v -3 5719 a Fj(5)32 5750 y Fi(Seismic)c(Unix)f
(is)h(freely)h(a)n(v)l(ailable)f(from)h(the)e(Colorado)j(Sc)n(ho)r(ol)e
(of)g(Mines)h(at)f Fh(http://timna.mines.edu/cwpcode)q(s)p
2387 5779 1217 4 v -3 5815 a Fj(6)32 5847 y Fi(The)g(actual)g(n)n(um)n
(b)r(er)f(of)h(columns)g(is)h Fh(NPTS)f Fi(+2:)35 b(F)-6
b(ortran)25 b(adds)h(a)g(one-w)n(ord)g(tag)g(at)g(the)f(fron)n(t)h(and)
g(end)f(of)h(eac)n(h)g(record.)p Black Black Black eop
end
%%Page: 22 22
TeXDict begin 22 21 bop Black Black -106 833 a Fm(Chapter)64
b(3)-106 1331 y Fu(Use)76 b(of)i(the)g(mesh)f(generator)h(EMC2)-106
1895 y Fs(3.1)135 b(The)45 b(mesh)g(generator)h(EMC2)-106
2181 y Fp(EMC2)37 b(is)h(one)g(of)f(the)h(few)f(public)g(domain)g(2D)i
(mesh)d(generators)j(including)e(quadrangle)g(elemen)m(ts)i(and)e(a)
-106 2294 y(Graphical)f(User)g(In)m(terface.)58 b(It)36
b(is)g(a)g(C)f(co)s(de)h(whic)m(h)g(sources)g(and)f(executables)i(can)f
(b)s(e)f(freely)h(do)m(wnloaded)-106 2407 y(from)j Fg
(http://www-rocq.inria.fr)o(/ga)o(mma/)o(cdro)o(m/w)o(ww/e)o(mc2/)o
(eng)o(.htm)p 118 2442 2530 4 v 33 w Fp(.)68 b(Although)40
b(a)g(complete)h(do)s(c-)-106 2520 y(umen)m(tation)k(can)g(b)s(e)f
(found)f(in)h(that)h(pac)m(k)-5 b(age,)51 b(w)m(e)45
b(sho)m(w)f(here)g(an)h(example)g(featuring)g(the)f(most)h(useful)-106
2633 y(functionalities.)-106 2829 y(Before)35 b(starting)f(y)m(ou)h(m)m
(ust)f(pro)m(vide)g(\014les)g(con)m(taining)h(2-column)g(data)g
(\(X,Z\),)f(without)g(headers,)h(of)f(all)h(the)-106
2942 y(p)s(oin)m(ts)30 b(needed)g(to)h(de\014ne)f(the)g(geometry)i(of)f
(the)f(mo)s(del)g(\(top)s(ograph)m(y)-8 b(,)32 b(sedimen)m(t)f(b)s
(ottom\).)-106 3138 y(Once)f(installed,)h(y)m(ou)g(can)g(run)e(EMC2)h
(b)m(y)h(t)m(yping)h Fg(emc2)p Fp(.)39 b(A)31 b(t)m(ypical)h(EMC2)e
(session)h(has)f(three)h(steps:)p Black 30 3408 a Fo(\017)p
Black 46 w Fp(CONSTR)m(UCT,)e(where)h(the)h(geometry)g(of)g(the)f(mo)s
(del)h(is)f(de\014ned,)p Black 30 3596 a Fo(\017)p Black
46 w Fp(PREP)-8 b(ARE,)30 b(where)g(the)h(prop)s(erties)f(of)g(the)h
(discrete)g(sp)s(ectral)g(elemen)m(t)g(mesh)f(are)h(de\014ned)e(and)p
Black 30 3784 a Fo(\017)p Black 46 w Fp(EDIT,)h(where)g(the)h(mesh)f
(is)g(built.)-106 4153 y Fs(3.2)135 b(Notations)-106
4439 y Fp(The)30 b(follo)m(wing)h(notations)h(are)f(assumed)e(in)h
(this)h(c)m(hapter:)p Black 30 4710 a Fo(\017)p Black
46 w Fa(\(XXX\))f Fp(=)g(clic)m(k)i(XXX)f(on)f(top)h(men)m(u)f(bar)p
Black 30 4897 a Fo(\017)p Black 46 w Fa(\(xxx\))h Fp(=)f(clic)m(k)i
(xxx)e(on)g(b)s(ottom)h(men)m(u)f(bar)p Black 30 5085
a Fo(\017)p Black 46 w Fb(<)p Fa(XXX)p Fb(<)f Fp(=)h(clic)m(k)i(XXX)e
(on)h(left)g(men)m(u)f(bar)p Black 30 5272 a Fo(\017)p
Black 46 w Fb(>)p Fa(XXX)p Fb(>)f Fp(=)h(clic)m(k)i(XXX)e(on)h(righ)m
(t)g(men)m(u)f(bar)p Black 30 5460 a Fo(\017)p Black
46 w Fa($xxx$)h Fp(=)f(en)m(ter)h(xxx)f(from)g(k)m(eyb)s(oard)g(or)h
(from)f(the)g(calculator)j(in)d(the)g(righ)m(t)h(panel)p
Black 30 5648 a Fo(\017)p Black 46 w Fa("xxx")g Fp(=)f(t)m(yp)s(e)h
(xxx)f(in)g(b)s(ottom)h(prompt)p Black 30 5835 a Fo(\017)p
Black 46 w(f)p Fa(xxx)p Fo(g)g Fp(=)f(p)s(erform)f(action)j(xxx)p
Black Black eop end
%%Page: 23 23
TeXDict begin 23 22 bop Black -106 -193 a Fn(3.3)35 b(Basic)h(step-b)m
(y-step)2839 b(23)p -106 -155 3945 4 v Black Black 30
127 a Fo(\017)p Black 46 w Fa(*xxx)30 b Fp(=)g(do)h(xxx)f(as)h(man)m(y)
f(times)h(as)g(needed)p Black 30 314 a Fo(\017)p Black
46 w Fa(n*xxx)f Fp(=)g(do)h(xxx)f(n)g(times)-106 684
y Fs(3.3)135 b(Basic)45 b(step-b)l(y-step)p Black -3
924 a Fp(STEP)29 b(I:)p Black 46 w(CONSTR)m(UCTION)p
Black 371 1137 a(1.)p Black 46 w(Switc)m(h)i(to)g(the)f(construction)h
(to)s(ol:)487 1250 y Fb(<)p Fa(CONSTRUCTION)p Fb(<)p
Black 371 1396 a Fp(2.)p Black 46 w(Load)g(the)f(p)s(oin)m(ts:)487
1509 y Fa(\(POINT\))i(\(xy)e(\014le\))h("palosgrandes.dat")487
1622 y Fp(Y)-8 b(ou)26 b(m)m(ust)f(giv)m(e)h(the)g(full)f(path)f(to)i
(y)m(our)f(p)s(oin)m(ts-\014le,)i(the)e(ro)s(ot)h(directory)g(b)s(eing)
e(the)i(one)f(where)487 1735 y(y)m(ou)31 b(launc)m(hed)f
Fg(emc2)p Fp(.)p Black 371 1881 a(3.)p Black 46 w(Reset)h(the)g
(\014gure)f(windo)m(w)g(to)h(\014t)f(all)h(p)s(oin)m(ts:)487
1994 y Fb(>)p Fa(SHO)m(W)f(ALL)p Fb(>)487 2236 y Fp(The)22
b(original)i(data)g(has)e(some)i(geometrical)h(features)e(that)h(are)f
(to)s(o)g(complex)h(to)f(b)s(e)f(meshed)h(b)m(y)487 2349
y(quadrangles,)28 b(for)e(instance)i(the)f(corners)f(at)i(the)f(N)g
(and)f(S)g(ends)g(of)h(the)g(basin,)g(y)m(ou)g(ma)m(y)h(w)m(an)m(t)487
2462 y(to)j(smo)s(oth)f(out)g(these)h(features.)41 b(Y)-8
b(ou)31 b(also)g(need)f(to)h(de\014ne)e(the)h(extreme)h(b)s(oundaries)e
(of)h(the)487 2575 y(region)k(to)g(b)s(e)f(mo)s(delled)h(\(N,S)f(and)g
(b)s(ottom)h(absorbing)f(b)s(oundaries\))f(and)h(some)h(additional)487
2688 y(p)s(oin)m(ts)c(on)f(the)h(free)g(surface)f(outside)h(the)g
(basin.)40 b(Y)-8 b(ou)30 b(m)m(ust)g(mo)s(dify)e(the)i(data)h(set)f
(\(add)f(and)487 2801 y(delete)j(p)s(oin)m(ts\):)p Black
371 2947 a(4.)p Black 46 w(Add)e(new)f(p)s(oin)m(ts:)p
Black 487 3101 a(a.)p Black 46 w(with)h(the)h(mouse:)603
3214 y Fa(\(POINT\))h(\(mouse\))g(*)p Fo(f)p Fa(click)g(in)e(\014gure)h
(windo)m(w)p Fo(g)p Black 482 3343 a Fp(b.)p Black 45
w(b)m(y)g(co)s(ordinates:)603 3456 y Fa(\(POINT\))h(\(xy)e(pt\))h(*)p
Fo(f)g Fa($x=y=$)f Fo(g)603 3569 y Fp(This)21 b(is)g(the)h(safest)g(w)m
(a)m(y)g(to)g(get)g(really)g(v)m(ertical)i(and)d(horizon)m(tal)i(b)s
(oundaries)c(needed)i(for)g(the)603 3682 y(absorbing)32
b(conditions)h(in)g(SPECFEM90.)47 b(Y)-8 b(ou)33 b(probably)f(need)g
(to)h(get)h(the)f(co)s(ordinates)603 3795 y(of)e(an)f(existen)m(t)i
(reference)f(p)s(oin)m(t:)603 3908 y Fa(\(POINT\))h Fb(<)p
Fa(QUERY)p Fb(<)d Fa(\(p)s(oint\))h(*)p Fo(f)p Fa(click)i(on)f(p)s
(oint)p Fo(g)p Black 492 4038 a Fp(c.)p Black 46 w(y)m(ou)g(can)g(also)
g(reload)g(another)g(p)s(oin)m(t-\014le)f(\(I2\))p Black
371 4192 a(5.)p Black 46 w(Delete)j(p)s(oin)m(ts,)487
4305 y Fa(\(POINT\))f Fb(<)p Fa(DESTRUCT)p Fb(<)c Fa(\(p)s(oint\))i(*)p
Fo(f)p Fa(click)i(on)f(p)s(oint)p Fo(g)487 4547 y Fp(No)m(w)e(y)m(ou)f
(m)m(ust)g(de\014ne)f(the)h(geometry)h(of)g(the)f(domains.)39
b(These)28 b(macro-blo)s(c)m(ks)h(are)g(in)m(tended)487
4660 y(to)39 b(b)s(e)f(in)m(ternally)i(meshed)e(b)m(y)g(deformed)g
(quadrangles.)65 b(Their)38 b(geometry)i(follo)m(ws)g(the)e(ge-)487
4773 y(ometry)h(of)g(the)g(geological)j(mo)s(del)c(\(one)h(domain)g(p)s
(er)e(material\).)67 b(Eac)m(h)39 b(domain)g(m)m(ust)f(b)s(e)487
4886 y(b)s(ounded)28 b(b)m(y)j(segmen)m(ts)g(or)f(splines:)p
Black 371 5032 a(6.)p Black 46 w(Segmen)m(ts:)487 5145
y Fa(\(SEGMENT\))h(\(p)s(oint\))f(2*)p Fo(f)p Fa(click)i(extreme)g(p)s
(oint)p Fo(g)p Black 371 5291 a Fp(7.)p Black 46 w(Splines:)487
5404 y Fa(\(SPLINE\))g(\(p)s(oint\))e(*)p Fo(f)p Fa(click)i(p)s(oint)p
Fo(g)487 5517 y Fp(Y)-8 b(ou)31 b(will)g(see)g(the)f(spline)g(ev)m(olv)
m(e)j(as)e(y)m(ou)f(clic)m(k)i(p)s(oin)m(ts.)p Black
-38 5730 a(STEP)d(I)s(I:)p Black 45 w(PREP)-8 b(ARE)30
b(THE)g(MESH)p Black Black eop end
%%Page: 24 24
TeXDict begin 24 23 bop Black -106 -193 a Fn(3.3)35 b(Basic)h(step-b)m
(y-step)2839 b(24)p -106 -155 3945 4 v Black Black 371
127 a Fp(1.)p Black 46 w(Switc)m(h)31 b(to)g(the)f(preparing)g(mesh)g
(to)s(ol:)487 240 y Fb(<)p Fa(PREP)g(MESH)p Fb(<)p Black
371 386 a Fp(2.)p Black 46 w(De\014ne)h(domains)f(with)g(ro)s(c)m(k)h
(n:)487 499 y Fa(\(DOMAIN)f(REF\))h($n=$)f(\(any\))h(*)p
Fo(f)p Fa(click)h(inside)e(domain)p Fo(g)487 612 y Fp(Y)-8
b(ou)31 b(will)g(see)g(the)f(domains)g(edges)h(get)h(colored)f(and)f
(the)h(domains)f(get)h(n)m(um)m(b)s(ered)e(with)h(n.)p
Black 371 758 a(3.)p Black 46 w(A)m(t)h(an)m(y)g(momen)m(t)g(y)m(ou)g
(can)g(decide)f(to)h(sho)m(w)g(or)f(not)h(the)f(domain)g(decomp)s
(osition:)487 871 y(T)-8 b(o)31 b(hide)f(the)h(domain)f(decomp)s
(osition:)487 984 y Fb(>)p Fa(REFRESH)p Fb(>)487 1097
y Fp(Sho)m(w)g(the)h(domain)f(decomp)s(osition:)487 1209
y Fa(\(SHO)m(W\))h(\(ALL\))p Black 371 1356 a Fp(4.)p
Black 46 w(Remo)m(v)m(e)h(a)f(domain)f(de\014nition:)487
1468 y Fa(\(REMO)m(VE\))h(\(DOMAINE\))g(\(any\))f Fo(f)p
Fa(click)i(inside)e(domain)p Fo(g)487 1581 y Fp(W)-10
b(ARNING:)35 b(corrections)g(to)f(the)f(domain)h(decomp)s(osition)g
(are)g(sometimes)g(displa)m(y)m(ed)g(only)487 1694 y(after)d
(refreshing)f(the)g(\014gure)g(windo)m(w.)p Black 371
1840 a(5.)p Black 46 w(No)m(w)35 b(y)m(ou)g(m)m(ust)f(de\014ne)g(the)h
(sub)s(division)d(of)j(eac)m(h)h(domain)e(in)g(quadrangle)h(\014nite)f
(elemen)m(ts.)487 1953 y(De\014ne)d(the)f(n)m(um)m(b)s(er)f(n)h(of)h
(elemen)m(ts)g(on)g(eac)m(h)g(edge:)487 2066 y Fa(\(NB)g(INTERV)-8
b(AL\))31 b($n=$)g(\(any\))f Fo(f)p Fa(click)i(edge)p
Fo(g)487 2179 y Fp(Y)-8 b(ou)30 b(will)g(see)h(the)f(in)m(termediate)h
(p)s(oin)m(ts)f(app)s(ear.)40 b(The)29 b(n)m(um)m(b)s(er)f(n)i(is)f
(dictated)i(b)m(y)f(resolution)487 2292 y(criteria)i(\(elemen)m(ts)g
(should)d(b)s(e)h(smaller)h(than)f(the)g(smallest)i(w)m(a)m(v)m
(elength)g(y)m(ou)f(w)m(an)m(t)g(to)g(prop-)487 2405
y(agate\))40 b(but)c(also)i(b)m(y)f(the)g(abilit)m(y)h(of)g(the)f
(mesher)f(to)i(build)e(a)i(quadrangulation.)60 b(This)37
b(last)487 2518 y(criterion)d(is)f(quite)g(empirical,)i(and)d(the)h
(result)g(can't)h(b)s(e)e(c)m(hec)m(k)m(ed)j(un)m(til)e(the)g(follo)m
(wing)h(step.)487 2631 y(Ho)m(w)m(ev)m(er)c(y)m(ou)e(can)f(pro)s(ceed)h
(b)m(y)f(trial)h(and)f(error,)h(emc2)h(allo)m(ws)g(y)m(ou)e(to)i(jump)d
(bac)m(k)i(and)f(forth)487 2744 y(b)s(et)m(w)m(een)k(the)g(di\013eren)m
(t)g(steps)f(of)g(the)h(meshing)f(pro)s(cedure.)p Black
371 2890 a(6.)p Black 46 w(Finally)39 b(y)m(ou)f(m)m(ust)g(de\014ne)f
(the)h(external)h(b)s(oundaries)e(of)h(the)g(mo)s(delled)g(region)g
(whic)m(h)g(will)487 3003 y(ha)m(v)m(e)h(a)f(sp)s(ecial)g(treatmen)m
(t.)64 b(Y)-8 b(ou)38 b(m)m(ust)g(asso)s(ciate)h(a)f(tag)h(\(a)f(n)m
(um)m(b)s(er\))f(to)h(eac)m(h)h(absorbing)487 3116 y(b)s(oundary)-8
b(.)38 b(No)27 b(con)m(v)m(en)m(tion)i(is)e(assumed)f(but)g(y)m(ou)h
(should)f(remem)m(b)s(er)g(those)h(tags)h(later)g(when)487
3229 y(setting)38 b(the)f(b)s(oundary)e(conditions)i(in)g(SEM2D.)h(It)f
(is)g(also)g(useful)g(to)g(assign)g(a)h(tag)g(to)f(the)487
3341 y(free)28 b(surface)g(b)s(oundary)-8 b(,)27 b(that)i(will)f(b)s(e)
g(ev)m(en)m(tually)i(used)d(b)m(y)h(SEM2D)g(to)h(lo)s(cate)h(the)e
(receiv)m(ers)487 3454 y(or)i(sources.)487 3584 y(De\014ne)h(a)f(b)s
(oundary)f(with)h(index)g(n:)487 3697 y Fa(\(LINE)i(REF\))e($n=$)h
(\(any\))g(*)p Fo(f)p Fa(click)h(edge)p Fo(g)487 3810
y Fp(Of)h(course)g(eac)m(h)i(b)s(oundary)c(can)j(b)s(e)e(comp)s(osed)h
(of)h(man)m(y)f(domain)g(edges.)50 b(Refresh)33 b(the)h(dis-)487
3923 y(pla)m(y)k(to)h(b)s(etter)f(see)g(the)g(b)s(oundaries.)61
b Fk(The)39 b(same)h(pr)-5 b(o)g(c)g(e)g(dur)g(e)43 b(applies)d(to)g
(de\014ne)g(split-no)-5 b(de)487 4036 y(interfac)g(es)36
b(such)g(as)g(faults)g(and)h(cr)-5 b(acks:)48 b(you)36
b(must)g(assign)g(a)g(di\013er)-5 b(ent)36 b(tag)g(to)g(e)-5
b(ach)36 b(side)g(of)487 4148 y(the)d(fault.)p Black
371 4295 a Fp(7.)p Black 46 w(Sa)m(v)m(e)f(y)m(our)e(w)m(ork)h(in)f
(EMC2)g(format:)487 4407 y Fb(<)p Fa(SA)-10 b(VE)p Fb(<)29
b Fa("name")487 4520 y Fp(The)h(resulting)g(\014le)h(is)f
Fg(name.emc2)p 1724 4520 29 4 v 32 w(bd)p Black -73 4733
a Fp(STEP)f(I)s(I)s(I:)p Black 44 w(EDIT)h(THE)g(MESH)p
Black 371 4945 a(1.)p Black 46 w(Switc)m(h)h(to)g(the)f(edit)h(mesh)f
(to)s(ol:)487 5058 y Fb(<)p Fa(EDIT)p 770 5058 28 4 v
33 w(MESH)p Fb(<)487 5171 y Fp(Press)g(ENTER)g(4)h(times.)487
5301 y(A)g(triangles)g(mesh)f(app)s(ears.)40 b(Y)-8 b(ou)31
b(m)m(ust)f(con)m(v)m(ert)i(it)f(to)g(a)g(quadrangle)f(mesh:)p
Black 371 5447 a(2.)p Black 46 w(Con)m(v)m(ert)h(the)g(triangle)h(mesh)
d(to)i(quadrangles:)487 5560 y Fb(<)p Fa(QUADRANGULA)-8
b(TE)p Fb(>)28 b(<)p Fa(ALL)p Fb(>)487 5673 y Fp(Y)-8
b(ou)31 b(can)g(smo)s(oth)f(the)g(mesh)g(with:)41 b Fb(<)p
Fa(REGULARIZE)p Fb(>)28 b Fa(*)p Fb(<)p Fa(ALL)p Fb(>)p
Black Black eop end
%%Page: 25 25
TeXDict begin 25 24 bop Black -106 -193 a Fn(3.4)35 b(Some)g
(additional)g(tips)2732 b(25)p -106 -155 3945 4 v Black
487 127 a Fp(The)25 b(\014nal)h(mesh)f(is)h(displa)m(y)m(ed.)40
b(If)25 b(there)h(remain)f(some)i(triangles)f(come)h(bac)m(k)g(to)f
(the)g(previous)487 240 y(step)39 b(and)f(\014gure)h(out)g(ho)m(w)g(to)
g(mo)s(dify)f(the)h(p)s(oin)m(ts)g(p)s(er)f(edge)i(to)f(help)g(the)g
(mesher.)65 b(Some)487 353 y(exp)s(erience)31 b(is)f(needed)g(here.)p
Black 371 487 a(3.)p Black 46 w(Ren)m(um)m(b)s(er)g(the)g(mesh,)g(in)g
(order)g(to)h(optimize)h(computations:)487 600 y Fa(*)p
Fb(<)p Fa(RENUMBER)p Fb(>)p Black 371 735 a Fp(4.)p Black
46 w(De\014ne)41 b(the)f(b)s(oundary)f(condition)i(for)f(the)h(4)f
(corner)h(no)s(des)e(of)i(the)f(mo)s(del:)61 b(\(these)41
b(no)s(des)487 848 y(b)s(elong)31 b(to)g(2)f(external)i(b)s(oundaries)d
(so)h(they)h(w)m(ere)g(giv)m(en)g(a)g(reference)g(n)m(um)m(b)s(er)e
(=0\))487 961 y Fa(\(MODIF)p 817 961 28 4 v 32 w(REF\))i($n=$)g(\(co)m
(rner\))i Fo(f)p Fa(click)e(close)g(to)g(co)m(rner,)h(inside)e(element)
p Fo(g)487 1074 y Fp(Where)38 b(n)f(is)h(the)g(reference)g(n)m(um)m(b)s
(er)f(of)h(one)g(of)g(the)g(2)g(b)s(oundaries)e(con)m(taining)k(the)e
(corner)487 1187 y(no)s(de.)i(Zo)s(oming)29 b(can)g(b)s(e)g(useful.)39
b(The)29 b(same)g(op)s(eration)h(m)m(ust)f(b)s(e)f(p)s(erformed)g(for)g
(the)i(corner)487 1300 y(no)s(des)35 b(of)h(the)g(sub)s(domains)f(b)s
(elonging)h(to)g(an)g(external)h(b)s(oundary)-8 b(,)36
b(and)f(for)h(the)g(the)g(crac)m(k)487 1412 y(tip)31
b(no)s(des.)39 b Fk(However,)33 b(as)g(a)g(sp)-5 b(e)g(cial)34
b(c)-5 b(ase,)33 b(cr)-5 b(ack)33 b(tip)h(no)-5 b(des)33
b(must)g(b)-5 b(e)33 b(assigne)-5 b(d)34 b(the)f(-1)f(tag.)p
Black 371 1547 a Fp(5.)p Black 46 w(Exp)s(ort)e(the)g(mesh:)487
1660 y Fb(<)p Fa(SA)-10 b(VE)p Fb(<)487 1773 y Fp(Tw)m(o)31
b(questions)f(are)h(ask)m(ed)g(in)f(the)h(b)s(ottom)f(prompt:)p
Black 566 1908 a Fo(\017)p Black 46 w Fp(F)-8 b(ormat)32
b(of)e(the)h(\014le,)g(y)m(ou)f(m)m(ust)h(select:)657
2021 y Fa("ftq")p Black 566 2144 a Fo(\017)p Black 46
w Fp(Pre\014x)f(name)g(for)g(the)h(\014le)657 2257 y
Fa("name")657 2370 y Fp(The)f(resulting)g(\014le)h(name)f(will)h(b)s(e)
f Fg(name.ftq)-106 2734 y Fs(3.4)135 b(Some)45 b(additional)i(tips)p
Black 30 2969 a Fo(\017)p Black 46 w Fp(Whenev)m(er)27
b(p)s(ossible)f(it)h(is)g(b)s(etter)g(to)g(mesh)f(a)h(domain)f(with)h
(a)g Fk(structur)-5 b(e)g(d)37 b Fp(mesh)26 b(\(a)h(deformed)f
(cartesian)121 3082 y(grid\).)41 b(This)28 b(can)i(b)s(e)f(de\014ned)f
(with)h Fa(\(QUADRANGULA)-8 b(TE\))p Fp(,)29 b(during)f(the)i(PREP)-8
b(ARE)29 b(step.)40 b(Chec)m(k)30 b(the)121 3195 y(EMC2)h(user's)e
(guide)i(for)f(a)h(description)f(of)h(this)f(feature.)p
Black 30 3371 a Fo(\017)p Black 46 w Fp(T)-8 b(o)31 b(load)g(an)f
(existen)m(t)i(pro)5 b(ject,)31 b(in)f(the)h(construction)g(to)s(ol)g
(or)f(in)g(the)h(preparation)f(mesh)g(to)s(ol:)121 3484
y Fb(<)p Fa(RESTORE)p Fb(<)f Fa("name")121 3597 y Fp(EMC2)i(will)g(lo)s
(ok)g(for)g(the)g(\014le)f Fg(name.emc2)p 1658 3597 29
4 v 32 w(bd)p Fp(.)41 b(Bew)m(are:)i(the)31 b(pro)5 b(ject)31
b(loaded)h(will)f(replace)g(the)g(actual)121 3710 y(pro)5
b(ject)31 b(if)f(an)m(y)-8 b(,)32 b(there)e(is)h(no)f(sup)s(erp)s
(osition.)p Black 30 3886 a Fo(\017)p Black 46 w Fp(BUG)d(W)-10
b(ARNING)27 b(\(13/07/01\):)43 b(the)26 b(Sun)e(release)k(of)e(EMC2)g
(has)g(a)h(bug)e(with)h(the)g(reference)h(indices)f(in)121
3999 y(the)31 b(ftq)g(format)h(This)e(bug)h(is)g(\014xed)f(in)h(the)h
(2.12c)h(v)m(ersion.)43 b(If)31 b(y)m(ou)g(w)m(ork)g(on)g(a)h(Sun)e
(station,)i(do)m(wnload)121 4112 y(the)f(most)f(recen)m(t)i(v)m(ersion)
f(of)f(the)h(sources,)f(rather)h(than)f(the)g(executable,)i(and)e
(compile)i(it)e(y)m(ourself.)p Black 30 4288 a Fo(\017)p
Black 46 w Fp(T)-8 b(o)27 b(densify)f(\(h-re\014nemen)m(t\))h(an)g
(existen)m(t)h(mesh)e(use)h(the)g(script)f Fg(SEM2DPACK/POST/href.csh)p
Fp(.)33 b(It)27 b(edits)121 4401 y(the)k Fg(*.emc2)p
572 4401 V 32 w(bd)f Fp(\014le,)h(then)f(y)m(ou)h(can)f(restore)h(it)g
(in)f(EMC2)h(and)f(sa)m(v)m(e)h(it)g(in)f Fg(*.ftq)f
Fp(format.)p Black 30 4577 a Fo(\017)p Black 46 w Fp(T)-8
b(o)31 b(create)h(a)e(fault,)h(in)f Fa(EDIT)p 1156 4577
28 4 v 33 w(MESH)g Fp(mo)s(de:)p Black 205 4753 a(a.)p
Black 46 w(Crac)m(k)h(an)f(existen)m(t)i(edge:)321 4866
y Fa(\(CRA)m(CK\))f(\(segment\))p Black 200 5001 a Fp(b.)p
Black 45 w(Giv)m(e)h(a)e(reference)h(n)m(um)m(b)s(er)e(to)i(eac)m(h)h
(side)e(of)h(the)f(fault)h(:)321 5114 y Fa(\(MODIF)p
651 5114 V 32 w(REF\))g($n=$)g(\(segment\))p Black 210
5249 a Fp(c.)p Black 46 w(Giv)m(e)h(the)e(tag)i("-1")g(to)f(crac)m(k)h
(tip)e(no)s(des:)321 5361 y Fa(\(MODIF)p 651 5361 V 32
w(REF\))h($-1=$)g(\(co)m(rner\))i(*)p Fo(f)p Fa(click)f(close)f(to)g
(crack)g(tip)f(no)s(de,)h(inside)f(element)p Fo(g)p Black
30 5651 a(\017)p Black 46 w Fp(Note)37 b(that)f(only)g(Q4)g(elemen)m
(ts)h(\(4)g(con)m(trol)g(no)s(des\))e(are)h(supp)s(orted.)55
b(F)-8 b(or)37 b(a)f(smo)s(other)g(description)f(of)121
5763 y(b)s(oundaries)29 b(Q9)h(w)m(ould)g(b)s(e)g(desirable.)p
Black Black eop end
%%Page: 26 26
TeXDict begin 26 25 bop Black Black -106 874 a Fu(Bibliograph)-6
b(y)p Black Black -10 1319 a Fp(Ampuero,)31 b(J.-P)-8
b(.)31 b(\(2002\).)j Fk(Etude)f(physique)h(et)f(num)n(\023)-44
b(erique)33 b(de)h(la)f(nucl)n(\023)-44 b(eation)34 b(des)g(s)n(\023)
-44 b(eismes)p Fp(.)32 b(Ph.)e(D.)i(thesis,)126 1432
y(Univ)m(ersit)m(\023)-43 b(e)33 b(P)m(aris)d(7,)h(Denis)g(Diderot,)h
(P)m(aris.)p Black Black -10 1582 a(Andrews,)f(D.)h(\(1999\).)j(T)-8
b(est)32 b(of)g(t)m(w)m(o)h(metho)s(ds)e(for)h(faulting)g(in)g
(\014nite)g(di\013erence)g(calculations.)i Fk(Bul)5 b(l.)34
b(Seis.)126 1695 y(So)-5 b(c.)33 b(A)n(m.)d(89)p Fp(,)h(931{937.)p
Black Black -10 1845 a(Komatitsc)m(h,)98 b(D.)84 b(\(1997\).)j
Fk(M)n(\023)-44 b(etho)-5 b(des)82 b(sp)-5 b(e)g(ctr)g(ales)84
b(et)79 b(\023)-44 b(el)n(\023)g(ements)83 b(sp)-5 b(e)g(ctr)g(aux)83
b(p)-5 b(our)83 b(l')n(\023)-44 b(equation)82 b(de)126
1958 y(l')n(\023)-44 b(elasto)-5 b(dynamique)31 b(2D)d(et)g(3D)g(en)h
(milieu)f(h)n(\023)-44 b(et)n(\023)g(er)-5 b(o)g(g)n(\022)-44
b(ene)p Fp(.)27 b(Ph.)e(D.)h(thesis,)h(Institut)f(de)f(Ph)m(ysique)h
(du)e(Glob)s(e)126 2071 y(de)30 b(P)m(aris,)h(P)m(aris.)p
Black Black -10 2221 a(Komatitsc)m(h,)c(D.)f(and)e(J.)h(T)-8
b(romp)24 b(\(1999\).)k(In)m(tro)s(duction)d(to)g(the)h(sp)s
(ectral-elemen)m(t)h(metho)s(d)d(for)h(3-D)h(seismic)126
2334 y(w)m(a)m(v)m(e)32 b(propagation.)g Fk(Ge)-5 b(ophys.)34
b(J.)f(Int.)d(139)p Fp(,)i(806{822.)p Black Black -10
2485 a(Komatitsc)m(h,)26 b(D.)d(and)f(J.)g(P)-8 b(.)23
b(Vilotte)i(\(1998\).)g(The)e(sp)s(ectral)f(elemen)m(t)j(metho)s(d:)36
b(an)22 b(e\016cien)m(t)i(to)s(ol)g(to)f(sim)m(ulate)126
2598 y(the)31 b(seismic)g(resp)s(onse)e(of)i(2D)g(and)f(3D)h
(geological)j(structures.)c Fk(Bul)5 b(l.)32 b(Seis.)h(So)-5
b(c.)33 b(A)n(m.)d(88)p Fp(,)h(368{392.)p Black Black
-10 2748 a(Komatitsc)m(h,)43 b(D.,)g(J.)c(P)-8 b(.)40
b(Vilotte,)k(R.)c(V)-8 b(ai,)43 b(and)c(F.)h(J.)g(S\023)-45
b(anc)m(hez-Sesma)40 b(\(1999\).)i(The)d(Sp)s(ectral)h(Elemen)m(t)126
2861 y(metho)s(d)31 b(for)h(elastic)i(w)m(a)m(v)m(e)g(equations:)45
b(application)33 b(to)g(2D)g(and)e(3D)i(seismic)g(problems.)e
Fk(Int.)j(J.)g(Num.)126 2974 y(Meth.)e(Engng)38 b(45)12
b Fp(\(9\),)33 b(1139{1164.)p Black Black -10 3124 a(P)m(atera,)49
b(A.)44 b(\(1984\).)i(A)e(sp)s(ectral)g(elemen)m(t)h(metho)s(d)f(for)f
(\015uid)g(dynamics:)67 b(laminar)44 b(\015o)m(w)f(in)h(a)g(c)m(hannel)
126 3237 y(expansion.)30 b Fk(J.)j(Comp.)g(Phys.)e(54)p
Fp(,)g(468{488.)p Black Black -10 3387 a(V)-8 b(ai,)27
b(R.,)g(J.)e(M.)g(Castillo-Co)m(v)-5 b(arrubias,)28 b(F.)e(J.)f(S\023)
-45 b(anc)m(hez-Sesma,)27 b(D.)f(Komatitsc)m(h,)i(and)c(J.)h(P)-8
b(.)26 b(Vilotte)h(\(1998\).)126 3500 y(Elastic)32 b(w)m(a)m(v)m(e)h
(propagation)e(in)g(an)f(irregularly)h(la)m(y)m(ered)i(medium.)d
Fk(Soil)j(Dyn.)g(Earthquake)h(Eng)k(18)12 b Fp(\(1\),)126
3613 y(11{18.)p Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
